import torch
stgcn_80e_ntu60_xsub_keypoint_config=[
['get_rank', 'torch.distributed', [], [], {}, 5],
['get_world_size', 'torch.distributed', [], [], {}, 10028],
['randperm', 'torch', [], [[40090]], {'generator': '<torch._C.Generator object at 0x7f9c9f03f9f0>'}, 1],
['permute', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(16, 3, 300, 17, 2), (16, 2, 17, 3, 300), (10, 3, 300, 17, 2), (10, 2, 17, 3, 300)], [0, 0, 0, 0], [4, 1, 4, 1], [3, 3, 3, 3], [1, 4, 1, 4], [2, 2, 2, 2]], {}, 4],
['add', 'torch.Tensor', ['torch.cuda.LongTensor'], [[()], [1]], {}, 1],
['batch_norm', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(32, 51, 300), (32, 64, 300, 17), (32, 128, 150, 17), (32, 128, 300, 17), (32, 256, 75, 17), (32, 256, 150, 17), (20, 51, 300), (20, 64, 300, 17), (20, 128, 150, 17), (20, 128, 300, 17), (20, 256, 75, 17), (20, 256, 150, 17)], [(51,), (64,), (128,), (128,), (256,), (256,), (51,), (64,), (128,), (128,), (256,), (256,)], [(51,), (64,), (128,), (128,), (256,), (256,), (51,), (64,), (128,), (128,), (256,), (256,)], [(51,), (64,), (128,), (128,), (256,), (256,), (51,), (64,), (128,), (128,), (256,), (256,)], [(51,), (64,), (128,), (128,), (256,), (256,), (51,), (64,), (128,), (128,), (256,), (256,)], [True, True, True, True, True, True, True, True, True, True, True, True], [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1], [1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05]], {}, 12],
['mul', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(3, 17, 17)], [(3, 17, 17)]], {}, 1],
['conv2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(32, 3, 300, 17), (32, 64, 300, 17), (32, 64, 300, 17), (32, 64, 300, 17), (32, 64, 300, 17), (32, 128, 300, 17), (32, 128, 150, 17), (32, 128, 150, 17), (32, 128, 150, 17), (32, 128, 150, 17), (32, 256, 150, 17), (32, 256, 75, 17), (32, 256, 75, 17), (16, 256, 1, 1), (20, 3, 300, 17), (20, 64, 300, 17), (20, 64, 300, 17), (20, 64, 300, 17), (20, 64, 300, 17), (20, 128, 300, 17), (20, 128, 150, 17), (20, 128, 150, 17), (20, 128, 150, 17), (20, 128, 150, 17), (20, 256, 150, 17), (20, 256, 75, 17), (20, 256, 75, 17), (10, 256, 1, 1)], [(192, 3, 1, 1), (64, 64, 9, 1), (192, 64, 1, 1), (128, 64, 1, 1), (384, 64, 1, 1), (128, 128, 9, 1), (384, 128, 1, 1), (128, 128, 9, 1), (256, 128, 1, 1), (768, 128, 1, 1), (256, 256, 9, 1), (768, 256, 1, 1), (256, 256, 9, 1), (60, 256, 1, 1), (192, 3, 1, 1), (64, 64, 9, 1), (192, 64, 1, 1), (128, 64, 1, 1), (384, 64, 1, 1), (128, 128, 9, 1), (384, 128, 1, 1), (128, 128, 9, 1), (256, 128, 1, 1), (768, 128, 1, 1), (256, 256, 9, 1), (768, 256, 1, 1), (256, 256, 9, 1), (60, 256, 1, 1)], [(192,), (64,), (192,), (128,), (384,), (128,), (384,), (128,), (256,), (768,), (256,), (768,), (256,), (60,), (192,), (64,), (192,), (128,), (384,), (128,), (384,), (128,), (256,), (768,), (256,), (768,), (256,), (60,)], [(1, 1), (1, 1), (1, 1), (2, 1), (1, 1), (2, 1), (1, 1), (1, 1), (2, 1), (1, 1), (2, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 1), (1, 1), (2, 1), (1, 1), (1, 1), (2, 1), (1, 1), (2, 1), (1, 1), (1, 1), (1, 1)], [(0, 0), (4, 0), (0, 0), (0, 0), (0, 0), (4, 0), (0, 0), (4, 0), (0, 0), (0, 0), (4, 0), (0, 0), (4, 0), (0, 0), (0, 0), (4, 0), (0, 0), (0, 0), (0, 0), (4, 0), (0, 0), (4, 0), (0, 0), (0, 0), (4, 0), (0, 0), (4, 0), (0, 0)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], {}, 28],
['einsum', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [['nkctv,kvw->nctw', 'nkctv,kvw->nctw', 'nkctv,kvw->nctw', 'nkctv,kvw->nctw', 'nkctv,kvw->nctw', 'nkctv,kvw->nctw', 'nkctv,kvw->nctw', 'nkctv,kvw->nctw', 'nkctv,kvw->nctw', 'nkctv,kvw->nctw'], [((32, 3, 64, 300, 17), (3, 17, 17)), ((32, 3, 128, 300, 17), (3, 17, 17)), ((32, 3, 128, 150, 17), (3, 17, 17)), ((32, 3, 256, 150, 17), (3, 17, 17)), ((32, 3, 256, 75, 17), (3, 17, 17)), ((20, 3, 64, 300, 17), (3, 17, 17)), ((20, 3, 128, 300, 17), (3, 17, 17)), ((20, 3, 128, 150, 17), (3, 17, 17)), ((20, 3, 256, 150, 17), (3, 17, 17)), ((20, 3, 256, 75, 17), (3, 17, 17))]], {}, 10],
['relu', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(32, 64, 300, 17), (32, 128, 300, 17), (32, 128, 150, 17), (32, 256, 150, 17), (32, 256, 75, 17), (20, 64, 300, 17), (20, 128, 300, 17), (20, 128, 150, 17), (20, 256, 150, 17), (20, 256, 75, 17)]], {'inplace': [True, True, True, True, True, True, True, True, True, True]}, 10],
['relu_', 'torch', ['torch.cuda.FloatTensor'], [[(32, 64, 300, 17), (32, 128, 300, 17), (32, 128, 150, 17), (32, 256, 150, 17), (32, 256, 75, 17), (20, 64, 300, 17), (20, 128, 300, 17), (20, 128, 150, 17), (20, 256, 150, 17), (20, 256, 75, 17)]], {}, 10],
['dropout', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(32, 64, 300, 17), (32, 128, 150, 17), (32, 256, 75, 17), (20, 64, 300, 17), (20, 128, 150, 17), (20, 256, 75, 17)], [0, 0, 0, 0, 0, 0], [True, True, True, True, True, True], [True, True, True, True, True, True]], {}, 6],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(32, 64, 300, 17), (20, 64, 300, 17)], [0, 0]], {}, 2],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(32, 64, 300, 17), (32, 128, 150, 17), (32, 256, 75, 17), (20, 64, 300, 17), (20, 128, 150, 17), (20, 256, 75, 17)], [(32, 64, 300, 17), (32, 128, 150, 17), (32, 256, 75, 17), (20, 64, 300, 17), (20, 128, 150, 17), (20, 256, 75, 17)]], {}, 6],
['adaptive_avg_pool2d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(32, 256, 75, 17), (20, 256, 75, 17)], [(1, 1), (1, 1)]], {}, 2],
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(16, 2, 256, 1, 1), (10, 2, 256, 1, 1)]], {'dim': [1, 1]}, 2],
['cross_entropy', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.LongTensor'], [[(16, 60), (10, 60)], [(16,), (10,)]], {}, 2],
['imul', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1.0]], {}, 1],
['mean', 'torch.Tensor', ['torch.cuda.DoubleTensor'], [[()]], {}, 1],
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()]], {}, 1],
['radd', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [0]], {}, 1],
['div_', 'torch.Tensor', ['torch.cuda.DoubleTensor'], [[()], [1]], {}, 1],
['all_reduce', 'torch.distributed', ['torch.cuda.DoubleTensor'], [[()]], {}, 1],
['div_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1]], {}, 1],
['all_reduce', 'torch.distributed', ['torch.cuda.FloatTensor'], [[()]], {}, 1],
['sgd', 'torch.optim._functional', ['torch.cuda.FloatTensor'], [[(51,), (192, 3, 1, 1), (192,), (64,), (64, 64, 9, 1), (192, 64, 1, 1), (384, 64, 1, 1), (384,), (128,), (128, 128, 9, 1), (128, 64, 1, 1), (384, 128, 1, 1), (768, 128, 1, 1), (768,), (256,), (256, 256, 9, 1), (256, 128, 1, 1), (768, 256, 1, 1), (3, 17, 17), (60, 256, 1, 1), (60,)], [(51,), (192, 3, 1, 1), (192,), (64,), (64, 64, 9, 1), (192, 64, 1, 1), (384, 64, 1, 1), (384,), (128,), (128, 128, 9, 1), (128, 64, 1, 1), (384, 128, 1, 1), (768, 128, 1, 1), (768,), (256,), (256, 256, 9, 1), (256, 128, 1, 1), (768, 256, 1, 1), (3, 17, 17), (60, 256, 1, 1), (60,)], [(51,), (192, 3, 1, 1), (192,), (64,), (64, 64, 9, 1), (192, 64, 1, 1), (384, 64, 1, 1), (384,), (128,), (128, 128, 9, 1), (128, 64, 1, 1), (384, 128, 1, 1), (768, 128, 1, 1), (768,), (256,), (256, 256, 9, 1), (256, 128, 1, 1), (768, 256, 1, 1), (3, 17, 17), (60, 256, 1, 1), (60,)]], {'weight_decay': 0.0001, 'momentum': 0.9, 'lr': 0.1, 'dampening': 0, 'nesterov': True}, 1],
['mul_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(51,), (192, 3, 1, 1), (192,), (64,), (64, 64, 9, 1), (192, 64, 1, 1), (384, 64, 1, 1), (384,), (128,), (128, 128, 9, 1), (128, 64, 1, 1), (384, 128, 1, 1), (768, 128, 1, 1), (768,), (256,), (256, 256, 9, 1), (256, 128, 1, 1), (768, 256, 1, 1), (3, 17, 17), (60, 256, 1, 1), (60,)], [0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9]], {}, 21],
['barrier', 'torch.distributed', [], [], {}, 1],
]
res50_coco_256x192_rle_config=[
['eye', 'torch', [], [[2]], {}, 1],
['get_rank', 'torch.distributed', [], [], {}, 7],
['get_world_size', 'torch.distributed', [], [], {}, 9],
['randperm', 'torch', [], [[149813]], {'generator': '<torch._C.Generator object at 0x7f68d0ff0048>'}, 1],
['conv2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 3, 256, 192), (64, 64, 64, 48), (64, 64, 64, 48), (64, 64, 64, 48), (64, 256, 64, 48), (64, 256, 64, 48), (64, 128, 64, 48), (64, 128, 32, 24), (64, 256, 64, 48), (64, 512, 32, 24), (64, 128, 32, 24), (64, 512, 32, 24), (64, 256, 32, 24), (64, 256, 16, 12), (64, 512, 32, 24), (64, 1024, 16, 12), (64, 256, 16, 12), (64, 1024, 16, 12), (64, 512, 16, 12), (64, 512, 8, 6), (64, 1024, 16, 12), (64, 2048, 8, 6), (64, 512, 8, 6)], [(64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1)], [(3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], {}, 23],
['add', 'torch.Tensor', ['torch.cuda.LongTensor'], [[()], [1]], {}, 1],
['batch_norm', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 64, 128, 96), (64, 64, 64, 48), (64, 256, 64, 48), (64, 128, 64, 48), (64, 128, 32, 24), (64, 512, 32, 24), (64, 256, 32, 24), (64, 256, 16, 12), (64, 1024, 16, 12), (64, 512, 16, 12), (64, 512, 8, 6), (64, 2048, 8, 6)], [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,)], [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,)], [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,)], [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,)], [True, True, True, True, True, True, True, True, True, True, True, True], [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1], [1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05]], {}, 12],
['relu', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(64, 64, 128, 96), (64, 64, 64, 48), (64, 256, 64, 48), (64, 128, 64, 48), (64, 128, 32, 24), (64, 512, 32, 24), (64, 256, 32, 24), (64, 256, 16, 12), (64, 1024, 16, 12), (64, 512, 16, 12), (64, 512, 8, 6), (64, 2048, 8, 6)]], {'inplace': [True, True, True, True, True, True, True, True, True, True, True, True]}, 12],
['max_pool2d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(64, 64, 128, 96)], [3], [2], [1], [1], [False], [False]], {}, 1],
['iadd', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 256, 64, 48), (64, 512, 32, 24), (64, 1024, 16, 12), (64, 2048, 8, 6)], [(64, 256, 64, 48), (64, 512, 32, 24), (64, 1024, 16, 12), (64, 2048, 8, 6)]], {}, 4],
['adaptive_avg_pool2d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(64, 2048, 8, 6)], [(1, 1)]], {}, 1],
['linear', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 2048), (1088, 2), (1088, 64), (1088, 64)], [(68, 2048), (64, 2), (64, 64), (2, 64)], [(68,), (64,), (64,), (2,)]], {}, 4],
['sigmoid', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 17, 2)]], {}, 1],
['sub', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 17, 2), (1088, 2), (1088, 2), (1088,), (64, 17, 2)], [(64, 17, 2), (1088, 2), (2,), (), (64, 17, 1)]], {}, 5],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 17, 2)], [1e-09]], {}, 1],
['truediv', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 17, 2)], [(64, 17, 2)]], {}, 1],
['mul', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(2,), (1088, 2), (1088, 2)], [(1088, 2), (2,), (1088, 2)]], {}, 3],
['leaky_relu', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(1088, 64)], [0.01], [False]], {}, 1],
['tanh', 'torch', ['torch.cuda.FloatTensor'], [[(1088, 2)]], {}, 1],
['rsub', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(2,)], [1]], {}, 1],
['neg', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(1088, 2)]], {}, 1],
['exp', 'torch', ['torch.cuda.FloatTensor'], [[(1088, 2)]], {}, 1],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(1088, 2), (1088,), (64, 17, 2)], [(1088, 2), (1088,), (64, 17, 2)]], {}, 3],
['sum', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(1088, 2)]], {'dim': [1]}, 1],
['isub', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(1088,)], [(1088,)]], {}, 1],
['expand', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(2, 2), (2,)], [(-1, -1), (-1,)]], {}, 2],
['eq', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(2,), (1088, 2)], [(2,), (1088, 2)]], {}, 2],
['all', 'torch.Tensor', ['torch.cuda.BoolTensor'], [[(2,), (1088, 2)], [-1, -1]], {}, 2],
['all', 'torch.Tensor', ['torch.cuda.BoolTensor'], [[(), (1,), (1088,)]], {}, 3],
['cholesky_ex', 'torch.linalg', ['torch.cuda.FloatTensor'], [[(2, 2)]], {}, 1],
['eq', 'torch.Tensor', ['torch.cuda.IntTensor'], [[()], [0]], {}, 1],
['cholesky', 'torch.linalg', ['torch.cuda.FloatTensor'], [[(2, 2)]], {}, 1],
['permute', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(1088, 2), (1088,)], [[0, 1], [0]]], {}, 2],
['permute', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(1088, 1, 2)], [1], [2], [0]], {}, 1],
['triangular_solve', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(1, 2, 1088)], [(1, 2, 2)]], {'upper': False}, 1],
['pow', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(1, 2, 1088)], [2]], {}, 1],
['sum', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(1, 2, 1088), (2,)], [-2, -1]], {}, 2],
['t', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(1, 1088)]], {}, 1],
['diagonal', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(2, 2)]], {'dim1': -2, 'dim2': -1}, 1],
['log', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(2,), (64, 17, 2)]], {}, 2],
['radd', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(1088,), ()], [3.6757541328186907, 0]], {}, 2],
['rmul', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(1088,)], [-0.5]], {}, 1],
['mul', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 17, 2)], [2]], {}, 1],
['abs', 'torch', ['torch.cuda.FloatTensor'], [[(64, 17, 2)]], {}, 1],
['imul', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 17, 2)], [(64, 17, 2)]], {}, 1],
['itruediv', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 17, 2)], [64]], {}, 1],
['sum', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 17, 2)]], {}, 1],
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()]], {}, 1],
['div_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1]], {}, 1],
['all_reduce', 'torch.distributed', ['torch.cuda.FloatTensor'], [[()]], {}, 1],
['adam', 'torch.optim._functional', ['torch.cuda.FloatTensor'], [[(64, 3, 7, 7), (64,), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (256,), (64, 256, 1, 1), (128, 256, 1, 1), (128,), (128, 128, 3, 3), (512, 128, 1, 1), (512,), (512, 256, 1, 1), (128, 512, 1, 1), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024,), (1024, 512, 1, 1), (256, 1024, 1, 1), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048,), (2048, 1024, 1, 1), (512, 2048, 1, 1), (64, 2), (64, 64), (2, 64), (2,), (68, 2048), (68,)]], {'amsgrad': False, 'beta1': 0.9, 'beta2': 0.999, 'lr': 1.000000000000001e-06, 'weight_decay': 0, 'eps': 1e-08}, 32],
]
hrnet_w32_coco_wholebody_512x512_config=[
['randperm', 'torch', [], [[64115]], {'generator': '<torch._C.Generator object at 0x7fed13709738>'}, 1],
['conv2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(24, 3, 512, 512), (24, 64, 256, 256), (24, 64, 128, 128), (24, 64, 128, 128), (24, 64, 128, 128), (24, 256, 128, 128), (24, 256, 128, 128), (24, 256, 128, 128), (24, 32, 128, 128), (24, 64, 64, 64), (24, 64, 64, 64), (24, 32, 128, 128), (24, 64, 64, 64), (24, 128, 32, 32), (24, 128, 32, 32), (24, 128, 32, 32), (24, 32, 128, 128), (24, 32, 64, 64), (24, 128, 32, 32), (24, 256, 16, 16), (24, 256, 16, 16), (24, 256, 16, 16), (24, 256, 16, 16), (24, 32, 64, 64), (24, 32, 32, 32), (24, 64, 64, 64), (24, 64, 32, 32)], [(64, 3, 3, 3), (64, 64, 3, 3), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (32, 256, 3, 3), (64, 256, 3, 3), (32, 32, 3, 3), (64, 64, 3, 3), (32, 64, 1, 1), (64, 32, 3, 3), (128, 64, 3, 3), (128, 128, 3, 3), (32, 128, 1, 1), (64, 128, 1, 1), (32, 32, 3, 3), (128, 32, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (32, 256, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (32, 32, 3, 3), (256, 32, 3, 3), (64, 64, 3, 3), (256, 64, 3, 3)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2)], [(1, 1), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (0, 0), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], {}, 27],
['add', 'torch.Tensor', ['torch.cuda.LongTensor'], [[()], [1]], {}, 1],
['batch_norm', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(24, 64, 256, 256), (24, 64, 128, 128), (24, 256, 128, 128), (24, 32, 128, 128), (24, 64, 64, 64), (24, 32, 64, 64), (24, 128, 32, 32), (24, 32, 32, 32), (24, 64, 32, 32), (24, 256, 16, 16), (24, 32, 16, 16), (24, 64, 16, 16), (24, 128, 16, 16)], [(64,), (64,), (256,), (32,), (64,), (32,), (128,), (32,), (64,), (256,), (32,), (64,), (128,)], [(64,), (64,), (256,), (32,), (64,), (32,), (128,), (32,), (64,), (256,), (32,), (64,), (128,)], [(64,), (64,), (256,), (32,), (64,), (32,), (128,), (32,), (64,), (256,), (32,), (64,), (128,)], [(64,), (64,), (256,), (32,), (64,), (32,), (128,), (32,), (64,), (256,), (32,), (64,), (128,)], [True, True, True, True, True, True, True, True, True, True, True, True, True], [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1], [1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05]], {}, 13],
['relu', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(24, 64, 256, 256), (24, 64, 128, 128), (24, 256, 128, 128), (24, 32, 128, 128), (24, 64, 64, 64), (24, 128, 32, 32), (24, 32, 64, 64), (24, 256, 16, 16), (24, 32, 32, 32), (24, 64, 32, 32)]], {'inplace': [True, True, True, True, True, True, True, True, True, True]}, 10],
['relu_', 'torch', ['torch.cuda.FloatTensor'], [[(24, 64, 256, 256), (24, 64, 128, 128), (24, 256, 128, 128), (24, 32, 128, 128), (24, 64, 64, 64), (24, 128, 32, 32), (24, 32, 64, 64), (24, 256, 16, 16), (24, 32, 32, 32), (24, 64, 32, 32)]], {}, 10],
['iadd', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(24, 256, 128, 128), (24, 32, 128, 128), (24, 64, 64, 64), (24, 128, 32, 32), (24, 256, 16, 16)], [(24, 256, 128, 128), (24, 32, 128, 128), (24, 64, 64, 64), (24, 128, 32, 32), (24, 256, 16, 16)]], {}, 5],
['radd', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(24, 32, 128, 128), (24, 64, 64, 64), (24, 128, 32, 32), (24, 256, 16, 16), ()], [0, 0, 0, 0, 0]], {}, 5],
['interpolate', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(24, 32, 64, 64), (24, 32, 32, 32), (24, 64, 32, 32), (24, 32, 16, 16), (24, 64, 16, 16), (24, 128, 16, 16)], [None, None, None, None, None, None], [2.0, 4.0, 2.0, 8.0, 4.0, 2.0], ['nearest', 'nearest', 'nearest', 'nearest', 'nearest', 'nearest'], [None, None, None, None, None, None]], {}, 6],
['conv2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(24, 32, 128, 128)], [(266, 32, 1, 1)], [(266,)], [(1, 1)], [(0, 0)], [(1, 1)], [1]], {}, 1],
['sum', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(24, 133, 128, 128)]], {'dim': (2, 3), 'keepdim': True}, 1],
['gt', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(24, 133, 1, 1)], [0]], {}, 1],
['sub', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(24, 133, 128, 128), (96, 1), (2, 1), (2, 2), (17, 1), (11, 1), (112, 1), (54, 1), (9, 1), (7, 1), (3, 3), (4, 1), (28, 1), (3, 1), (81, 1), (16, 1), (84, 1), (85, 1), (8, 1), (9, 9), (1, 1), (126, 1), (83, 1), (14, 1), (131, 1), (49, 1), (98, 1), (97, 1), (93, 1), (77, 1), (73, 1), (6, 6), (79, 1), (102, 1), (76, 1), (33, 1)], [(24, 133, 128, 128), (96, 1), (2, 1), (2, 2), (17, 1), (11, 1), (112, 1), (54, 1), (9, 1), (7, 1), (3, 3), (4, 1), (28, 1), (3, 1), (81, 1), (16, 1), (84, 1), (85, 1), (8, 1), (9, 9), (1, 1), (126, 1), (83, 1), (14, 1), (131, 1), (49, 1), (98, 1), (97, 1), (93, 1), (77, 1), (73, 1), (6, 6), (79, 1), (102, 1), (76, 1), (33, 1)]], {}, 36],
['pow', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(24, 133, 128, 128), (96, 1), (2, 1), (2, 2), (17, 1), (11, 1), (112, 1), (54, 1), (9, 1), (7, 1), (3, 3), (4, 1), (28, 1), (3, 1), (81, 1), (16, 1), (84, 1), (85, 1), (8, 1), (9, 9), (1, 1), (126, 1), (83, 1), (14, 1), (131, 1), (49, 1), (98, 1), (97, 1), (93, 1), (77, 1), (73, 1), (6, 6), (79, 1), (102, 1), (76, 1), (33, 1)], [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]], {}, 36],
['expand_as', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(24, 133, 1, 1), (24, 1, 128, 128), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,)], [(24, 133, 128, 128), (24, 133, 128, 128), (96, 1), (2, 1), (17, 1), (11, 1), (112, 1), (54, 1), (9, 1), (7, 1), (4, 1), (28, 1), (3, 1), (81, 1), (16, 1), (84, 1), (85, 1), (8, 1), (1, 1), (126, 1), (83, 1), (14, 1), (131, 1), (49, 1), (98, 1), (97, 1), (93, 1), (77, 1), (73, 1), (79, 1), (102, 1), (76, 1), (33, 1)]], {}, 33],
['mul', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(24, 133, 128, 128)], [(24, 133, 128, 128)]], {}, 1],
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(24, 133, 128, 128), (24, 133, 128), (24, 133), (96, 1), (2, 1), (17, 1), (11, 1), (112, 1), (54, 1), (9, 1), (7, 1), (4, 1), (28, 1), (3, 1), (81, 1), (16, 1), (84, 1), (85, 1), (8, 1), (1, 1), (126, 1), (83, 1), (14, 1), (131, 1), (49, 1), (98, 1), (97, 1), (93, 1), (77, 1), (73, 1), (79, 1), (102, 1), (76, 1), (33, 1), (24,)]], {'dim': [3, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]}, 35],
['mul', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(24,), (), (24,)], [1.0, 0.5, 0.001]], {}, 3],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['mean', 'torch', ['torch.cuda.FloatTensor'], [[(96, 1), (2, 1), (17, 1), (11, 1), (112, 1), (54, 1), (9, 1), (7, 1), (4, 1), (28, 1), (3, 1), (81, 1), (16, 1), (84, 1), (85, 1), (8, 1), (1, 1), (126, 1), (83, 1), (14, 1), (131, 1), (49, 1), (98, 1), (97, 1), (93, 1), (77, 1), (73, 1), (79, 1), (102, 1), (76, 1), (33, 1), ()]], {}, 32],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,))]], {}, 1],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[()], [()]], {}, 1],
['expand', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(2, 1), (3, 1), (9, 1), (6, 1)], [2, 3, 9, 6], [2, 3, 9, 6]], {}, 4],
['permute', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(2, 2), (3, 3), (9, 9), (6, 6)], [1, 1, 1, 1], [0, 0, 0, 0]], {}, 4],
['neg', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(2, 2), (3, 3), (9, 9), (6, 6)]], {}, 4],
['exp', 'torch', ['torch.cuda.FloatTensor'], [[(2, 2), (3, 3), (9, 9), (6, 6)]], {}, 4],
['sum', 'torch', ['torch.cuda.FloatTensor'], [[(2, 2), (3, 3), (9, 9), (6, 6)]], {}, 4],
['sub', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(), (), (), ()], [2, 3, 9, 6]], {}, 4],
['truediv', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(), (), (), (), (), (), (64, 3, 3, 3), (64,), (64, 64, 3, 3), (64, 64, 1, 1), (256, 64, 1, 1), (256,), (64, 256, 1, 1), (32, 256, 3, 3), (32,), (64, 256, 3, 3), (32, 32, 3, 3), (32, 64, 1, 1), (64, 32, 3, 3), (128, 64, 3, 3), (128,), (128, 128, 3, 3), (32, 128, 1, 1), (64, 128, 1, 1), (128, 32, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (32, 256, 1, 1), (128, 256, 1, 1), (256, 32, 3, 3), (256, 64, 3, 3), (266, 32, 1, 1), (266,)], [2, 6, 3, 72, 9, 30, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805, 0.031622776601683805]], {}, 33],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor'], [[((1,),)]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor{}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,), (1,))]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[((), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ())]], {}, 1],
['div_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1]], {}, 1],
['all_reduce', 'torch.distributed', ['torch.cuda.FloatTensor'], [[()]], {}, 1],
['adam', 'torch.optim._functional', ['torch.cuda.FloatTensor'], [[(64, 3, 3, 3), (64,), (64, 64, 3, 3), (64, 64, 1, 1), (256, 64, 1, 1), (256,), (64, 256, 1, 1), (32, 256, 3, 3), (32,), (64, 256, 3, 3), (32, 32, 3, 3), (32, 64, 1, 1), (64, 32, 3, 3), (128, 64, 3, 3), (128,), (128, 128, 3, 3), (32, 128, 1, 1), (64, 128, 1, 1), (128, 32, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (32, 256, 1, 1), (128, 256, 1, 1), (256, 32, 3, 3), (256, 64, 3, 3), (266, 32, 1, 1), (266,)]], {'amsgrad': False, 'beta1': 0.9, 'beta2': 0.999, 'lr': 1.5000000000000013e-06, 'weight_decay': 0, 'eps': 1e-08}, 1],
]
sar_resnet31_parallel_decoder_5e_st_sub_mj_sub_sa_real_config=[
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 3, 3, 3), (64,), (128, 64, 3, 3), (128,), (256, 128, 3, 3), (256, 256, 3, 3), (256,), (256, 128, 1, 1), (512, 256, 3, 3), (512, 512, 3, 3), (512,), (512, 256, 1, 1), (2048, 512), (2048,), (512, 512), (1, 512), (1,), (93, 512), (93, 1536), (93,), ()]], {}, 21],
['normal_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 3, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (256, 128, 1, 1), (512, 256, 3, 3), (512, 512, 3, 3), (512, 256, 1, 1)], [0, 0, 0, 0, 0, 0, 0, 0], [0.05892556509887897, 0.04166666666666667, 0.029462782549439483, 0.029462782549439483, 0.08838834764831845, 0.020833333333333336, 0.020833333333333336, 0.0625]], {}, 8],
['fill_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64,), (128,), (256,), (512,)], [0, 0, 0, 0]], {}, 4],
['uniform_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64,), (128,), (256,), (512,)], [0, 0, 0, 0], [1, 1, 1, 1]], {}, 4],
['randperm', 'torch', [], [[93828]], {'generator': '<torch._C.Generator object at 0x7faf18647f78>'}, 1],
['sub', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.LongTensor'], [[(3, 48, 160)], [(3, 1, 1)]], {}, 1],
['truediv', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.LongTensor'], [[(3, 48, 160)], [(3, 1, 1)]], {}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor{}, 2],
['conv2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(384, 3, 48, 160), (384, 64, 48, 160), (384, 256, 24, 80), (384, 256, 12, 40), (384, 512, 6, 40), (1, 3, 48, 160), (1, 64, 48, 160), (1, 256, 24, 80), (1, 256, 12, 40), (1, 512, 6, 40)], [(64, 3, 3, 3), (128, 64, 3, 3), (256, 256, 3, 3), (256, 256, 3, 3), (512, 512, 3, 3), (64, 3, 3, 3), (128, 64, 3, 3), (256, 256, 3, 3), (256, 256, 3, 3), (512, 512, 3, 3)], [(64,), (128,), (256,), (256,), (512,), (64,), (128,), (256,), (256,), (512,)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], {}, 10],
['add', 'torch.Tensor', ['torch.cuda.LongTensor'], [[()], [1]], {}, 1],
['batch_norm', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(384, 64, 48, 160), (384, 128, 48, 160), (384, 256, 24, 80), (384, 256, 12, 40), (384, 512, 6, 40), (1, 64, 48, 160), (1, 128, 48, 160), (1, 256, 24, 80), (1, 256, 12, 40), (1, 512, 6, 40)], [(64,), (128,), (256,), (256,), (512,), (64,), (128,), (256,), (256,), (512,)], [(64,), (128,), (256,), (256,), (512,), (64,), (128,), (256,), (256,), (512,)], [(64,), (128,), (256,), (256,), (512,), (64,), (128,), (256,), (256,), (512,)], [(64,), (128,), (256,), (256,), (512,), (64,), (128,), (256,), (256,), (512,)], [True, True, True, True, True, False, False, False, False, False], [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1], [1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05]], {}, 10],
['relu', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(384, 64, 48, 160), (384, 128, 48, 160), (384, 256, 24, 80), (384, 256, 12, 40), (384, 512, 6, 40), (1, 64, 48, 160), (1, 128, 48, 160), (1, 256, 24, 80), (1, 256, 12, 40), (1, 512, 6, 40)]], {'inplace': [True, True, True, True, True, True, True, True, True, True]}, 10],
['max_pool2d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(384, 128, 48, 160), (384, 256, 24, 80), (384, 256, 12, 40), (1, 128, 48, 160), (1, 256, 24, 80), (1, 256, 12, 40)], [2, 2, (2, 1), 2, 2, (2, 1)], [2, 2, (2, 1), 2, 2, (2, 1)], [0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1], [True, True, True, True, True, True], [False, False, False, False, False, False]], {}, 6],
['conv2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(384, 128, 24, 80), (384, 256, 24, 80), (384, 128, 24, 80), (384, 256, 12, 40), (384, 256, 6, 40), (384, 512, 6, 40), (384, 256, 6, 40), (1, 128, 24, 80), (1, 256, 24, 80), (1, 128, 24, 80), (1, 256, 12, 40), (1, 256, 6, 40), (1, 512, 6, 40), (1, 256, 6, 40)], [(256, 128, 3, 3), (256, 256, 3, 3), (256, 128, 1, 1), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 256, 1, 1), (256, 128, 3, 3), (256, 256, 3, 3), (256, 128, 1, 1), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 256, 1, 1)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [(1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (0, 0)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], {}, 14],
['iadd', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(384, 256, 24, 80), (384, 256, 12, 40), (384, 512, 6, 40), (1, 256, 24, 80), (1, 256, 12, 40), (1, 512, 6, 40)], [(384, 256, 24, 80), (384, 256, 12, 40), (384, 512, 6, 40), (1, 256, 24, 80), (1, 256, 12, 40), (1, 512, 6, 40)]], {}, 6],
['max_pool2d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(384, 512, 6, 40), (1, 512, 6, 40)]], {'kernel_size': [(6, 1), (6, 1)], 'stride': [1, 1], 'padding': [0, 0]}, 2],
['permute', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(384, 512, 40), (384, 29, 93), (1, 512, 40)], [0, 0, 0], [2, 2, 2], [1, 1, 1]], {}, 3],
['stack', 'torch', ['torch.cuda.FloatTensor{'dim': [0, 0]}, 2],
['linear', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(384, 512), (384, 31, 512), (384, 31, 6, 40, 512), (384, 31, 1536), (1, 512), (1, 31, 512), (1, 31, 6, 40, 512), (1, 31, 1536)], [(512, 512), (512, 512), (1, 512), (93, 1536), (512, 512), (512, 512), (1, 512), (93, 1536)], [(512,), (512,), (1,), (93,), (512,), (512,), (1,), (93,)]], {}, 8],
['embedding', 'torch.nn.functional', ['torch.cuda.LongTensor', 'torch.cuda.FloatTensor'], [[(384, 30), (1,)], [(93, 512), (93, 512)], [91, 91], [None, None], [2.0, 2.0], [False, False], [False, False]], {}, 2],
['cat', 'torch', ['torch.cuda.FloatTensor'], [[((384, 1, 512), (384, 30, 512)), ((1, 1, 512), (1, 30, 512))]], {'dim': [1, 1]}, 2],
['add', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(384, 1, 512, 6, 40), (1, 1, 512, 6, 40)], [(384, 31, 512, 1, 1), (1, 31, 512, 1, 1)]], {'alpha': [1, 1]}, 2],
['tanh', 'torch', ['torch.cuda.FloatTensor'], [[(384, 31, 512, 6, 40), (1, 31, 512, 6, 40)]], {}, 2],
['permute', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(384, 31, 512, 6, 40), (384, 31, 6, 40, 1), (1, 31, 512, 6, 40), (1, 31, 6, 40, 1)], [0, 0, 0, 0], [1, 1, 1, 1], [3, 4, 3, 4], [4, 2, 4, 2], [2, 3, 2, 3]], {}, 4],
['masked_fill', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.BoolTensor'], [[(384, 31, 6, 40, 1), (1, 31, 6, 40, 1)], [(384, 31, 6, 40, 1), (1, 31, 6, 40, 1)], [float("-inf"), float("-inf")]], {}, 2],
['softmax', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(384, 31, 240), (1, 31, 240)]], {'dim': [-1, -1]}, 2],
['mul', 'torch', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(384, 1, 512, 6, 40), (1, 1, 512, 6, 40)], [(384, 31, 1, 6, 40), (1, 31, 1, 6, 40)]], {}, 2],
['sum', 'torch', ['torch.cuda.FloatTensor'], [[(384, 31, 512, 6, 40), (1, 31, 512, 6, 40)], [(3, 4), (3, 4)]], {'keepdim': [False, False]}, 2],
['expand', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(384, 1, 512), (1, 1, 512), (1, 1, 512)], [384, -1, 1], [31, 30, 31], [512, -1, 512]], {}, 3],
['cat', 'torch', ['torch.cuda.FloatTensor'], [[((384, 31, 512), (384, 31, 512), (384, 31, 512)), ((1, 31, 512), (1, 31, 512), (1, 31, 512))], [2, 2]], {}, 2],
['dropout', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(384, 31, 93), (1, 31, 93)], [0.1, 0.1], [True, False], [False, False]], {}, 2],
['cross_entropy', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.LongTensor'], [[(384, 93, 29)], [(384, 29)]], {'weight': None, 'ignore_index': 91, 'reduction': 'mean', 'label_smoothing': 0.0}, 1],
['radd', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [0]], {}, 1],
['truediv', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1]], {}, 1],
['adam', 'torch.optim._functional', ['torch.cuda.FloatTensor'], [[(64, 3, 3, 3), (64,), (128, 64, 3, 3), (128,), (256, 128, 3, 3), (256, 256, 3, 3), (256,), (256, 128, 1, 1), (512, 256, 3, 3), (512, 512, 3, 3), (512,), (512, 256, 1, 1), (2048, 512), (2048,), (512, 512), (1, 512), (1,), (93, 512), (93, 1536), (93,)]], {'amsgrad': False, 'beta1': 0.9, 'beta2': 0.999, 'lr': 0.001, 'weight_decay': 0, 'eps': 1e-08}, 20],
['arange', 'torch', [], [[2077]], {}, 1],
['max', 'torch', ['torch.cuda.FloatTensor'], [[(1, 93)]], {'dim': [1], 'keepdim': [False]}, 1],
['stack', 'torch', ['torch.cuda.FloatTensor'], [[((1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93), (1, 93))], [1]], {}, 1],
['softmax', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(1, 30, 93)], [-1]], {'_stacklevel': [5]}, 1],
['max', 'torch', ['torch.cuda.FloatTensor'], [[(30, 93)], [-1]], {}, 1],
]
crnn_mini_vgg_5e_mj_config=[
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 1, 3, 3), (64,), (128, 64, 3, 3), (128,), (256, 128, 3, 3), (256,), (256, 256, 3, 3), (512, 256, 3, 3), (512,), (512, 512, 3, 3), (512, 512, 2, 2), (1024, 512), (1024, 256), (1024,), (256, 512), (37, 512), (37,), ()]], {}, 18],
['normal_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2)], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], [0.05847053462046861, 0.034020690871988585, 0.024056261216234408, 0.020833333333333332, 0.017010345435994292, 0.01473139127471974, 0.02209708691207961]], {}, 7],
['fill_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64,), (128,), (256,), (512,)], [0, 0, 0, 0]], {}, 4],
['uniform_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(256,), (512,)], [0, 0], [1, 1]], {}, 2],
['randperm', 'torch', [], [[2077]], {'generator': '<torch._C.Generator object at 0x7fda700aef60>'}, 1],
['sub', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.LongTensor'], [[(1, 32, 100), (1, 32, 112), (1, 32, 48), (1, 32, 64), (1, 32, 80), (1, 32, 96), (1, 32, 32), (1, 32, 128), (1, 32, 144), (1, 32, 192), (1, 32, 160), (1, 32, 224), (1, 32, 176), (1, 32, 272), (1, 32, 208), (1, 32, 288), (1, 32, 240)], [(1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1)]], {}, 17],
['truediv', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.LongTensor'], [[(1, 32, 100), (1, 32, 112), (1, 32, 48), (1, 32, 64), (1, 32, 80), (1, 32, 96), (1, 32, 32), (1, 32, 128), (1, 32, 144), (1, 32, 192), (1, 32, 160), (1, 32, 224), (1, 32, 176), (1, 32, 272), (1, 32, 208), (1, 32, 288), (1, 32, 240)], [(1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1)]], {}, 17],
['stack', 'torch', ['torch.cuda.FloatTensor{}, 17],
['conv2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 1, 32, 100), (64, 64, 16, 50), (64, 128, 8, 25), (64, 256, 8, 25), (64, 256, 4, 26), (64, 512, 4, 26), (64, 512, 2, 27), (1, 1, 32, 112), (1, 64, 16, 56), (1, 128, 8, 28), (1, 256, 8, 28), (1, 256, 4, 29), (1, 512, 4, 29), (1, 512, 2, 30), (1, 1, 32, 48), (1, 64, 16, 24), (1, 128, 8, 12), (1, 256, 8, 12), (1, 256, 4, 13), (1, 512, 4, 13), (1, 512, 2, 14), (1, 1, 32, 64), (1, 64, 16, 32), (1, 128, 8, 16), (1, 256, 8, 16), (1, 256, 4, 17), (1, 512, 4, 17), (1, 512, 2, 18), (1, 1, 32, 80), (1, 64, 16, 40), (1, 128, 8, 20), (1, 256, 8, 20), (1, 256, 4, 21), (1, 512, 4, 21), (1, 512, 2, 22), (1, 1, 32, 96), (1, 64, 16, 48), (1, 128, 8, 24), (1, 256, 8, 24), (1, 256, 4, 25), (1, 512, 4, 25), (1, 512, 2, 26), (1, 1, 32, 32), (1, 64, 16, 16), (1, 128, 8, 8), (1, 256, 8, 8), (1, 256, 4, 9), (1, 512, 4, 9), (1, 512, 2, 10), (1, 1, 32, 128), (1, 64, 16, 64), (1, 128, 8, 32), (1, 256, 8, 32), (1, 256, 4, 33), (1, 512, 4, 33), (1, 512, 2, 34), (1, 1, 32, 144), (1, 64, 16, 72), (1, 128, 8, 36), (1, 256, 8, 36), (1, 256, 4, 37), (1, 512, 4, 37), (1, 512, 2, 38), (1, 1, 32, 192), (1, 64, 16, 96), (1, 128, 8, 48), (1, 256, 8, 48), (1, 256, 4, 49), (1, 512, 4, 49), (1, 512, 2, 50), (1, 1, 32, 160), (1, 64, 16, 80), (1, 128, 8, 40), (1, 256, 8, 40), (1, 256, 4, 41), (1, 512, 4, 41), (1, 512, 2, 42), (1, 1, 32, 224), (1, 64, 16, 112), (1, 128, 8, 56), (1, 256, 8, 56), (1, 256, 4, 57), (1, 512, 4, 57), (1, 512, 2, 58), (1, 1, 32, 176), (1, 64, 16, 88), (1, 128, 8, 44), (1, 256, 8, 44), (1, 256, 4, 45), (1, 512, 4, 45), (1, 512, 2, 46), (1, 1, 32, 272), (1, 64, 16, 136), (1, 128, 8, 68), (1, 256, 8, 68), (1, 256, 4, 69), (1, 512, 4, 69), (1, 512, 2, 70), (1, 1, 32, 208), (1, 64, 16, 104), (1, 128, 8, 52), (1, 256, 8, 52), (1, 256, 4, 53), (1, 512, 4, 53), (1, 512, 2, 54), (1, 1, 32, 288), (1, 64, 16, 144), (1, 128, 8, 72), (1, 256, 8, 72), (1, 256, 4, 73), (1, 512, 4, 73), (1, 512, 2, 74), (1, 1, 32, 240), (1, 64, 16, 120), (1, 128, 8, 60), (1, 256, 8, 60), (1, 256, 4, 61), (1, 512, 4, 61), (1, 512, 2, 62)], [(64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2), (64, 1, 3, 3), (128, 64, 3, 3), (256, 128, 3, 3), (256, 256, 3, 3), (512, 256, 3, 3), (512, 512, 3, 3), (512, 512, 2, 2)], [(64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,), (64,), (128,), (256,), (256,), (512,), (512,), (512,)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (0, 0)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], {}, 119],
['relu', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(64, 64, 32, 100), (64, 128, 16, 50), (64, 256, 8, 25), (64, 512, 4, 26), (64, 512, 1, 26), (1, 64, 32, 112), (1, 128, 16, 56), (1, 256, 8, 28), (1, 512, 4, 29), (1, 512, 1, 29), (1, 64, 32, 48), (1, 128, 16, 24), (1, 256, 8, 12), (1, 512, 4, 13), (1, 512, 1, 13), (1, 64, 32, 64), (1, 128, 16, 32), (1, 256, 8, 16), (1, 512, 4, 17), (1, 512, 1, 17), (1, 64, 32, 80), (1, 128, 16, 40), (1, 256, 8, 20), (1, 512, 4, 21), (1, 512, 1, 21), (1, 64, 32, 96), (1, 128, 16, 48), (1, 256, 8, 24), (1, 512, 4, 25), (1, 512, 1, 25), (1, 64, 32, 32), (1, 128, 16, 16), (1, 256, 8, 8), (1, 512, 4, 9), (1, 512, 1, 9), (1, 64, 32, 128), (1, 128, 16, 64), (1, 256, 8, 32), (1, 512, 4, 33), (1, 512, 1, 33), (1, 64, 32, 144), (1, 128, 16, 72), (1, 256, 8, 36), (1, 512, 4, 37), (1, 512, 1, 37), (1, 64, 32, 192), (1, 128, 16, 96), (1, 256, 8, 48), (1, 512, 4, 49), (1, 512, 1, 49), (1, 64, 32, 160), (1, 128, 16, 80), (1, 256, 8, 40), (1, 512, 4, 41), (1, 512, 1, 41), (1, 64, 32, 224), (1, 128, 16, 112), (1, 256, 8, 56), (1, 512, 4, 57), (1, 512, 1, 57), (1, 64, 32, 176), (1, 128, 16, 88), (1, 256, 8, 44), (1, 512, 4, 45), (1, 512, 1, 45), (1, 64, 32, 272), (1, 128, 16, 136), (1, 256, 8, 68), (1, 512, 4, 69), (1, 512, 1, 69), (1, 64, 32, 208), (1, 128, 16, 104), (1, 256, 8, 52), (1, 512, 4, 53), (1, 512, 1, 53), (1, 64, 32, 288), (1, 128, 16, 144), (1, 256, 8, 72), (1, 512, 4, 73), (1, 512, 1, 73), (1, 64, 32, 240), (1, 128, 16, 120), (1, 256, 8, 60), (1, 512, 4, 61), (1, 512, 1, 61)]], {'inplace': [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]}, 85],
['max_pool2d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(64, 64, 32, 100), (64, 128, 16, 50), (64, 256, 8, 25), (64, 512, 4, 26), (1, 64, 32, 112), (1, 128, 16, 56), (1, 256, 8, 28), (1, 512, 4, 29), (1, 64, 32, 48), (1, 128, 16, 24), (1, 256, 8, 12), (1, 512, 4, 13), (1, 64, 32, 64), (1, 128, 16, 32), (1, 256, 8, 16), (1, 512, 4, 17), (1, 64, 32, 80), (1, 128, 16, 40), (1, 256, 8, 20), (1, 512, 4, 21), (1, 64, 32, 96), (1, 128, 16, 48), (1, 256, 8, 24), (1, 512, 4, 25), (1, 64, 32, 32), (1, 128, 16, 16), (1, 256, 8, 8), (1, 512, 4, 9), (1, 64, 32, 128), (1, 128, 16, 64), (1, 256, 8, 32), (1, 512, 4, 33), (1, 64, 32, 144), (1, 128, 16, 72), (1, 256, 8, 36), (1, 512, 4, 37), (1, 64, 32, 192), (1, 128, 16, 96), (1, 256, 8, 48), (1, 512, 4, 49), (1, 64, 32, 160), (1, 128, 16, 80), (1, 256, 8, 40), (1, 512, 4, 41), (1, 64, 32, 224), (1, 128, 16, 112), (1, 256, 8, 56), (1, 512, 4, 57), (1, 64, 32, 176), (1, 128, 16, 88), (1, 256, 8, 44), (1, 512, 4, 45), (1, 64, 32, 272), (1, 128, 16, 136), (1, 256, 8, 68), (1, 512, 4, 69), (1, 64, 32, 208), (1, 128, 16, 104), (1, 256, 8, 52), (1, 512, 4, 53), (1, 64, 32, 288), (1, 128, 16, 144), (1, 256, 8, 72), (1, 512, 4, 73), (1, 64, 32, 240), (1, 128, 16, 120), (1, 256, 8, 60), (1, 512, 4, 61)], [2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2), 2, 2, (2, 2), (2, 2)], [2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1), 2, 2, (2, 1), (2, 1)], [0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1), 0, 0, (0, 1), (0, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False]], {}, 68],
['add', 'torch.Tensor', ['torch.cuda.LongTensor'], [[()], [1]], {}, 1],
['batch_norm', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 256, 8, 25), (64, 512, 4, 26), (64, 512, 1, 26), (1, 256, 8, 28), (1, 512, 4, 29), (1, 512, 1, 29), (1, 256, 8, 12), (1, 512, 4, 13), (1, 512, 1, 13), (1, 256, 8, 16), (1, 512, 4, 17), (1, 512, 1, 17), (1, 256, 8, 20), (1, 512, 4, 21), (1, 512, 1, 21), (1, 256, 8, 24), (1, 512, 4, 25), (1, 512, 1, 25), (1, 256, 8, 8), (1, 512, 4, 9), (1, 512, 1, 9), (1, 256, 8, 32), (1, 512, 4, 33), (1, 512, 1, 33), (1, 256, 8, 36), (1, 512, 4, 37), (1, 512, 1, 37), (1, 256, 8, 48), (1, 512, 4, 49), (1, 512, 1, 49), (1, 256, 8, 40), (1, 512, 4, 41), (1, 512, 1, 41), (1, 256, 8, 56), (1, 512, 4, 57), (1, 512, 1, 57), (1, 256, 8, 44), (1, 512, 4, 45), (1, 512, 1, 45), (1, 256, 8, 68), (1, 512, 4, 69), (1, 512, 1, 69), (1, 256, 8, 52), (1, 512, 4, 53), (1, 512, 1, 53), (1, 256, 8, 72), (1, 512, 4, 73), (1, 512, 1, 73), (1, 256, 8, 60), (1, 512, 4, 61), (1, 512, 1, 61)], [(256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,)], [(256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,)], [(256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,)], [(256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,), (256,), (512,), (512,)], [True, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False], [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1], [1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05]], {}, 51],
['permute', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 512, 26), (26, 64, 37), (64, 26, 37), (1, 512, 29), (29, 1, 37), (1, 512, 13), (13, 1, 37), (1, 512, 17), (17, 1, 37), (1, 512, 21), (21, 1, 37), (1, 512, 25), (25, 1, 37), (1, 512, 9), (9, 1, 37), (1, 512, 33), (33, 1, 37), (1, 512, 37), (37, 1, 37), (1, 512, 49), (49, 1, 37), (1, 512, 41), (41, 1, 37), (1, 512, 57), (57, 1, 37), (1, 512, 45), (45, 1, 37), (1, 512, 69), (69, 1, 37), (1, 512, 53), (53, 1, 37), (1, 512, 73), (73, 1, 37), (1, 512, 61), (61, 1, 37)], [2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 2, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2]], {}, 35],
['linear', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(1664, 512), (1664, 512), (29, 512), (29, 512), (13, 512), (13, 512), (17, 512), (17, 512), (21, 512), (21, 512), (25, 512), (25, 512), (9, 512), (9, 512), (33, 512), (33, 512), (37, 512), (37, 512), (49, 512), (49, 512), (41, 512), (41, 512), (57, 512), (57, 512), (45, 512), (45, 512), (69, 512), (69, 512), (53, 512), (53, 512), (73, 512), (73, 512), (61, 512), (61, 512)], [(256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512), (256, 512), (37, 512)], [(256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,), (256,), (37,)]], {}, 34],
['radd', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [0]], {}, 1],
['truediv', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1]], {}, 1],
['adadelta', 'torch.optim._functional', ['torch.cuda.FloatTensor'], [[(64, 1, 3, 3), (64,), (128, 64, 3, 3), (128,), (256, 128, 3, 3), (256,), (256, 256, 3, 3), (512, 256, 3, 3), (512,), (512, 512, 3, 3), (512, 512, 2, 2), (1024, 512), (1024, 256), (1024,), (256, 512), (37, 512), (37,)]], {'lr': 1.0, 'rho': 0.9, 'eps': 1e-06, 'weight_decay': 0}, 17],
['arange', 'torch', [], [[2077]], {}, 1],
['softmax', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(1, 29, 37), (1, 13, 37), (1, 17, 37), (1, 21, 37), (1, 25, 37), (1, 9, 37), (1, 33, 37), (1, 37, 37), (1, 49, 37), (1, 41, 37), (1, 57, 37), (1, 45, 37), (1, 69, 37), (1, 53, 37), (1, 73, 37), (1, 61, 37)], [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]], {'_stacklevel': [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]}, 16],
]
dbnet_resnet18_fpnc_1200e_icdar2015_config=[
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(64, 3, 7, 7), (64,), (64, 64, 3, 3), (128, 64, 3, 3), (128,), (128, 128, 3, 3), (128, 64, 1, 1), (256, 128, 3, 3), (256,), (256, 256, 3, 3), (256, 128, 1, 1), (512, 256, 3, 3), (512,), (512, 512, 3, 3), (512, 256, 1, 1), (256, 64, 1, 1), (256, 256, 1, 1), (256, 512, 1, 1), (64, 256, 3, 3), (64, 64, 2, 2), (64, 1, 2, 2), (1,), ()]], {}, 23],
['load', 'torch', [], [['/mnt/lustre/linkun/.cache/torch/hub/checkpoints/resnet18-f37072fd.pth']], {'map_location': 'cpu'}, 1],
['normal_', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(256, 64, 1, 1), (256, 128, 1, 1), (256, 256, 1, 1), (256, 512, 1, 1), (64, 256, 3, 3)], [0, 0, 0, 0, 0], [0.08838834764831845, 0.08838834764831845, 0.08838834764831845, 0.08838834764831845, 0.05892556509887897]], {}, 5],
['randperm', 'torch', [], [[1000]], {'generator': '<torch._C.Generator object at 0x7f276527d270>'}, 1],
['sub', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(3, 640, 640), (16, 640, 640)], [(3, 1, 1), (16, 640, 640)]], {}, 2],
['truediv', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(3, 640, 640), ()], [(3, 1, 1), ()]], {}, 2],
['stack', 'torch', ['torch.cuda.FloatTensor'], [[((3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640), (3, 640, 640))]], {}, 1],
['conv2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(16, 3, 640, 640), (16, 64, 160, 160), (16, 64, 160, 160), (16, 128, 80, 80), (16, 64, 160, 160), (16, 128, 80, 80), (16, 256, 40, 40), (16, 128, 80, 80), (16, 256, 40, 40), (16, 512, 20, 20), (16, 256, 40, 40), (16, 64, 160, 160), (16, 128, 80, 80), (16, 256, 40, 40), (16, 512, 20, 20), (16, 256, 160, 160), (16, 256, 80, 80), (16, 256, 40, 40), (16, 256, 20, 20)], [(64, 3, 7, 7), (64, 64, 3, 3), (128, 64, 3, 3), (128, 128, 3, 3), (128, 64, 1, 1), (256, 128, 3, 3), (256, 256, 3, 3), (256, 128, 1, 1), (512, 256, 3, 3), (512, 512, 3, 3), (512, 256, 1, 1), (256, 64, 1, 1), (256, 128, 1, 1), (256, 256, 1, 1), (256, 512, 1, 1), (64, 256, 3, 3), (64, 256, 3, 3), (64, 256, 3, 3), (64, 256, 3, 3)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(2, 2), (1, 1), (2, 2), (1, 1), (2, 2), (2, 2), (1, 1), (2, 2), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [(3, 3), (1, 1), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (0, 0), (1, 1), (1, 1), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (1, 1), (1, 1), (1, 1), (1, 1)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], {}, 19],
['add', 'torch.Tensor', ['torch.cuda.LongTensor'], [[()], [1]], {}, 1],
['batch_norm', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(16, 64, 320, 320), (16, 64, 160, 160), (16, 128, 80, 80), (16, 256, 40, 40), (16, 512, 20, 20)], [(64,), (64,), (128,), (256,), (512,)], [(64,), (64,), (128,), (256,), (512,)], [(64,), (64,), (128,), (256,), (512,)], [(64,), (64,), (128,), (256,), (512,)], [True, True, True, True, True], [0.1, 0.1, 0.1, 0.1, 0.1], [1e-05, 1e-05, 1e-05, 1e-05, 1e-05]], {}, 5],
['relu', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(16, 64, 320, 320), (16, 64, 160, 160), (16, 128, 80, 80), (16, 256, 40, 40), (16, 512, 20, 20)]], {'inplace': [True, True, True, True, True]}, 5],
['max_pool2d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(16, 64, 320, 320)], [3], [2], [1], [1], [False], [False]], {}, 1],
['iadd', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(16, 64, 160, 160), (16, 128, 80, 80), (16, 256, 40, 40), (16, 512, 20, 20)], [(16, 64, 160, 160), (16, 128, 80, 80), (16, 256, 40, 40), (16, 512, 20, 20)]], {}, 4],
['interpolate', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(16, 256, 20, 20), (16, 256, 40, 40), (16, 256, 80, 80), (16, 64, 160, 160), (16, 64, 80, 80), (16, 64, 40, 40), (16, 64, 20, 20)]], {'size': [(40, 40), (80, 80), (160, 160), (160, 160), (160, 160), (160, 160), (160, 160)], 'mode': ['nearest', 'nearest', 'nearest', 'nearest', 'nearest', 'nearest', 'nearest']}, 7],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(16, 256, 40, 40), (16, 256, 80, 80), (16, 256, 160, 160), ()], [(16, 256, 40, 40), (16, 256, 80, 80), (16, 256, 160, 160), ()]], {}, 4],
['cat', 'torch', ['torch.cuda.FloatTensor'], [[((16, 64, 160, 160), (16, 64, 160, 160), (16, 64, 160, 160), (16, 64, 160, 160))]], {'dim': 1}, 1],
['conv_transpose2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(16, 64, 160, 160), (16, 64, 320, 320)], [(64, 64, 2, 2), (64, 1, 2, 2)], [(64,), (1,)], [(2, 2), (2, 2)], [(0, 0), (0, 0)], [(0, 0), (0, 0)], [1, 1], [(1, 1), (1, 1)]], {}, 2],
['sigmoid', 'torch', ['torch.cuda.FloatTensor'], [[(16, 640, 640), (16, 1, 640, 640)]], {}, 2],
['rmul', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(16, 640, 640), (), (), ()], [-50, 2, 5.0, 10.0]], {}, 4],
['exp', 'torch', ['torch.cuda.FloatTensor'], [[(16, 640, 640)]], {}, 1],
['radd', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(16, 640, 640), ()], [1.0, 0]], {}, 2],
['reciprocal', 'torch', ['torch.cuda.FloatTensor'], [[(16, 640, 640)]], {}, 1],
['nonzero', 'torch', ['torch.cuda.BoolTensor'], [[(14,), (2,), (5,), (3,), (8,), (7,), (13,), (4,), (79,), (9,)]], {}, 10],
['invert', 'torch.Tensor', ['torch.cuda.BoolTensor'], [[(14,), (2,), (5,), (3,), (8,), (7,), (13,), (4,), (79,), (9,)]], {}, 10],
['mul', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(16, 640, 640), (16, 409600)], [(16, 640, 640), (16, 409600)]], {}, 2],
['rsub', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(16, 640, 640), ()], [1, 1]], {}, 2],
['sum', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(16, 640, 640), (79842,), (16, 409600)]], {}, 3],
['max', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(16, 640, 640)]], {}, 1],
['le', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1]], {}, 1],
['min', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(16, 640, 640)]], {}, 1],
['ge', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [0]], {}, 1],
['binary_cross_entropy_with_logits', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(16, 640, 640)], [(16, 640, 640)], [None]], {'pos_weight': None, 'reduction': 'none'}, 1],
['topk', 'torch', ['torch.cuda.FloatTensor'], [[(6553600,)], [79842]], {}, 1],
['truediv', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(), ()], [106456.000001, 1]], {}, 2],
['smooth_l1_loss', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(16, 640, 640)], [(16, 640, 640)]], {'reduction': 'none', 'beta': 0}, 1],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1e-06]], {}, 1],
['sgd', 'torch.optim._functional', ['torch.cuda.FloatTensor'], [[(64, 3, 7, 7), (64,), (64, 64, 3, 3), (128, 64, 3, 3), (128,), (128, 128, 3, 3), (128, 64, 1, 1), (256, 128, 3, 3), (256,), (256, 256, 3, 3), (256, 128, 1, 1), (512, 256, 3, 3), (512,), (512, 512, 3, 3), (512, 256, 1, 1), (256, 64, 1, 1), (256, 256, 1, 1), (256, 512, 1, 1), (64, 256, 3, 3), (64, 64, 2, 2), (64, 1, 2, 2), (1,)]], {'weight_decay': 0.0001, 'momentum': 0.9, 'lr': 0.007, 'dampening': 0, 'nesterov': False}, 22],
]
tsn_r50_1x1x8_50e_sthv1_rgb_config=[
['randperm', 'torch', [], [[86017]], {'generator': '<torch._C.Generator object at 0x7f57ef0f2ae0>'}, 1],
['conv2d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(128, 3, 224, 224), (128, 64, 56, 56), (128, 64, 56, 56), (128, 64, 56, 56), (128, 256, 56, 56), (128, 256, 56, 56), (128, 128, 56, 56), (128, 128, 28, 28), (128, 256, 56, 56), (128, 512, 28, 28), (128, 128, 28, 28), (128, 512, 28, 28), (128, 256, 28, 28), (128, 256, 14, 14), (128, 512, 28, 28), (128, 1024, 14, 14), (128, 256, 14, 14), (128, 1024, 14, 14), (128, 512, 14, 14), (128, 512, 7, 7), (128, 1024, 14, 14), (128, 2048, 7, 7), (128, 512, 7, 7)], [(64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1)], [(3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1)], [(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], {}, 23],
['batch_norm', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(128, 64, 112, 112), (128, 64, 56, 56), (128, 256, 56, 56), (128, 128, 56, 56), (128, 128, 28, 28), (128, 512, 28, 28), (128, 256, 28, 28), (128, 256, 14, 14), (128, 1024, 14, 14), (128, 512, 14, 14), (128, 512, 7, 7), (128, 2048, 7, 7)], [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,)], [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,)], [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,)], [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,)], [False, False, False, False, False, False, False, False, False, False, False, False], [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1], [1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05]], {}, 12],
['relu', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(128, 64, 112, 112), (128, 64, 56, 56), (128, 256, 56, 56), (128, 128, 56, 56), (128, 128, 28, 28), (128, 512, 28, 28), (128, 256, 28, 28), (128, 256, 14, 14), (128, 1024, 14, 14), (128, 512, 14, 14), (128, 512, 7, 7), (128, 2048, 7, 7)]], {'inplace': [True, True, True, True, True, True, True, True, True, True, True, True]}, 12],
['max_pool2d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(128, 64, 112, 112)], [3], [2], [1], [1], [False], [False]], {}, 1],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(128, 256, 56, 56), (128, 512, 28, 28), (128, 1024, 14, 14), (128, 2048, 7, 7)], [(128, 256, 56, 56), (128, 512, 28, 28), (128, 1024, 14, 14), (128, 2048, 7, 7)]], {}, 4],
['adaptive_avg_pool2d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(128, 2048, 7, 7)], [(1, 1)]], {}, 1],
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[(16, 8, 2048, 1, 1)]], {'dim': 1, 'keepdim': True}, 1],
['dropout', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(16, 2048, 1, 1)], [0.5], [True], [False]], {}, 1],
['linear', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(16, 2048)], [(174, 2048)], [(174,)]], {}, 1],
['cross_entropy', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.LongTensor'], [[(16, 174)], [(16,)]], {}, 1],
['imul', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1.0]], {}, 1],
['mean', 'torch.Tensor', ['torch.cuda.DoubleTensor'], [[()]], {}, 1],
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()]], {}, 1],
['radd', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [0]], {}, 1],
['norm', 'torch', ['torch.cuda.FloatTensor'], [[(64, 3, 7, 7), (64,), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (256,), (64, 256, 1, 1), (128, 256, 1, 1), (128,), (128, 128, 3, 3), (512, 128, 1, 1), (512,), (512, 256, 1, 1), (128, 512, 1, 1), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024,), (1024, 512, 1, 1), (256, 1024, 1, 1), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048,), (2048, 1024, 1, 1), (512, 2048, 1, 1), (174, 2048), (174,), (161,)], [2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0]], {}, 29],
['stack', 'torch', ['torch.cuda.FloatTensor{}, 1],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1e-06]], {}, 1],
['rtruediv', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [20.0]], {}, 1],
['reciprocal', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()]], {}, 1],
['mul', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [20.0]], {}, 1],
['clamp', 'torch', ['torch.cuda.FloatTensor'], [[()]], {'max': 1.0}, 1],
['mul_', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 3, 7, 7), (64,), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (256,), (64, 256, 1, 1), (128, 256, 1, 1), (128,), (128, 128, 3, 3), (512, 128, 1, 1), (512,), (512, 256, 1, 1), (128, 512, 1, 1), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024,), (1024, 512, 1, 1), (256, 1024, 1, 1), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048,), (2048, 1024, 1, 1), (512, 2048, 1, 1), (174, 2048), (174,)], [(), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()]], {}, 28],
['sgd', 'torch.optim._functional', ['torch.cuda.FloatTensor'], [[(64, 3, 7, 7), (64,), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (256,), (64, 256, 1, 1), (128, 256, 1, 1), (128,), (128, 128, 3, 3), (512, 128, 1, 1), (512,), (512, 256, 1, 1), (128, 512, 1, 1), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024,), (1024, 512, 1, 1), (256, 1024, 1, 1), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048,), (2048, 1024, 1, 1), (512, 2048, 1, 1), (174, 2048), (174,)]], {'weight_decay': 0.0005, 'momentum': 0.9, 'lr': 0.02, 'dampening': 0, 'nesterov': False}, 28],
]
slowfast_r50_16x8x1_22e_sthv1_rgb_config=[
['randperm', 'torch', [], [[86017]], {'generator': '<torch._C.Generator object at 0x7fb5ed5fdcd8>'}, 1],
['interpolate', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(4, 3, 64, 224, 224), (4, 3, 64, 224, 224)]], {'mode': ['nearest', 'nearest'], 'scale_factor': [(0.25, 1.0, 1.0), (1.0, 1.0, 1.0)]}, 2],
['conv3d', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(4, 3, 16, 224, 224), (4, 3, 64, 224, 224), (4, 8, 64, 56, 56), (4, 80, 16, 56, 56), (4, 64, 16, 56, 56), (4, 64, 16, 56, 56), (4, 80, 16, 56, 56), (4, 256, 16, 56, 56), (4, 8, 64, 56, 56), (4, 8, 64, 56, 56), (4, 8, 64, 56, 56), (4, 32, 64, 56, 56), (4, 32, 64, 56, 56), (4, 320, 16, 56, 56), (4, 128, 16, 56, 56), (4, 128, 16, 28, 28), (4, 320, 16, 56, 56), (4, 512, 16, 28, 28), (4, 128, 16, 28, 28), (4, 32, 64, 56, 56), (4, 16, 64, 56, 56), (4, 16, 64, 28, 28), (4, 32, 64, 56, 56), (4, 64, 64, 28, 28), (4, 16, 64, 28, 28), (4, 64, 64, 28, 28), (4, 640, 16, 28, 28), (4, 256, 16, 28, 28), (4, 256, 16, 14, 14), (4, 640, 16, 28, 28), (4, 1024, 16, 14, 14), (4, 256, 16, 14, 14), (4, 64, 64, 28, 28), (4, 32, 64, 28, 28), (4, 32, 64, 14, 14), (4, 64, 64, 28, 28), (4, 128, 64, 14, 14), (4, 32, 64, 14, 14), (4, 128, 64, 14, 14), (4, 1280, 16, 14, 14), (4, 512, 16, 14, 14), (4, 512, 16, 7, 7), (4, 1280, 16, 14, 14), (4, 2048, 16, 7, 7), (4, 512, 16, 7, 7), (4, 128, 64, 14, 14), (4, 64, 64, 14, 14), (4, 64, 64, 7, 7), (4, 128, 64, 14, 14), (4, 256, 64, 7, 7), (4, 64, 64, 7, 7)], [(64, 3, 1, 7, 7), (8, 3, 5, 7, 7), (16, 8, 7, 1, 1), (64, 80, 1, 1, 1), (64, 64, 1, 3, 3), (256, 64, 1, 1, 1), (256, 80, 1, 1, 1), (64, 256, 1, 1, 1), (8, 8, 3, 1, 1), (8, 8, 1, 3, 3), (32, 8, 1, 1, 1), (8, 32, 3, 1, 1), (64, 32, 7, 1, 1), (128, 320, 1, 1, 1), (128, 128, 1, 3, 3), (512, 128, 1, 1, 1), (512, 320, 1, 1, 1), (128, 512, 1, 1, 1), (128, 128, 1, 3, 3), (16, 32, 3, 1, 1), (16, 16, 1, 3, 3), (64, 16, 1, 1, 1), (64, 32, 1, 1, 1), (16, 64, 3, 1, 1), (16, 16, 1, 3, 3), (128, 64, 7, 1, 1), (256, 640, 3, 1, 1), (256, 256, 1, 3, 3), (1024, 256, 1, 1, 1), (1024, 640, 1, 1, 1), (256, 1024, 3, 1, 1), (256, 256, 1, 3, 3), (32, 64, 3, 1, 1), (32, 32, 1, 3, 3), (128, 32, 1, 1, 1), (128, 64, 1, 1, 1), (32, 128, 3, 1, 1), (32, 32, 1, 3, 3), (256, 128, 7, 1, 1), (512, 1280, 3, 1, 1), (512, 512, 1, 3, 3), (2048, 512, 1, 1, 1), (2048, 1280, 1, 1, 1), (512, 2048, 3, 1, 1), (512, 512, 1, 3, 3), (64, 128, 3, 1, 1), (64, 64, 1, 3, 3), (256, 64, 1, 1, 1), (256, 128, 1, 1, 1), (64, 256, 3, 1, 1), (64, 64, 1, 3, 3)], [None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None], [(1, 2, 2), (1, 2, 2), (4, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (4, 1, 1), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 1, 1), (4, 1, 1), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 1, 1), (4, 1, 1), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 2, 2), (1, 1, 1), (1, 1, 1)], [(0, 3, 3), (2, 3, 3), (3, 0, 0), (0, 0, 0), (0, 1, 1), (0, 0, 0), (0, 0, 0), (0, 0, 0), (1, 0, 0), (0, 1, 1), (0, 0, 0), (1, 0, 0), (3, 0, 0), (0, 0, 0), (0, 1, 1), (0, 0, 0), (0, 0, 0), (0, 0, 0), (0, 1, 1), (1, 0, 0), (0, 1, 1), (0, 0, 0), (0, 0, 0), (1, 0, 0), (0, 1, 1), (3, 0, 0), (1, 0, 0), (0, 1, 1), (0, 0, 0), (0, 0, 0), (1, 0, 0), (0, 1, 1), (1, 0, 0), (0, 1, 1), (0, 0, 0), (0, 0, 0), (1, 0, 0), (0, 1, 1), (3, 0, 0), (1, 0, 0), (0, 1, 1), (0, 0, 0), (0, 0, 0), (1, 0, 0), (0, 1, 1), (1, 0, 0), (0, 1, 1), (0, 0, 0), (0, 0, 0), (1, 0, 0), (0, 1, 1)], [(1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1), (1, 1, 1)], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], {}, 51],
['add', 'torch.Tensor', ['torch.cuda.LongTensor'], [[()], [1]], {}, 1],
['batch_norm', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(4, 64, 16, 112, 112), (4, 8, 64, 112, 112), (4, 64, 16, 56, 56), (4, 256, 16, 56, 56), (4, 8, 64, 56, 56), (4, 32, 64, 56, 56), (4, 128, 16, 56, 56), (4, 128, 16, 28, 28), (4, 512, 16, 28, 28), (4, 16, 64, 56, 56), (4, 16, 64, 28, 28), (4, 64, 64, 28, 28), (4, 256, 16, 28, 28), (4, 256, 16, 14, 14), (4, 1024, 16, 14, 14), (4, 32, 64, 28, 28), (4, 32, 64, 14, 14), (4, 128, 64, 14, 14), (4, 512, 16, 14, 14), (4, 512, 16, 7, 7), (4, 2048, 16, 7, 7), (4, 64, 64, 14, 14), (4, 64, 64, 7, 7), (4, 256, 64, 7, 7)], [(64,), (8,), (64,), (256,), (8,), (32,), (128,), (128,), (512,), (16,), (16,), (64,), (256,), (256,), (1024,), (32,), (32,), (128,), (512,), (512,), (2048,), (64,), (64,), (256,)], [(64,), (8,), (64,), (256,), (8,), (32,), (128,), (128,), (512,), (16,), (16,), (64,), (256,), (256,), (1024,), (32,), (32,), (128,), (512,), (512,), (2048,), (64,), (64,), (256,)], [(64,), (8,), (64,), (256,), (8,), (32,), (128,), (128,), (512,), (16,), (16,), (64,), (256,), (256,), (1024,), (32,), (32,), (128,), (512,), (512,), (2048,), (64,), (64,), (256,)], [(64,), (8,), (64,), (256,), (8,), (32,), (128,), (128,), (512,), (16,), (16,), (64,), (256,), (256,), (1024,), (32,), (32,), (128,), (512,), (512,), (2048,), (64,), (64,), (256,)], [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True], [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1], [1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05]], {}, 24],
['relu', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(4, 64, 16, 112, 112), (4, 8, 64, 112, 112), (4, 64, 16, 56, 56), (4, 256, 16, 56, 56), (4, 8, 64, 56, 56), (4, 32, 64, 56, 56), (4, 128, 16, 56, 56), (4, 128, 16, 28, 28), (4, 512, 16, 28, 28), (4, 16, 64, 56, 56), (4, 16, 64, 28, 28), (4, 64, 64, 28, 28), (4, 256, 16, 28, 28), (4, 256, 16, 14, 14), (4, 1024, 16, 14, 14), (4, 32, 64, 28, 28), (4, 32, 64, 14, 14), (4, 128, 64, 14, 14), (4, 512, 16, 14, 14), (4, 512, 16, 7, 7), (4, 2048, 16, 7, 7), (4, 64, 64, 14, 14), (4, 64, 64, 7, 7), (4, 256, 64, 7, 7)]], {'inplace': [True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True]}, 24],
['max_pool3d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(4, 64, 16, 112, 112), (4, 8, 64, 112, 112)], [(1, 3, 3), (1, 3, 3)], [(1, 2, 2), (1, 2, 2)], [(0, 1, 1), (0, 1, 1)], [1, 1], [False, False], [False, False]], {}, 2],
['cat', 'torch', ['torch.cuda.FloatTensor'], [[((4, 64, 16, 56, 56), (4, 16, 16, 56, 56)), ((4, 256, 16, 56, 56), (4, 64, 16, 56, 56)), ((4, 512, 16, 28, 28), (4, 128, 16, 28, 28)), ((4, 1024, 16, 14, 14), (4, 256, 16, 14, 14)), ((4, 256, 1, 1, 1), (4, 2048, 1, 1, 1))]], {'dim': [1, 1, 1, 1, 1]}, 5],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(4, 256, 16, 56, 56), (4, 32, 64, 56, 56), (4, 512, 16, 28, 28), (4, 64, 64, 28, 28), (4, 1024, 16, 14, 14), (4, 128, 64, 14, 14), (4, 2048, 16, 7, 7), (4, 256, 64, 7, 7)], [(4, 256, 16, 56, 56), (4, 32, 64, 56, 56), (4, 512, 16, 28, 28), (4, 64, 64, 28, 28), (4, 1024, 16, 14, 14), (4, 128, 64, 14, 14), (4, 2048, 16, 7, 7), (4, 256, 64, 7, 7)]], {}, 8],
['adaptive_avg_pool3d', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(4, 2048, 16, 7, 7), (4, 256, 64, 7, 7)], [(1, 1, 1), (1, 1, 1)]], {}, 2],
['dropout', 'torch.nn.functional', ['torch.cuda.FloatTensor'], [[(4, 2304, 1, 1, 1)], [0.5], [True], [False]], {}, 1],
['linear', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(4, 2304)], [(174, 2304)], [(174,)]], {}, 1],
['cross_entropy', 'torch.nn.functional', ['torch.cuda.FloatTensor', 'torch.cuda.LongTensor'], [[(4, 174)], [(4,)]], {}, 1],
['imul', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1.0]], {}, 1],
['mean', 'torch.Tensor', ['torch.cuda.DoubleTensor'], [[()]], {}, 1],
['mean', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()]], {}, 1],
['radd', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [0]], {}, 1],
['norm', 'torch', ['torch.cuda.FloatTensor'], [[(64, 3, 1, 7, 7), (64,), (64, 80, 1, 1, 1), (64, 64, 1, 3, 3), (256, 64, 1, 1, 1), (256,), (256, 80, 1, 1, 1), (64, 256, 1, 1, 1), (128, 320, 1, 1, 1), (128,), (128, 128, 1, 3, 3), (512, 128, 1, 1, 1), (512,), (512, 320, 1, 1, 1), (128, 512, 1, 1, 1), (256, 640, 3, 1, 1), (256, 256, 1, 3, 3), (1024, 256, 1, 1, 1), (1024,), (1024, 640, 1, 1, 1), (256, 1024, 3, 1, 1), (512, 1280, 3, 1, 1), (512, 512, 1, 3, 3), (2048, 512, 1, 1, 1), (2048,), (2048, 1280, 1, 1, 1), (512, 2048, 3, 1, 1), (16, 8, 7, 1, 1), (64, 32, 7, 1, 1), (128, 64, 7, 1, 1), (256, 128, 7, 1, 1), (8, 3, 5, 7, 7), (8,), (8, 8, 3, 1, 1), (8, 8, 1, 3, 3), (32, 8, 1, 1, 1), (32,), (8, 32, 3, 1, 1), (16, 32, 3, 1, 1), (16,), (16, 16, 1, 3, 3), (64, 16, 1, 1, 1), (64, 32, 1, 1, 1), (16, 64, 3, 1, 1), (32, 64, 3, 1, 1), (32, 32, 1, 3, 3), (128, 32, 1, 1, 1), (128, 64, 1, 1, 1), (32, 128, 3, 1, 1), (64, 128, 3, 1, 1), (256, 128, 1, 1, 1), (64, 256, 3, 1, 1), (174, 2304), (174,), (324,)], [2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0]], {}, 55],
['stack', 'torch', ['torch.cuda.FloatTensor'], [[((), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ())]], {}, 1],
['add', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [1e-06]], {}, 1],
['rtruediv', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [40.0]], {}, 1],
['reciprocal', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()]], {}, 1],
['mul', 'torch.Tensor', ['torch.cuda.FloatTensor'], [[()], [40.0]], {}, 1],
['clamp', 'torch', ['torch.cuda.FloatTensor'], [[()]], {'max': 1.0}, 1],
['mul_', 'torch.Tensor', ['torch.cuda.FloatTensor', 'torch.cuda.FloatTensor'], [[(64, 3, 1, 7, 7), (64,), (64, 80, 1, 1, 1), (64, 64, 1, 3, 3), (256, 64, 1, 1, 1), (256,), (256, 80, 1, 1, 1), (64, 256, 1, 1, 1), (128, 320, 1, 1, 1), (128,), (128, 128, 1, 3, 3), (512, 128, 1, 1, 1), (512,), (512, 320, 1, 1, 1), (128, 512, 1, 1, 1), (256, 640, 3, 1, 1), (256, 256, 1, 3, 3), (1024, 256, 1, 1, 1), (1024,), (1024, 640, 1, 1, 1), (256, 1024, 3, 1, 1), (512, 1280, 3, 1, 1), (512, 512, 1, 3, 3), (2048, 512, 1, 1, 1), (2048,), (2048, 1280, 1, 1, 1), (512, 2048, 3, 1, 1), (16, 8, 7, 1, 1), (64, 32, 7, 1, 1), (128, 64, 7, 1, 1), (256, 128, 7, 1, 1), (8, 3, 5, 7, 7), (8,), (8, 8, 3, 1, 1), (8, 8, 1, 3, 3), (32, 8, 1, 1, 1), (32,), (8, 32, 3, 1, 1), (16, 32, 3, 1, 1), (16,), (16, 16, 1, 3, 3), (64, 16, 1, 1, 1), (64, 32, 1, 1, 1), (16, 64, 3, 1, 1), (32, 64, 3, 1, 1), (32, 32, 1, 3, 3), (128, 32, 1, 1, 1), (128, 64, 1, 1, 1), (32, 128, 3, 1, 1), (64, 128, 3, 1, 1), (256, 128, 1, 1, 1), (64, 256, 3, 1, 1), (174, 2304), (174,)], [(), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()]], {}, 54],
['sgd', 'torch.optim._functional', ['torch.cuda.FloatTensor'], [[(64, 3, 1, 7, 7), (64,), (64, 80, 1, 1, 1), (64, 64, 1, 3, 3), (256, 64, 1, 1, 1), (256,), (256, 80, 1, 1, 1), (64, 256, 1, 1, 1), (128, 320, 1, 1, 1), (128,), (128, 128, 1, 3, 3), (512, 128, 1, 1, 1), (512,), (512, 320, 1, 1, 1), (128, 512, 1, 1, 1), (256, 640, 3, 1, 1), (256, 256, 1, 3, 3), (1024, 256, 1, 1, 1), (1024,), (1024, 640, 1, 1, 1), (256, 1024, 3, 1, 1), (512, 1280, 3, 1, 1), (512, 512, 1, 3, 3), (2048, 512, 1, 1, 1), (2048,), (2048, 1280, 1, 1, 1), (512, 2048, 3, 1, 1), (16, 8, 7, 1, 1), (64, 32, 7, 1, 1), (128, 64, 7, 1, 1), (256, 128, 7, 1, 1), (8, 3, 5, 7, 7), (8,), (8, 8, 3, 1, 1), (8, 8, 1, 3, 3), (32, 8, 1, 1, 1), (32,), (8, 32, 3, 1, 1), (16, 32, 3, 1, 1), (16,), (16, 16, 1, 3, 3), (64, 16, 1, 1, 1), (64, 32, 1, 1, 1), (16, 64, 3, 1, 1), (32, 64, 3, 1, 1), (32, 32, 1, 3, 3), (128, 32, 1, 1, 1), (128, 64, 1, 1, 1), (32, 128, 3, 1, 1), (64, 128, 3, 1, 1), (256, 128, 1, 1, 1), (64, 256, 3, 1, 1), (174, 2304), (174,)]], {'weight_decay': 1e-06, 'momentum': 0.9, 'lr': 0.005999999999999998, 'dampening': 0, 'nesterov': False}, 54],
]