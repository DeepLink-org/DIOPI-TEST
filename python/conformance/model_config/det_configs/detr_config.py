from ...config import Genfunc
from ...dtype import Dtype

detr_config = {
    'conv2d': dict(
        name=["conv2d"],
        para=dict(
            bias=[None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None],
            stride=[(2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (1, 1), (2, 2), (1, 1), (2, 2), (1, 1), (1, 1), (2, 2), (2, 2), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (2, 2), (2, 2)],
            padding=[(3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (3, 3), (3, 3), (0, 0), (1, 1), (0, 0), (0, 0), (0, 0), (1, 1), (0, 0)],
            dilation=[(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)],
            groups=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "requires_grad": [True],
                    "shape": [(2, 3, 1120, 800), (2, 64, 280, 200), (2, 64, 280, 200), (2, 64, 280, 200), (2, 256, 280, 200), (2, 256, 280, 200), (2, 128, 280, 200), (2, 128, 140, 100), (2, 256, 280, 200), (2, 512, 140, 100), (2, 128, 140, 100), (2, 512, 140, 100), (2, 256, 140, 100), (2, 256, 70, 50), (2, 512, 140, 100), (2, 1024, 70, 50), (2, 256, 70, 50), (2, 1024, 70, 50), (2, 512, 70, 50), (2, 512, 35, 25), (2, 1024, 70, 50), (2, 2048, 35, 25), (2, 512, 35, 25), (1, 3, 800, 1199), (1, 64, 200, 300), (1, 64, 200, 300), (1, 64, 200, 300), (1, 256, 200, 300), (1, 256, 200, 300), (1, 128, 200, 300), (1, 128, 100, 150), (1, 256, 200, 300), (1, 512, 100, 150), (1, 128, 100, 150), (1, 512, 100, 150), (1, 256, 100, 150), (1, 256, 50, 75), (1, 512, 100, 150), (1, 1024, 50, 75), (1, 256, 50, 75), (1, 1024, 50, 75), (1, 512, 50, 75), (1, 512, 25, 38), (1, 1024, 50, 75), (1, 2048, 25, 38), (1, 512, 25, 38), (1, 3, 800, 1224), (1, 64, 200, 306), (1, 64, 200, 306), (1, 64, 200, 306), (1, 256, 200, 306), (1, 256, 200, 306), (1, 128, 200, 306), (1, 128, 100, 153), (1, 256, 200, 306), (1, 512, 100, 153), (1, 128, 100, 153), (1, 512, 100, 153), (1, 256, 100, 153), (1, 256, 50, 77), (1, 512, 100, 153), (1, 1024, 50, 77), (1, 256, 50, 77), (1, 1024, 50, 77), (1, 512, 50, 77), (1, 512, 25, 39), (1, 1024, 50, 77), (1, 2048, 25, 39), (1, 512, 25, 39), (1, 3, 800, 1196), (1, 64, 200, 299), (1, 64, 200, 299), (1, 64, 200, 299), (1, 256, 200, 299), (1, 256, 200, 299), (1, 128, 200, 299), (1, 256, 200, 299), (1, 3, 800, 1067), (1, 64, 200, 267), (1, 64, 200, 267), (1, 64, 200, 267), (1, 256, 200, 267), (1, 256, 200, 267), (1, 128, 200, 267), (1, 128, 100, 134), (1, 256, 200, 267), (1, 512, 100, 134), (1, 128, 100, 134), (1, 512, 100, 134), (1, 256, 100, 134), (1, 256, 50, 67), (1, 512, 100, 134), (1, 1024, 50, 67), (1, 256, 50, 67), (1, 1024, 50, 67), (1, 512, 50, 67), (1, 512, 25, 34), (1, 1024, 50, 67), (1, 2048, 25, 34), (1, 512, 25, 34), (1, 3, 800, 1320), (1, 64, 200, 330), (1, 64, 200, 330), (1, 64, 200, 330), (1, 256, 200, 330), (1, 256, 200, 330), (1, 128, 200, 330), (1, 128, 100, 165), (1, 256, 200, 330), (1, 512, 100, 165), (1, 128, 100, 165), (1, 512, 100, 165), (1, 256, 100, 165), (1, 256, 50, 83), (1, 512, 100, 165), (1, 1024, 50, 83), (1, 256, 50, 83), (1, 1024, 50, 83), (1, 512, 50, 83), (1, 512, 25, 42), (1, 1024, 50, 83), (1, 2048, 25, 42), (1, 512, 25, 42), (1, 3, 800, 1002), (1, 64, 200, 251), (1, 64, 200, 251), (1, 64, 200, 251), (1, 256, 200, 251), (1, 256, 200, 251), (1, 128, 200, 251), (1, 128, 100, 126), (1, 256, 200, 251), (1, 512, 100, 126), (1, 128, 100, 126), (1, 512, 100, 126), (1, 256, 100, 126), (1, 256, 50, 63), (1, 512, 100, 126), (1, 1024, 50, 63), (1, 256, 50, 63), (1, 1024, 50, 63), (1, 512, 50, 63), (1, 512, 25, 32), (1, 1024, 50, 63), (1, 2048, 25, 32), (1, 512, 25, 32), (1, 3, 1199, 800), (1, 64, 300, 200), (1, 64, 300, 200), (1, 64, 300, 200), (1, 256, 300, 200), (1, 256, 300, 200), (1, 128, 300, 200), (1, 128, 150, 100), (1, 256, 300, 200), (1, 512, 150, 100), (1, 128, 150, 100), (1, 512, 150, 100), (1, 256, 150, 100), (1, 256, 75, 50), (1, 512, 150, 100), (1, 1024, 75, 50), (1, 256, 75, 50), (1, 1024, 75, 50), (1, 512, 75, 50), (1, 512, 38, 25), (1, 1024, 75, 50), (1, 2048, 38, 25), (1, 512, 38, 25), (1, 3, 1067, 800), (1, 64, 267, 200), (1, 64, 267, 200), (1, 64, 267, 200), (1, 256, 267, 200), (1, 256, 267, 200), (1, 128, 267, 200), (1, 128, 134, 100), (1, 256, 267, 200), (1, 512, 134, 100), (1, 128, 134, 100), (1, 512, 134, 100), (1, 256, 134, 100), (1, 256, 67, 50), (1, 512, 134, 100), (1, 1024, 67, 50), (1, 256, 67, 50), (1, 1024, 67, 50), (1, 512, 67, 50), (1, 512, 34, 25), (1, 1024, 67, 50), (1, 2048, 34, 25), (1, 512, 34, 25), (1, 3, 800, 1202), (1, 64, 200, 301), (1, 64, 200, 301), (1, 64, 200, 301), (1, 256, 200, 301), (1, 256, 200, 301), (1, 128, 200, 301), (1, 128, 100, 151), (1, 256, 200, 301), (1, 512, 100, 151), (1, 128, 100, 151), (1, 512, 100, 151), (1, 256, 100, 151), (1, 256, 50, 76), (1, 512, 100, 151), (1, 1024, 50, 76), (1, 256, 50, 76), (1, 1024, 50, 76), (1, 512, 50, 76), (1, 1024, 50, 76), (1, 3, 1140, 800), (1, 64, 285, 200), (1, 64, 285, 200), (1, 64, 285, 200), (1, 256, 285, 200), (1, 256, 285, 200), (1, 128, 285, 200), (1, 128, 143, 100), (1, 256, 285, 200), (1, 512, 143, 100), (1, 128, 143, 100), (1, 512, 143, 100), (1, 256, 143, 100), (1, 256, 72, 50), (1, 512, 143, 100), (1, 1024, 72, 50), (1, 256, 72, 50), (1, 1024, 72, 50), (1, 512, 72, 50), (1, 512, 36, 25), (1, 1024, 72, 50), (1, 2048, 36, 25), (1, 512, 36, 25), (1, 3, 800, 946), (1, 64, 200, 237), (1, 64, 200, 237), (1, 64, 200, 237), (1, 256, 200, 237), (1, 256, 200, 237), (1, 128, 200, 237), (1, 128, 100, 119), (1, 256, 200, 237), (1, 512, 100, 119), (1, 128, 100, 119), (1, 512, 100, 119), (1, 256, 100, 119), (1, 256, 50, 60), (1, 512, 100, 119), (1, 1024, 50, 60), (1, 256, 50, 60), (1, 1024, 50, 60), (1, 512, 50, 60), (1, 512, 25, 30), (1, 1024, 50, 60), (1, 2048, 25, 30), (1, 512, 25, 30), (1, 3, 800, 1024), (1, 64, 200, 256), (1, 64, 200, 256), (1, 64, 200, 256), (1, 256, 200, 256), (1, 256, 200, 256), (1, 128, 200, 256), (1, 128, 100, 128), (1, 256, 200, 256), (1, 512, 100, 128), (1, 128, 100, 128), (1, 512, 100, 128), (1, 256, 100, 128), (1, 256, 50, 64), (1, 512, 100, 128), (1, 1024, 50, 64), (1, 256, 50, 64), (1, 1024, 50, 64), (1, 512, 50, 64), (1, 1024, 50, 64), (1, 3, 800, 1108), (1, 64, 200, 277), (1, 64, 200, 277), (1, 64, 200, 277), (1, 256, 200, 277), (1, 256, 200, 277), (1, 128, 200, 277), (1, 128, 100, 139), (1, 256, 200, 277), (1, 512, 100, 139), (1, 128, 100, 139), (1, 512, 100, 139), (1, 256, 100, 139), (1, 256, 50, 70), (1, 512, 100, 139), (1, 1024, 50, 70), (1, 256, 50, 70), (1, 1024, 50, 70), (1, 512, 50, 70), (1, 512, 25, 35), (1, 1024, 50, 70), (1, 2048, 25, 35), (1, 512, 25, 35), (1, 3, 800, 1205), (1, 64, 200, 302), (1, 64, 200, 302), (1, 64, 200, 302), (1, 256, 200, 302), (1, 256, 200, 302), (1, 128, 200, 302), (1, 256, 200, 302), (1, 3, 868, 800), (1, 64, 217, 200), (1, 64, 217, 200), (1, 64, 217, 200), (1, 256, 217, 200), (1, 256, 217, 200), (1, 128, 217, 200), (1, 128, 109, 100), (1, 256, 217, 200), (1, 512, 109, 100), (1, 128, 109, 100), (1, 512, 109, 100), (1, 256, 109, 100), (1, 256, 55, 50), (1, 512, 109, 100), (1, 1024, 55, 50), (1, 256, 55, 50), (1, 1024, 55, 50), (1, 512, 55, 50), (1, 512, 28, 25), (1, 1024, 55, 50), (1, 2048, 28, 25), (1, 512, 28, 25), (1, 3, 808, 800), (1, 64, 202, 200), (1, 64, 202, 200), (1, 64, 202, 200), (1, 256, 202, 200), (1, 256, 202, 200), (1, 128, 202, 200), (1, 128, 101, 100), (1, 256, 202, 200), (1, 512, 101, 100), (1, 128, 101, 100), (1, 512, 101, 100), (1, 256, 101, 100), (1, 256, 51, 50), (1, 512, 101, 100), (1, 1024, 51, 50), (1, 256, 51, 50), (1, 1024, 51, 50), (1, 512, 51, 50), (1, 512, 26, 25), (1, 1024, 51, 50), (1, 2048, 26, 25), (1, 512, 26, 25), (1, 3, 800, 1280), (1, 64, 200, 320), (1, 64, 200, 320), (1, 64, 200, 320), (1, 256, 200, 320), (1, 256, 200, 320), (1, 128, 200, 320), (1, 128, 100, 160), (1, 256, 200, 320), (1, 512, 100, 160), (1, 128, 100, 160), (1, 512, 100, 160), (1, 256, 100, 160), (1, 256, 50, 80), (1, 512, 100, 160), (1, 1024, 50, 80), (1, 256, 50, 80), (1, 1024, 50, 80), (1, 512, 50, 80), (1, 512, 25, 40), (1, 1024, 50, 80), (1, 2048, 25, 40), (1, 512, 25, 40), (1, 3, 800, 1185), (1, 64, 200, 297), (1, 64, 200, 297), (1, 64, 200, 297), (1, 256, 200, 297), (1, 256, 200, 297), (1, 128, 200, 297), (1, 128, 100, 149), (1, 256, 200, 297), (1, 512, 100, 149), (1, 128, 100, 149), (1, 512, 100, 149), (1, 256, 100, 149), (1, 512, 100, 149), (1, 3, 773, 1333), (1, 64, 194, 334), (1, 64, 194, 334), (1, 64, 194, 334), (1, 256, 194, 334), (1, 256, 194, 334), (1, 128, 194, 334), (1, 128, 97, 167), (1, 256, 194, 334), (1, 512, 97, 167), (1, 128, 97, 167), (1, 512, 97, 167), (1, 256, 97, 167), (1, 256, 49, 84), (1, 512, 97, 167), (1, 1024, 49, 84), (1, 256, 49, 84), (1, 1024, 49, 84), (1, 512, 49, 84), (1, 1024, 49, 84), (1, 3, 800, 1140), (1, 64, 200, 285), (1, 64, 200, 285), (1, 64, 200, 285), (1, 256, 200, 285), (1, 256, 200, 285), (1, 128, 200, 285), (1, 128, 100, 143), (1, 256, 200, 285), (1, 512, 100, 143), (1, 128, 100, 143), (1, 512, 100, 143), (1, 256, 100, 143), (1, 256, 50, 72), (1, 512, 100, 143), (1, 1024, 50, 72), (1, 256, 50, 72), (1, 1024, 50, 72), (1, 512, 50, 72), (1, 512, 25, 36), (1, 1024, 50, 72), (1, 2048, 25, 36), (1, 512, 25, 36), (1, 3, 1205, 800), (1, 64, 302, 200), (1, 64, 302, 200), (1, 64, 302, 200), (1, 256, 302, 200), (1, 256, 302, 200), (1, 128, 302, 200), (1, 128, 151, 100), (1, 256, 302, 200), (1, 512, 151, 100), (1, 128, 151, 100), (1, 512, 151, 100), (1, 256, 151, 100), (1, 256, 76, 50), (1, 512, 151, 100), (1, 1024, 76, 50), (1, 256, 76, 50), (1, 1024, 76, 50), (1, 512, 76, 50), (1, 1024, 76, 50), (1, 3, 881, 800), (1, 64, 221, 200), (1, 64, 221, 200), (1, 64, 221, 200), (1, 256, 221, 200), (1, 256, 221, 200), (1, 128, 221, 200), (1, 128, 111, 100), (1, 256, 221, 200), (1, 512, 111, 100), (1, 128, 111, 100), (1, 512, 111, 100), (1, 256, 111, 100), (1, 256, 56, 50), (1, 512, 111, 100), (1, 1024, 56, 50), (1, 256, 56, 50), (1, 1024, 56, 50), (1, 512, 56, 50), (1, 1024, 56, 50), (1, 3, 750, 1333), (1, 64, 188, 334), (1, 64, 188, 334), (1, 64, 188, 334), (1, 256, 188, 334), (1, 256, 188, 334), (1, 128, 188, 334), (1, 128, 94, 167), (1, 256, 188, 334), (1, 512, 94, 167), (1, 128, 94, 167), (1, 512, 94, 167), (1, 256, 94, 167), (1, 256, 47, 84), (1, 512, 94, 167), (1, 1024, 47, 84), (1, 256, 47, 84), (1, 1024, 47, 84), (1, 512, 47, 84), (1, 512, 24, 42), (1, 1024, 47, 84), (1, 2048, 24, 42), (1, 512, 24, 42), (1, 3, 800, 800), (1, 64, 200, 200), (1, 64, 200, 200), (1, 64, 200, 200), (1, 256, 200, 200), (1, 256, 200, 200), (1, 128, 200, 200), (1, 128, 100, 100), (1, 256, 200, 200), (1, 512, 100, 100), (1, 128, 100, 100), (1, 512, 100, 100), (1, 256, 100, 100), (1, 256, 50, 50), (1, 512, 100, 100), (1, 1024, 50, 50), (1, 256, 50, 50), (1, 1024, 50, 50), (1, 512, 50, 50), (1, 512, 25, 25), (1, 1024, 50, 50), (1, 2048, 25, 25), (1, 512, 25, 25), (1, 3, 1283, 800), (1, 64, 321, 200), (1, 64, 321, 200), (1, 64, 321, 200), (1, 256, 321, 200), (1, 256, 321, 200), (1, 128, 321, 200), (1, 128, 161, 100), (1, 256, 321, 200), (1, 512, 161, 100), (1, 128, 161, 100), (1, 512, 161, 100), (1, 256, 161, 100), (1, 256, 81, 50), (1, 512, 161, 100), (1, 1024, 81, 50), (1, 256, 81, 50), (1, 1024, 81, 50), (1, 512, 81, 50), (1, 512, 41, 25), (1, 1024, 81, 50), (1, 2048, 41, 25), (1, 512, 41, 25), (1, 3, 800, 1208), (1, 3, 800, 1128), (1, 64, 200, 282), (1, 64, 200, 282), (1, 64, 200, 282), (1, 256, 200, 282), (1, 256, 200, 282), (1, 128, 200, 282), (1, 128, 100, 141), (1, 256, 200, 282), (1, 512, 100, 141), (1, 128, 100, 141), (1, 512, 100, 141), (1, 256, 100, 141), (1, 256, 50, 71), (1, 512, 100, 141), (1, 1024, 50, 71), (1, 256, 50, 71), (1, 1024, 50, 71), (1, 512, 50, 71), (1, 1024, 50, 71), (1, 3, 800, 1164), (1, 64, 200, 291), (1, 64, 200, 291), (1, 64, 200, 291), (1, 256, 200, 291), (1, 256, 200, 291), (1, 128, 200, 291), (1, 128, 100, 146), (1, 256, 200, 291), (1, 512, 100, 146), (1, 128, 100, 146), (1, 512, 100, 146), (1, 256, 100, 146), (1, 256, 50, 73), (1, 512, 100, 146), (1, 1024, 50, 73), (1, 256, 50, 73), (1, 1024, 50, 73), (1, 512, 50, 73), (1, 512, 25, 37), (1, 1024, 50, 73), (1, 2048, 25, 37), (1, 512, 25, 37), (1, 3, 800, 1129), (1, 64, 200, 283), (1, 64, 200, 283), (1, 64, 200, 283), (1, 256, 200, 283), (1, 256, 200, 283), (1, 128, 200, 283), (1, 128, 100, 142), (1, 256, 200, 283), (1, 512, 100, 142), (1, 128, 100, 142), (1, 512, 100, 142), (1, 256, 100, 142), (1, 512, 100, 142), (1, 3, 800, 1198), (1, 3, 764, 1333), (1, 64, 191, 334), (1, 64, 191, 334), (1, 64, 191, 334), (1, 256, 191, 334), (1, 256, 191, 334), (1, 128, 191, 334), (1, 128, 96, 167), (1, 256, 191, 334), (1, 512, 96, 167), (1, 128, 96, 167), (1, 512, 96, 167), (1, 256, 96, 167), (1, 256, 48, 84), (1, 512, 96, 167), (1, 1024, 48, 84), (1, 256, 48, 84), (1, 1024, 48, 84), (1, 512, 48, 84), (1, 1024, 48, 84), (1, 3, 1193, 800), (1, 64, 299, 200), (1, 64, 299, 200), (1, 64, 299, 200), (1, 256, 299, 200), (1, 256, 299, 200), (1, 128, 299, 200), (1, 256, 299, 200), (1, 3, 1201, 800), (1, 64, 301, 200), (1, 64, 301, 200), (1, 64, 301, 200), (1, 256, 301, 200), (1, 256, 301, 200), (1, 128, 301, 200), (1, 256, 301, 200), (1, 3, 800, 1201), (1, 3, 800, 1166), (1, 64, 200, 292), (1, 64, 200, 292), (1, 64, 200, 292), (1, 256, 200, 292), (1, 256, 200, 292), (1, 128, 200, 292), (1, 256, 200, 292), (1, 3, 1064, 800), (1, 64, 266, 200), (1, 64, 266, 200), (1, 64, 266, 200), (1, 256, 266, 200), (1, 256, 266, 200), (1, 128, 266, 200), (1, 128, 133, 100), (1, 256, 266, 200), (1, 512, 133, 100), (1, 128, 133, 100), (1, 512, 133, 100), (1, 256, 133, 100), (1, 512, 133, 100), (1, 3, 1202, 800), (1, 3, 800, 1299), (1, 64, 200, 325), (1, 64, 200, 325), (1, 64, 200, 325), (1, 256, 200, 325), (1, 256, 200, 325), (1, 128, 200, 325), (1, 128, 100, 163), (1, 256, 200, 325), (1, 512, 100, 163), (1, 128, 100, 163), (1, 512, 100, 163), (1, 256, 100, 163), (1, 256, 50, 82), (1, 512, 100, 163), (1, 1024, 50, 82), (1, 256, 50, 82), (1, 1024, 50, 82), (1, 512, 50, 82), (1, 512, 25, 41), (1, 1024, 50, 82), (1, 2048, 25, 41), (1, 512, 25, 41), (1, 3, 604, 1333), (1, 64, 151, 334), (1, 64, 151, 334), (1, 64, 151, 334), (1, 256, 151, 334), (1, 256, 151, 334), (1, 128, 151, 334), (1, 128, 76, 167), (1, 256, 151, 334), (1, 512, 76, 167), (1, 128, 76, 167), (1, 512, 76, 167), (1, 256, 76, 167), (1, 256, 38, 84), (1, 512, 76, 167), (1, 1024, 38, 84), (1, 256, 38, 84), (1, 1024, 38, 84), (1, 512, 38, 84), (1, 512, 19, 42), (1, 1024, 38, 84), (1, 2048, 19, 42), (1, 512, 19, 42), (1, 3, 800, 1278), (1, 3, 1203, 800), (1, 3, 800, 1313), (1, 64, 200, 329), (1, 64, 200, 329), (1, 64, 200, 329), (1, 256, 200, 329), (1, 256, 200, 329), (1, 128, 200, 329), (1, 256, 200, 329), (1, 3, 800, 1071), (1, 64, 200, 268), (1, 64, 200, 268), (1, 64, 200, 268), (1, 256, 200, 268), (1, 256, 200, 268), (1, 128, 200, 268), (1, 256, 200, 268), (1, 3, 1231, 800), (1, 64, 308, 200), (1, 64, 308, 200), (1, 64, 308, 200), (1, 256, 308, 200), (1, 256, 308, 200), (1, 128, 308, 200), (1, 128, 154, 100), (1, 256, 308, 200), (1, 512, 154, 100), (1, 128, 154, 100), (1, 512, 154, 100), (1, 256, 154, 100), (1, 256, 77, 50), (1, 512, 154, 100), (1, 1024, 77, 50), (1, 256, 77, 50), (1, 1024, 77, 50), (1, 512, 77, 50), (1, 512, 39, 25), (1, 1024, 77, 50), (1, 2048, 39, 25), (1, 512, 39, 25), (1, 3, 1196, 800), (1, 3, 800, 1156), (1, 64, 200, 289), (1, 64, 200, 289), (1, 64, 200, 289), (1, 256, 200, 289), (1, 256, 200, 289), (1, 128, 200, 289), (1, 128, 100, 145), (1, 256, 200, 289), (1, 512, 100, 145), (1, 128, 100, 145), (1, 512, 100, 145), (1, 256, 100, 145), (1, 512, 100, 145), (1, 3, 1120, 800), (1, 64, 280, 200), (1, 64, 280, 200), (1, 64, 280, 200), (1, 256, 280, 200), (1, 256, 280, 200), (1, 128, 280, 200), (1, 128, 140, 100), (1, 256, 280, 200), (1, 512, 140, 100), (1, 128, 140, 100), (1, 512, 140, 100), (1, 256, 140, 100), (1, 256, 70, 50), (1, 512, 140, 100), (1, 1024, 70, 50), (1, 256, 70, 50), (1, 1024, 70, 50), (1, 512, 70, 50), (1, 512, 35, 25), (1, 1024, 70, 50), (1, 2048, 35, 25), (1, 512, 35, 25), (1, 3, 800, 1194), (1, 3, 800, 1065), (1, 3, 800, 1060), (1, 64, 200, 265), (1, 64, 200, 265), (1, 64, 200, 265), (1, 256, 200, 265), (1, 256, 200, 265), (1, 128, 200, 265), (1, 128, 100, 133), (1, 256, 200, 265), (1, 512, 100, 133), (1, 128, 100, 133), (1, 512, 100, 133), (1, 256, 100, 133), (1, 512, 100, 133), (1, 3, 800, 809), (1, 64, 200, 203), (1, 64, 200, 203), (1, 64, 200, 203), (1, 256, 200, 203), (1, 256, 200, 203), (1, 128, 200, 203), (1, 128, 100, 102), (1, 256, 200, 203), (1, 512, 100, 102), (1, 128, 100, 102), (1, 512, 100, 102), (1, 256, 100, 102), (1, 256, 50, 51), (1, 512, 100, 102), (1, 1024, 50, 51), (1, 256, 50, 51), (1, 1024, 50, 51), (1, 512, 50, 51), (1, 512, 25, 26), (1, 1024, 50, 51), (1, 2048, 25, 26), (1, 512, 25, 26), (1, 3, 800, 1051), (1, 64, 200, 263), (1, 64, 200, 263), (1, 64, 200, 263), (1, 256, 200, 263), (1, 256, 200, 263), (1, 128, 200, 263), (1, 128, 100, 132), (1, 256, 200, 263), (1, 512, 100, 132), (1, 128, 100, 132), (1, 512, 100, 132), (1, 256, 100, 132), (1, 256, 50, 66), (1, 512, 100, 132), (1, 1024, 50, 66), (1, 256, 50, 66), (1, 1024, 50, 66), (1, 512, 50, 66), (1, 512, 25, 33), (1, 1024, 50, 66), (1, 2048, 25, 33), (1, 512, 25, 33), (1, 3, 800, 1069), (1, 3, 762, 1333), (1, 3, 1208, 800), (1, 3, 800, 1000), (1, 64, 200, 250), (1, 64, 200, 250), (1, 64, 200, 250), (1, 256, 200, 250), (1, 256, 200, 250), (1, 128, 200, 250), (1, 128, 100, 125), (1, 256, 200, 250), (1, 512, 100, 125), (1, 128, 100, 125), (1, 512, 100, 125), (1, 256, 100, 125), (1, 512, 100, 125), (1, 3, 800, 1135), (1, 64, 200, 284), (1, 64, 200, 284), (1, 64, 200, 284), (1, 256, 200, 284), (1, 256, 200, 284), (1, 128, 200, 284), (1, 256, 200, 284), (1, 3, 800, 1267), (1, 64, 200, 317), (1, 64, 200, 317), (1, 64, 200, 317), (1, 256, 200, 317), (1, 256, 200, 317), (1, 128, 200, 317), (1, 128, 100, 159), (1, 256, 200, 317), (1, 512, 100, 159), (1, 128, 100, 159), (1, 512, 100, 159), (1, 256, 100, 159), (1, 512, 100, 159), (1, 3, 800, 1240), (1, 64, 200, 310), (1, 64, 200, 310), (1, 64, 200, 310), (1, 256, 200, 310), (1, 256, 200, 310), (1, 128, 200, 310), (1, 128, 100, 155), (1, 256, 200, 310), (1, 512, 100, 155), (1, 128, 100, 155), (1, 512, 100, 155), (1, 256, 100, 155), (1, 256, 50, 78), (1, 512, 100, 155), (1, 1024, 50, 78), (1, 256, 50, 78), (1, 1024, 50, 78), (1, 512, 50, 78), (1, 1024, 50, 78), (1, 3, 800, 1120), (1, 64, 200, 280), (1, 64, 200, 280), (1, 64, 200, 280), (1, 256, 200, 280), (1, 256, 200, 280), (1, 128, 200, 280), (1, 128, 100, 140), (1, 256, 200, 280), (1, 512, 100, 140), (1, 128, 100, 140), (1, 512, 100, 140), (1, 256, 100, 140), (1, 512, 100, 140), (1, 3, 1194, 800), (1, 3, 800, 943), (1, 64, 200, 236), (1, 64, 200, 236), (1, 64, 200, 236), (1, 256, 200, 236), (1, 256, 200, 236), (1, 128, 200, 236), (1, 128, 100, 118), (1, 256, 200, 236), (1, 512, 100, 118), (1, 128, 100, 118), (1, 512, 100, 118), (1, 256, 100, 118), (1, 256, 50, 59), (1, 512, 100, 118), (1, 1024, 50, 59), (1, 256, 50, 59), (1, 1024, 50, 59), (1, 512, 50, 59), (1, 1024, 50, 59), (1, 3, 979, 800), (1, 64, 245, 200), (1, 64, 245, 200), (1, 64, 245, 200), (1, 256, 245, 200), (1, 256, 245, 200), (1, 128, 245, 200), (1, 128, 123, 100), (1, 256, 245, 200), (1, 512, 123, 100), (1, 128, 123, 100), (1, 512, 123, 100), (1, 256, 123, 100), (1, 256, 62, 50), (1, 512, 123, 100), (1, 1024, 62, 50), (1, 256, 62, 50), (1, 1024, 62, 50), (1, 512, 62, 50), (1, 512, 31, 25), (1, 1024, 62, 50), (1, 2048, 31, 25), (1, 512, 31, 25), (1, 3, 800, 1193), (1, 3, 800, 1080), (1, 64, 200, 270), (1, 64, 200, 270), (1, 64, 200, 270), (1, 256, 200, 270), (1, 256, 200, 270), (1, 128, 200, 270), (1, 128, 100, 135), (1, 256, 200, 270), (1, 512, 100, 135), (1, 128, 100, 135), (1, 512, 100, 135), (1, 256, 100, 135), (1, 256, 50, 68), (1, 512, 100, 135), (1, 1024, 50, 68), (1, 256, 50, 68), (1, 1024, 50, 68), (1, 512, 50, 68), (1, 1024, 50, 68), (1, 3, 752, 1333), (1, 3, 1333, 752), (1, 64, 334, 188), (1, 64, 334, 188), (1, 64, 334, 188), (1, 256, 334, 188), (1, 256, 334, 188), (1, 128, 334, 188), (1, 128, 167, 94), (1, 256, 334, 188), (1, 512, 167, 94), (1, 128, 167, 94), (1, 512, 167, 94), (1, 256, 167, 94), (1, 256, 84, 47), (1, 512, 167, 94), (1, 1024, 84, 47), (1, 256, 84, 47), (1, 1024, 84, 47), (1, 512, 84, 47), (1, 512, 42, 24), (1, 1024, 84, 47), (1, 2048, 42, 24), (1, 512, 42, 24), (1, 3, 1071, 800), (1, 64, 268, 200), (1, 64, 268, 200), (1, 64, 268, 200), (1, 256, 268, 200), (1, 256, 268, 200), (1, 128, 268, 200), (1, 256, 268, 200), (1, 3, 800, 1174), (1, 64, 200, 294), (1, 64, 200, 294), (1, 64, 200, 294), (1, 256, 200, 294), (1, 256, 200, 294), (1, 128, 200, 294), (1, 128, 100, 147), (1, 256, 200, 294), (1, 512, 100, 147), (1, 128, 100, 147), (1, 512, 100, 147), (1, 256, 100, 147), (1, 256, 50, 74), (1, 512, 100, 147), (1, 1024, 50, 74), (1, 256, 50, 74), (1, 1024, 50, 74), (1, 512, 50, 74), (1, 1024, 50, 74), (1, 3, 1156, 800), (1, 64, 289, 200), (1, 64, 289, 200), (1, 64, 289, 200), (1, 256, 289, 200), (1, 256, 289, 200), (1, 128, 289, 200), (1, 128, 145, 100), (1, 256, 289, 200), (1, 512, 145, 100), (1, 128, 145, 100), (1, 512, 145, 100), (1, 256, 145, 100), (1, 256, 73, 50), (1, 512, 145, 100), (1, 1024, 73, 50), (1, 256, 73, 50), (1, 1024, 73, 50), (1, 512, 73, 50), (1, 512, 37, 25), (1, 1024, 73, 50), (1, 2048, 37, 25), (1, 512, 37, 25), (1, 3, 800, 1290), (1, 64, 200, 323), (1, 64, 200, 323), (1, 64, 200, 323), (1, 256, 200, 323), (1, 256, 200, 323), (1, 128, 200, 323), (1, 128, 100, 162), (1, 256, 200, 323), (1, 512, 100, 162), (1, 128, 100, 162), (1, 512, 100, 162), (1, 256, 100, 162), (1, 256, 50, 81), (1, 512, 100, 162), (1, 1024, 50, 81), (1, 256, 50, 81), (1, 1024, 50, 81), (1, 512, 50, 81), (1, 1024, 50, 81), (1, 3, 800, 1242), (1, 64, 200, 311), (1, 64, 200, 311), (1, 64, 200, 311), (1, 256, 200, 311), (1, 256, 200, 311), (1, 128, 200, 311), (1, 128, 100, 156), (1, 256, 200, 311), (1, 512, 100, 156), (1, 128, 100, 156), (1, 512, 100, 156), (1, 256, 100, 156), (1, 512, 100, 156), (1, 3, 741, 1333), (1, 64, 186, 334), (1, 64, 186, 334), (1, 64, 186, 334), (1, 256, 186, 334), (1, 256, 186, 334), (1, 128, 186, 334), (1, 128, 93, 167), (1, 256, 186, 334), (1, 512, 93, 167), (1, 128, 93, 167), (1, 512, 93, 167), (1, 256, 93, 167), (1, 512, 93, 167), (1, 3, 800, 1293), (1, 64, 200, 324), (1, 64, 200, 324), (1, 64, 200, 324), (1, 256, 200, 324), (1, 256, 200, 324), (1, 128, 200, 324), (1, 256, 200, 324), (1, 3, 800, 1210), (1, 64, 200, 303), (1, 64, 200, 303), (1, 64, 200, 303), (1, 256, 200, 303), (1, 256, 200, 303), (1, 128, 200, 303), (1, 128, 100, 152), (1, 256, 200, 303), (1, 512, 100, 152), (1, 128, 100, 152), (1, 512, 100, 152), (1, 256, 100, 152), (1, 512, 100, 152), (1, 3, 800, 970), (1, 64, 200, 243), (1, 64, 200, 243), (1, 64, 200, 243), (1, 256, 200, 243), (1, 256, 200, 243), (1, 128, 200, 243), (1, 128, 100, 122), (1, 256, 200, 243), (1, 512, 100, 122), (1, 128, 100, 122), (1, 512, 100, 122), (1, 256, 100, 122), (1, 256, 50, 61), (1, 512, 100, 122), (1, 1024, 50, 61), (1, 256, 50, 61), (1, 1024, 50, 61), (1, 512, 50, 61), (1, 512, 25, 31), (1, 1024, 50, 61), (1, 2048, 25, 31), (1, 512, 25, 31), (1, 3, 800, 996), (1, 64, 200, 249), (1, 64, 200, 249), (1, 64, 200, 249), (1, 256, 200, 249), (1, 256, 200, 249), (1, 128, 200, 249), (1, 256, 200, 249), (1, 3, 1270, 800), (1, 64, 318, 200), (1, 64, 318, 200), (1, 64, 318, 200), (1, 256, 318, 200), (1, 256, 318, 200), (1, 128, 318, 200), (1, 128, 159, 100), (1, 256, 318, 200), (1, 512, 159, 100), (1, 128, 159, 100), (1, 512, 159, 100), (1, 256, 159, 100), (1, 256, 80, 50), (1, 512, 159, 100), (1, 1024, 80, 50), (1, 256, 80, 50), (1, 1024, 80, 50), (1, 512, 80, 50), (1, 512, 40, 25), (1, 1024, 80, 50), (1, 2048, 40, 25), (1, 512, 40, 25), (1, 3, 800, 1303), (1, 64, 200, 326), (1, 64, 200, 326), (1, 64, 200, 326), (1, 256, 200, 326), (1, 256, 200, 326), (1, 128, 200, 326), (1, 256, 200, 326), (1, 3, 689, 1333), (1, 64, 173, 334), (1, 64, 173, 334), (1, 64, 173, 334), (1, 256, 173, 334), (1, 256, 173, 334), (1, 128, 173, 334), (1, 128, 87, 167), (1, 256, 173, 334), (1, 512, 87, 167), (1, 128, 87, 167), (1, 512, 87, 167), (1, 256, 87, 167), (1, 256, 44, 84), (1, 512, 87, 167), (1, 1024, 44, 84), (1, 256, 44, 84), (1, 1024, 44, 84), (1, 512, 44, 84), (1, 512, 22, 42), (1, 1024, 44, 84), (1, 2048, 22, 42), (1, 512, 22, 42), (1, 3, 800, 1072), (1, 3, 856, 800), (1, 64, 214, 200), (1, 64, 214, 200), (1, 64, 214, 200), (1, 256, 214, 200), (1, 256, 214, 200), (1, 128, 214, 200), (1, 128, 107, 100), (1, 256, 214, 200), (1, 512, 107, 100), (1, 128, 107, 100), (1, 512, 107, 100), (1, 256, 107, 100), (1, 256, 54, 50), (1, 512, 107, 100), (1, 1024, 54, 50), (1, 256, 54, 50), (1, 1024, 54, 50), (1, 512, 54, 50), (1, 512, 27, 25), (1, 1024, 54, 50), (1, 2048, 27, 25), (1, 512, 27, 25), (1, 3, 800, 1252), (1, 64, 200, 313), (1, 64, 200, 313), (1, 64, 200, 313), (1, 256, 200, 313), (1, 256, 200, 313), (1, 128, 200, 313), (1, 128, 100, 157), (1, 256, 200, 313), (1, 512, 100, 157), (1, 128, 100, 157), (1, 512, 100, 157), (1, 256, 100, 157), (1, 256, 50, 79), (1, 512, 100, 157), (1, 1024, 50, 79), (1, 256, 50, 79), (1, 1024, 50, 79), (1, 512, 50, 79), (1, 1024, 50, 79), (1, 3, 800, 1094), (1, 64, 200, 274), (1, 64, 200, 274), (1, 64, 200, 274), (1, 256, 200, 274), (1, 256, 200, 274), (1, 128, 200, 274), (1, 128, 100, 137), (1, 256, 200, 274), (1, 512, 100, 137), (1, 128, 100, 137), (1, 512, 100, 137), (1, 256, 100, 137), (1, 256, 50, 69), (1, 512, 100, 137), (1, 1024, 50, 69), (1, 256, 50, 69), (1, 1024, 50, 69), (1, 512, 50, 69), (1, 1024, 50, 69), (1, 3, 800, 1064), (1, 64, 200, 266), (1, 64, 200, 266), (1, 64, 200, 266), (1, 256, 200, 266), (1, 256, 200, 266), (1, 128, 200, 266), (1, 256, 200, 266), (1, 3, 1246, 800), (1, 64, 312, 200), (1, 64, 312, 200), (1, 64, 312, 200), (1, 256, 312, 200), (1, 256, 312, 200), (1, 128, 312, 200), (1, 128, 156, 100), (1, 256, 312, 200), (1, 512, 156, 100), (1, 128, 156, 100), (1, 512, 156, 100), (1, 256, 156, 100), (1, 256, 78, 50), (1, 512, 156, 100), (1, 1024, 78, 50), (1, 256, 78, 50), (1, 1024, 78, 50), (1, 512, 78, 50), (1, 1024, 78, 50), (1, 3, 800, 839), (1, 64, 200, 210), (1, 64, 200, 210), (1, 64, 200, 210), (1, 256, 200, 210), (1, 256, 200, 210), (1, 128, 200, 210), (1, 128, 100, 105), (1, 256, 200, 210), (1, 512, 100, 105), (1, 128, 100, 105), (1, 512, 100, 105), (1, 256, 100, 105), (1, 256, 50, 53), (1, 512, 100, 105), (1, 1024, 50, 53), (1, 256, 50, 53), (1, 1024, 50, 53), (1, 512, 50, 53), (1, 512, 25, 27), (1, 1024, 50, 53), (1, 2048, 25, 27), (1, 512, 25, 27), (1, 3, 969, 800), (1, 64, 243, 200), (1, 64, 243, 200), (1, 64, 243, 200), (1, 256, 243, 200), (1, 256, 243, 200), (1, 128, 243, 200), (1, 128, 122, 100), (1, 256, 243, 200), (1, 512, 122, 100), (1, 128, 122, 100), (1, 512, 122, 100), (1, 256, 122, 100), (1, 256, 61, 50), (1, 512, 122, 100), (1, 1024, 61, 50), (1, 256, 61, 50), (1, 1024, 61, 50), (1, 512, 61, 50), (1, 1024, 61, 50), (1, 3, 1026, 800), (1, 64, 257, 200), (1, 64, 257, 200), (1, 64, 257, 200), (1, 256, 257, 200), (1, 256, 257, 200), (1, 128, 257, 200), (1, 128, 129, 100), (1, 256, 257, 200), (1, 512, 129, 100), (1, 128, 129, 100), (1, 512, 129, 100), (1, 256, 129, 100), (1, 256, 65, 50), (1, 512, 129, 100), (1, 1024, 65, 50), (1, 256, 65, 50), (1, 1024, 65, 50), (1, 512, 65, 50), (1, 512, 33, 25), (1, 1024, 65, 50), (1, 2048, 33, 25), (1, 512, 33, 25), (1, 3, 1333, 748), (1, 64, 334, 187), (1, 64, 334, 187), (1, 64, 334, 187), (1, 256, 334, 187), (1, 256, 334, 187), (1, 128, 334, 187), (1, 256, 334, 187), (1, 3, 800, 1076), (1, 64, 200, 269), (1, 64, 200, 269), (1, 64, 200, 269), (1, 256, 200, 269), (1, 256, 200, 269), (1, 128, 200, 269), (1, 256, 200, 269), (1, 3, 1145, 800), (1, 64, 287, 200), (1, 64, 287, 200), (1, 64, 287, 200), (1, 256, 287, 200), (1, 256, 287, 200), (1, 128, 287, 200), (1, 128, 144, 100), (1, 256, 287, 200), (1, 512, 144, 100), (1, 128, 144, 100), (1, 512, 144, 100), (1, 256, 144, 100), (1, 512, 144, 100), (1, 3, 1118, 800), (1, 3, 610, 1333), (1, 64, 153, 334), (1, 64, 153, 334), (1, 64, 153, 334), (1, 256, 153, 334), (1, 256, 153, 334), (1, 128, 153, 334), (1, 128, 77, 167), (1, 256, 153, 334), (1, 512, 77, 167), (1, 128, 77, 167), (1, 512, 77, 167), (1, 256, 77, 167), (1, 256, 39, 84), (1, 512, 77, 167), (1, 1024, 39, 84), (1, 256, 39, 84), (1, 1024, 39, 84), (1, 512, 39, 84), (1, 512, 20, 42), (1, 1024, 39, 84), (1, 2048, 20, 42), (1, 512, 20, 42), (1, 3, 1333, 798), (1, 64, 334, 200), (1, 64, 334, 200), (1, 64, 334, 200), (1, 256, 334, 200), (1, 256, 334, 200), (1, 128, 334, 200), (1, 128, 167, 100), (1, 256, 334, 200), (1, 512, 167, 100), (1, 128, 167, 100), (1, 512, 167, 100), (1, 256, 167, 100), (1, 256, 84, 50), (1, 512, 167, 100), (1, 1024, 84, 50), (1, 256, 84, 50), (1, 1024, 84, 50), (1, 512, 84, 50), (1, 512, 42, 25), (1, 1024, 84, 50), (1, 2048, 42, 25), (1, 512, 42, 25), (1, 3, 1075, 800), (1, 64, 269, 200), (1, 64, 269, 200), (1, 64, 269, 200), (1, 256, 269, 200), (1, 256, 269, 200), (1, 128, 269, 200), (1, 128, 135, 100), (1, 256, 269, 200), (1, 512, 135, 100), (1, 128, 135, 100), (1, 512, 135, 100), (1, 256, 135, 100), (1, 256, 68, 50), (1, 512, 135, 100), (1, 1024, 68, 50), (1, 256, 68, 50), (1, 1024, 68, 50), (1, 512, 68, 50), (1, 1024, 68, 50), (1, 3, 859, 800), (1, 64, 215, 200), (1, 64, 215, 200), (1, 64, 215, 200), (1, 256, 215, 200), (1, 256, 215, 200), (1, 128, 215, 200), (1, 128, 108, 100), (1, 256, 215, 200), (1, 512, 108, 100), (1, 128, 108, 100), (1, 512, 108, 100), (1, 256, 108, 100), (1, 512, 108, 100), (1, 3, 800, 1062), (1, 3, 800, 1270), (1, 64, 200, 318), (1, 64, 200, 318), (1, 64, 200, 318), (1, 256, 200, 318), (1, 256, 200, 318), (1, 128, 200, 318), (1, 256, 200, 318), (1, 3, 716, 1333), (1, 64, 179, 334), (1, 64, 179, 334), (1, 64, 179, 334), (1, 256, 179, 334), (1, 256, 179, 334), (1, 128, 179, 334), (1, 128, 90, 167), (1, 256, 179, 334), (1, 512, 90, 167), (1, 128, 90, 167), (1, 512, 90, 167), (1, 256, 90, 167), (1, 256, 45, 84), (1, 512, 90, 167), (1, 1024, 45, 84), (1, 256, 45, 84), (1, 1024, 45, 84), (1, 512, 45, 84), (1, 512, 23, 42), (1, 1024, 45, 84), (1, 2048, 23, 42), (1, 512, 23, 42), (1, 3, 800, 1087), (1, 64, 200, 272), (1, 64, 200, 272), (1, 64, 200, 272), (1, 256, 200, 272), (1, 256, 200, 272), (1, 128, 200, 272), (1, 128, 100, 136), (1, 256, 200, 272), (1, 512, 100, 136), (1, 128, 100, 136), (1, 512, 100, 136), (1, 256, 100, 136), (1, 512, 100, 136), (1, 3, 800, 1058), (1, 3, 656, 1333), (1, 64, 164, 334), (1, 64, 164, 334), (1, 64, 164, 334), (1, 256, 164, 334), (1, 256, 164, 334), (1, 128, 164, 334), (1, 128, 82, 167), (1, 256, 164, 334), (1, 512, 82, 167), (1, 128, 82, 167), (1, 512, 82, 167), (1, 256, 82, 167), (1, 256, 41, 84), (1, 512, 82, 167), (1, 1024, 41, 84), (1, 256, 41, 84), (1, 1024, 41, 84), (1, 512, 41, 84), (1, 512, 21, 42), (1, 1024, 41, 84), (1, 2048, 21, 42), (1, 512, 21, 42), (1, 3, 1225, 800), (1, 64, 307, 200), (1, 64, 307, 200), (1, 64, 307, 200), (1, 256, 307, 200), (1, 256, 307, 200), (1, 128, 307, 200), (1, 256, 307, 200), (1, 3, 970, 800), (1, 3, 800, 801), (1, 64, 200, 201), (1, 64, 200, 201), (1, 64, 200, 201), (1, 256, 200, 201), (1, 256, 200, 201), (1, 128, 200, 201), (1, 128, 100, 101), (1, 256, 200, 201), (1, 512, 100, 101), (1, 128, 100, 101), (1, 512, 100, 101), (1, 256, 100, 101), (1, 512, 100, 101), (1, 3, 1002, 800), (1, 64, 251, 200), (1, 64, 251, 200), (1, 64, 251, 200), (1, 256, 251, 200), (1, 256, 251, 200), (1, 128, 251, 200), (1, 128, 126, 100), (1, 256, 251, 200), (1, 512, 126, 100), (1, 128, 126, 100), (1, 512, 126, 100), (1, 256, 126, 100), (1, 256, 63, 50), (1, 512, 126, 100), (1, 1024, 63, 50), (1, 256, 63, 50), (1, 1024, 63, 50), (1, 512, 63, 50), (1, 512, 32, 25), (1, 1024, 63, 50), (1, 2048, 32, 25), (1, 512, 32, 25), (1, 3, 800, 1283), (1, 64, 200, 321), (1, 64, 200, 321), (1, 64, 200, 321), (1, 256, 200, 321), (1, 256, 200, 321), (1, 128, 200, 321), (1, 128, 100, 161), (1, 256, 200, 321), (1, 512, 100, 161), (1, 128, 100, 161), (1, 512, 100, 161), (1, 256, 100, 161), (1, 512, 100, 161), (1, 3, 800, 1250), (1, 3, 800, 1081), (1, 64, 200, 271), (1, 64, 200, 271), (1, 64, 200, 271), (1, 256, 200, 271), (1, 256, 200, 271), (1, 128, 200, 271), (1, 256, 200, 271), (1, 3, 749, 1333), (1, 3, 800, 1180), (1, 64, 200, 295), (1, 64, 200, 295), (1, 64, 200, 295), (1, 256, 200, 295), (1, 256, 200, 295), (1, 128, 200, 295), (1, 128, 100, 148), (1, 256, 200, 295), (1, 512, 100, 148), (1, 128, 100, 148), (1, 512, 100, 148), (1, 256, 100, 148), (1, 512, 100, 148), (1, 3, 800, 1277), (1, 3, 1333, 797), (1, 3, 800, 1039), (1, 64, 200, 260), (1, 64, 200, 260), (1, 64, 200, 260), (1, 256, 200, 260), (1, 256, 200, 260), (1, 128, 200, 260), (1, 128, 100, 130), (1, 256, 200, 260), (1, 512, 100, 130), (1, 128, 100, 130), (1, 512, 100, 130), (1, 256, 100, 130), (1, 256, 50, 65), (1, 512, 100, 130), (1, 1024, 50, 65), (1, 256, 50, 65), (1, 1024, 50, 65), (1, 512, 50, 65), (1, 1024, 50, 65), (1, 3, 1143, 800), (1, 64, 286, 200), (1, 64, 286, 200), (1, 64, 286, 200), (1, 256, 286, 200), (1, 256, 286, 200), (1, 128, 286, 200), (1, 256, 286, 200), (1, 3, 800, 923), (1, 64, 200, 231), (1, 64, 200, 231), (1, 64, 200, 231), (1, 256, 200, 231), (1, 256, 200, 231), (1, 128, 200, 231), (1, 128, 100, 116), (1, 256, 200, 231), (1, 512, 100, 116), (1, 128, 100, 116), (1, 512, 100, 116), (1, 256, 100, 116), (1, 256, 50, 58), (1, 512, 100, 116), (1, 1024, 50, 58), (1, 256, 50, 58), (1, 1024, 50, 58), (1, 512, 50, 58), (1, 512, 25, 29), (1, 1024, 50, 58), (1, 2048, 25, 29), (1, 512, 25, 29), (1, 3, 800, 909), (1, 64, 200, 228), (1, 64, 200, 228), (1, 64, 200, 228), (1, 256, 200, 228), (1, 256, 200, 228), (1, 128, 200, 228), (1, 128, 100, 114), (1, 256, 200, 228), (1, 512, 100, 114), (1, 128, 100, 114), (1, 512, 100, 114), (1, 256, 100, 114), (1, 256, 50, 57), (1, 512, 100, 114), (1, 1024, 50, 57), (1, 256, 50, 57), (1, 1024, 50, 57), (1, 512, 50, 57), (1, 1024, 50, 57), (1, 3, 800, 1089), (1, 64, 200, 273), (1, 64, 200, 273), (1, 64, 200, 273), (1, 256, 200, 273), (1, 256, 200, 273), (1, 128, 200, 273), (1, 256, 200, 273), (1, 3, 800, 990), (1, 64, 200, 248), (1, 64, 200, 248), (1, 64, 200, 248), (1, 256, 200, 248), (1, 256, 200, 248), (1, 128, 200, 248), (1, 128, 100, 124), (1, 256, 200, 248), (1, 512, 100, 124), (1, 128, 100, 124), (1, 512, 100, 124), (1, 256, 100, 124), (1, 256, 50, 62), (1, 512, 100, 124), (1, 1024, 50, 62), (1, 256, 50, 62), (1, 1024, 50, 62), (1, 512, 50, 62), (1, 1024, 50, 62), (1, 3, 869, 800), (1, 64, 218, 200), (1, 64, 218, 200), (1, 64, 218, 200), (1, 256, 218, 200), (1, 256, 218, 200), (1, 128, 218, 200), (1, 256, 218, 200), (1, 3, 1333, 598), (1, 64, 334, 150), (1, 64, 334, 150), (1, 64, 334, 150), (1, 256, 334, 150), (1, 256, 334, 150), (1, 128, 334, 150), (1, 128, 167, 75), (1, 256, 334, 150), (1, 512, 167, 75), (1, 128, 167, 75), (1, 512, 167, 75), (1, 256, 167, 75), (1, 256, 84, 38), (1, 512, 167, 75), (1, 1024, 84, 38), (1, 256, 84, 38), (1, 1024, 84, 38), (1, 512, 84, 38), (1, 512, 42, 19), (1, 1024, 84, 38), (1, 2048, 42, 19), (1, 512, 42, 19), (1, 3, 800, 1216), (1, 64, 200, 304), (1, 64, 200, 304), (1, 64, 200, 304), (1, 256, 200, 304), (1, 256, 200, 304), (1, 128, 200, 304), (1, 256, 200, 304), (1, 3, 1109, 800), (1, 64, 278, 200), (1, 64, 278, 200), (1, 64, 278, 200), (1, 256, 278, 200), (1, 256, 278, 200), (1, 128, 278, 200), (1, 128, 139, 100), (1, 256, 278, 200), (1, 512, 139, 100), (1, 128, 139, 100), (1, 512, 139, 100), (1, 256, 139, 100), (1, 512, 139, 100), (1, 3, 800, 1306), (1, 64, 200, 327), (1, 64, 200, 327), (1, 64, 200, 327), (1, 256, 200, 327), (1, 256, 200, 327), (1, 128, 200, 327), (1, 128, 100, 164), (1, 256, 200, 327), (1, 512, 100, 164), (1, 128, 100, 164), (1, 512, 100, 164), (1, 256, 100, 164), (1, 512, 100, 164), (1, 3, 1320, 800), (1, 64, 330, 200), (1, 64, 330, 200), (1, 64, 330, 200), (1, 256, 330, 200), (1, 256, 330, 200), (1, 128, 330, 200), (1, 128, 165, 100), (1, 256, 330, 200), (1, 512, 165, 100), (1, 128, 165, 100), (1, 512, 165, 100), (1, 256, 165, 100), (1, 256, 83, 50), (1, 512, 165, 100), (1, 1024, 83, 50), (1, 256, 83, 50), (1, 1024, 83, 50), (1, 512, 83, 50), (1, 1024, 83, 50), (1, 3, 1000, 800), (1, 64, 250, 200), (1, 64, 250, 200), (1, 64, 250, 200), (1, 256, 250, 200), (1, 256, 250, 200), (1, 128, 250, 200), (1, 128, 125, 100), (1, 256, 250, 200), (1, 512, 125, 100), (1, 128, 125, 100), (1, 512, 125, 100), (1, 256, 125, 100), (1, 512, 125, 100), (1, 3, 1190, 800), (1, 64, 298, 200), (1, 64, 298, 200), (1, 64, 298, 200), (1, 256, 298, 200), (1, 256, 298, 200), (1, 128, 298, 200), (1, 128, 149, 100), (1, 256, 298, 200), (1, 512, 149, 100), (1, 128, 149, 100), (1, 512, 149, 100), (1, 256, 149, 100), (1, 512, 149, 100), (1, 3, 1169, 800), (1, 64, 293, 200), (1, 64, 293, 200), (1, 64, 293, 200), (1, 256, 293, 200), (1, 256, 293, 200), (1, 128, 293, 200), (1, 128, 147, 100), (1, 256, 293, 200), (1, 512, 147, 100), (1, 128, 147, 100), (1, 512, 147, 100), (1, 256, 147, 100), (1, 256, 74, 50), (1, 512, 147, 100), (1, 1024, 74, 50), (1, 256, 74, 50), (1, 1024, 74, 50), (1, 512, 74, 50), (1, 1024, 74, 50), (1, 3, 800, 892), (1, 64, 200, 223), (1, 64, 200, 223), (1, 64, 200, 223), (1, 256, 200, 223), (1, 256, 200, 223), (1, 128, 200, 223), (1, 128, 100, 112), (1, 256, 200, 223), (1, 512, 100, 112), (1, 128, 100, 112), (1, 512, 100, 112), (1, 256, 100, 112), (1, 256, 50, 56), (1, 512, 100, 112), (1, 1024, 50, 56), (1, 256, 50, 56), (1, 1024, 50, 56), (1, 512, 50, 56), (1, 512, 25, 28), (1, 1024, 50, 56), (1, 2048, 25, 28), (1, 512, 25, 28), (1, 3, 800, 905), (1, 64, 200, 227), (1, 64, 200, 227), (1, 64, 200, 227), (1, 256, 200, 227), (1, 256, 200, 227), (1, 128, 200, 227), (1, 256, 200, 227), (1, 3, 800, 1118), (1, 3, 662, 1333), (1, 64, 166, 334), (1, 64, 166, 334), (1, 64, 166, 334), (1, 256, 166, 334), (1, 256, 166, 334), (1, 128, 166, 334), (1, 128, 83, 167), (1, 256, 166, 334), (1, 512, 83, 167), (1, 128, 83, 167), (1, 512, 83, 167), (1, 256, 83, 167), (1, 256, 42, 84), (1, 512, 83, 167), (1, 1024, 42, 84), (1, 256, 42, 84), (1, 1024, 42, 84), (1, 512, 42, 84), (1, 1024, 42, 84), (1, 3, 1133, 800), (1, 64, 284, 200), (1, 64, 284, 200), (1, 64, 284, 200), (1, 256, 284, 200), (1, 256, 284, 200), (1, 128, 284, 200), (1, 128, 142, 100), (1, 256, 284, 200), (1, 512, 142, 100), (1, 128, 142, 100), (1, 512, 142, 100), (1, 256, 142, 100), (1, 256, 71, 50), (1, 512, 142, 100), (1, 1024, 71, 50), (1, 256, 71, 50), (1, 1024, 71, 50), (1, 512, 71, 50), (1, 1024, 71, 50), (1, 3, 1049, 800), (1, 64, 263, 200), (1, 64, 263, 200), (1, 64, 263, 200), (1, 256, 263, 200), (1, 256, 263, 200), (1, 128, 263, 200), (1, 128, 132, 100), (1, 256, 263, 200), (1, 512, 132, 100), (1, 128, 132, 100), (1, 512, 132, 100), (1, 256, 132, 100), (1, 256, 66, 50), (1, 512, 132, 100), (1, 1024, 66, 50), (1, 256, 66, 50), (1, 1024, 66, 50), (1, 512, 66, 50), (1, 1024, 66, 50), (1, 3, 800, 1190), (1, 64, 200, 298), (1, 64, 200, 298), (1, 64, 200, 298), (1, 256, 200, 298), (1, 256, 200, 298), (1, 128, 200, 298), (1, 256, 200, 298), (1, 3, 800, 1177), (1, 3, 548, 1333), (1, 64, 137, 334), (1, 64, 137, 334), (1, 64, 137, 334), (1, 256, 137, 334), (1, 256, 137, 334), (1, 128, 137, 334), (1, 128, 69, 167), (1, 256, 137, 334), (1, 512, 69, 167), (1, 128, 69, 167), (1, 512, 69, 167), (1, 256, 69, 167), (1, 256, 35, 84), (1, 512, 69, 167), (1, 1024, 35, 84), (1, 256, 35, 84), (1, 1024, 35, 84), (1, 512, 35, 84), (1, 512, 18, 42), (1, 1024, 35, 84), (1, 2048, 18, 42), (1, 512, 18, 42), (1, 3, 800, 1325), (1, 64, 200, 332), (1, 64, 200, 332), (1, 64, 200, 332), (1, 256, 200, 332), (1, 256, 200, 332), (1, 128, 200, 332), (1, 128, 100, 166), (1, 256, 200, 332), (1, 512, 100, 166), (1, 128, 100, 166), (1, 512, 100, 166), (1, 256, 100, 166), (1, 512, 100, 166), (1, 3, 800, 955), (1, 64, 200, 239), (1, 64, 200, 239), (1, 64, 200, 239), (1, 256, 200, 239), (1, 256, 200, 239), (1, 128, 200, 239), (1, 128, 100, 120), (1, 256, 200, 239), (1, 512, 100, 120), (1, 128, 100, 120), (1, 512, 100, 120), (1, 256, 100, 120), (1, 512, 100, 120), (1, 3, 1036, 800), (1, 64, 259, 200), (1, 64, 259, 200), (1, 64, 259, 200), (1, 256, 259, 200), (1, 256, 259, 200), (1, 128, 259, 200), (1, 128, 130, 100), (1, 256, 259, 200), (1, 512, 130, 100), (1, 128, 130, 100), (1, 512, 130, 100), (1, 256, 130, 100), (1, 512, 130, 100), (1, 3, 698, 1333), (1, 64, 175, 334), (1, 64, 175, 334), (1, 64, 175, 334), (1, 256, 175, 334), (1, 256, 175, 334), (1, 128, 175, 334), (1, 128, 88, 167), (1, 256, 175, 334), (1, 512, 88, 167), (1, 128, 88, 167), (1, 512, 88, 167), (1, 256, 88, 167), (1, 512, 88, 167), (1, 3, 1333, 800), (1, 3, 667, 1333), (1, 64, 167, 334), (1, 64, 167, 334), (1, 64, 167, 334), (1, 256, 167, 334), (1, 256, 167, 334), (1, 128, 167, 334), (1, 128, 84, 167), (1, 256, 167, 334), (1, 512, 84, 167), (1, 128, 84, 167), (1, 512, 84, 167), (1, 256, 84, 167), (1, 512, 84, 167), (1, 3, 800, 931), (1, 64, 200, 233), (1, 64, 200, 233), (1, 64, 200, 233), (1, 256, 200, 233), (1, 256, 200, 233), (1, 128, 200, 233), (1, 128, 100, 117), (1, 256, 200, 233), (1, 512, 100, 117), (1, 128, 100, 117), (1, 512, 100, 117), (1, 256, 100, 117), (1, 512, 100, 117), (1, 3, 800, 1255), (1, 64, 200, 314), (1, 64, 200, 314), (1, 64, 200, 314), (1, 256, 200, 314), (1, 256, 200, 314), (1, 128, 200, 314), (1, 256, 200, 314), (1, 3, 800, 1145), (1, 64, 200, 287), (1, 64, 200, 287), (1, 64, 200, 287), (1, 256, 200, 287), (1, 256, 200, 287), (1, 128, 200, 287), (1, 128, 100, 144), (1, 256, 200, 287), (1, 512, 100, 144), (1, 128, 100, 144), (1, 512, 100, 144), (1, 256, 100, 144), (1, 512, 100, 144), (1, 3, 800, 985), (1, 64, 200, 247), (1, 64, 200, 247), (1, 64, 200, 247), (1, 256, 200, 247), (1, 256, 200, 247), (1, 128, 200, 247), (1, 256, 200, 247), (1, 3, 800, 966), (1, 64, 200, 242), (1, 64, 200, 242), (1, 64, 200, 242), (1, 256, 200, 242), (1, 256, 200, 242), (1, 128, 200, 242), (1, 128, 100, 121), (1, 256, 200, 242), (1, 512, 100, 121), (1, 128, 100, 121), (1, 512, 100, 121), (1, 256, 100, 121), (1, 512, 100, 121), (1, 3, 1080, 800), (1, 64, 270, 200), (1, 64, 270, 200), (1, 64, 270, 200), (1, 256, 270, 200), (1, 256, 270, 200), (1, 128, 270, 200), (1, 256, 270, 200), (1, 3, 1210, 800), (1, 64, 303, 200), (1, 64, 303, 200), (1, 64, 303, 200), (1, 256, 303, 200), (1, 256, 303, 200), (1, 128, 303, 200), (1, 128, 152, 100), (1, 256, 303, 200), (1, 512, 152, 100), (1, 128, 152, 100), (1, 512, 152, 100), (1, 256, 152, 100), (1, 512, 152, 100), (1, 3, 1333, 750), (1, 3, 798, 1333), (1, 64, 200, 334), (1, 64, 200, 334), (1, 64, 200, 334), (1, 256, 200, 334), (1, 256, 200, 334), (1, 128, 200, 334), (1, 128, 100, 167), (1, 256, 200, 334), (1, 512, 100, 167), (1, 128, 100, 167), (1, 512, 100, 167), (1, 256, 100, 167), (1, 256, 50, 84), (1, 512, 100, 167), (1, 1024, 50, 84), (1, 256, 50, 84), (1, 1024, 50, 84), (1, 512, 50, 84), (1, 1024, 50, 84), (1, 3, 800, 1032), (1, 64, 200, 258), (1, 64, 200, 258), (1, 64, 200, 258), (1, 256, 200, 258), (1, 256, 200, 258), (1, 128, 200, 258), (1, 128, 100, 129), (1, 256, 200, 258), (1, 512, 100, 129), (1, 128, 100, 129), (1, 512, 100, 129), (1, 256, 100, 129), (1, 512, 100, 129), (1, 3, 800, 1161), (1, 3, 748, 1333), (1, 64, 187, 334), (1, 64, 187, 334), (1, 64, 187, 334), (1, 256, 187, 334), (1, 256, 187, 334), (1, 128, 187, 334), (1, 256, 187, 334), (1, 3, 1198, 800), (1, 3, 658, 1333), (1, 64, 165, 334), (1, 64, 165, 334), (1, 64, 165, 334), (1, 256, 165, 334), (1, 256, 165, 334), (1, 128, 165, 334), (1, 256, 165, 334), (1, 3, 800, 1286), (1, 64, 200, 322), (1, 64, 200, 322), (1, 64, 200, 322), (1, 256, 200, 322), (1, 256, 200, 322), (1, 128, 200, 322), (1, 256, 200, 322), (1, 3, 746, 1333), (1, 3, 800, 1261), (1, 64, 200, 316), (1, 64, 200, 316), (1, 64, 200, 316), (1, 256, 200, 316), (1, 256, 200, 316), (1, 128, 200, 316), (1, 128, 100, 158), (1, 256, 200, 316), (1, 512, 100, 158), (1, 128, 100, 158), (1, 512, 100, 158), (1, 256, 100, 158), (1, 512, 100, 158), (1, 3, 800, 1222), (1, 3, 883, 800), (1, 3, 877, 800), (1, 64, 220, 200), (1, 64, 220, 200), (1, 64, 220, 200), (1, 256, 220, 200), (1, 256, 220, 200), (1, 128, 220, 200), (1, 128, 110, 100), (1, 256, 220, 200), (1, 512, 110, 100), (1, 128, 110, 100), (1, 512, 110, 100), (1, 256, 110, 100), (1, 512, 110, 100), (1, 3, 800, 862), (1, 64, 200, 216), (1, 64, 200, 216), (1, 64, 200, 216), (1, 256, 200, 216), (1, 256, 200, 216), (1, 128, 200, 216), (1, 128, 100, 108), (1, 256, 200, 216), (1, 512, 100, 108), (1, 128, 100, 108), (1, 512, 100, 108), (1, 256, 100, 108), (1, 256, 50, 54), (1, 512, 100, 108), (1, 1024, 50, 54), (1, 256, 50, 54), (1, 1024, 50, 54), (1, 512, 50, 54), (1, 1024, 50, 54), (1, 3, 800, 1115), (1, 64, 200, 279), (1, 64, 200, 279), (1, 64, 200, 279), (1, 256, 200, 279), (1, 256, 200, 279), (1, 128, 200, 279), (1, 256, 200, 279), (1, 3, 800, 1231), (1, 64, 200, 308), (1, 64, 200, 308), (1, 64, 200, 308), (1, 256, 200, 308), (1, 256, 200, 308), (1, 128, 200, 308), (1, 128, 100, 154), (1, 256, 200, 308), (1, 512, 100, 154), (1, 128, 100, 154), (1, 512, 100, 154), (1, 256, 100, 154), (1, 512, 100, 154), (1, 3, 800, 1243), (1, 3, 714, 1333), (1, 3, 978, 800), (1, 3, 1188, 800), (1, 64, 297, 200), (1, 64, 297, 200), (1, 64, 297, 200), (1, 256, 297, 200), (1, 256, 297, 200), (1, 128, 297, 200), (1, 256, 297, 200), (1, 3, 983, 800), (1, 64, 246, 200), (1, 64, 246, 200), (1, 64, 246, 200), (1, 256, 246, 200), (1, 256, 246, 200), (1, 128, 246, 200), (1, 256, 246, 200), (1, 3, 800, 1200), (1, 3, 863, 800), (1, 64, 216, 200), (1, 64, 216, 200), (1, 64, 216, 200), (1, 256, 216, 200), (1, 256, 216, 200), (1, 128, 216, 200), (1, 256, 216, 200), (1, 3, 800, 1143), (1, 64, 200, 286), (1, 64, 200, 286), (1, 64, 200, 286), (1, 256, 200, 286), (1, 256, 200, 286), (1, 128, 200, 286), (1, 256, 200, 286), (1, 3, 1073, 800), (1, 3, 1053, 800), (1, 64, 264, 200), (1, 64, 264, 200), (1, 64, 264, 200), (1, 256, 264, 200), (1, 256, 264, 200), (1, 128, 264, 200), (1, 256, 264, 200), (1, 3, 800, 1223), (1, 3, 1008, 800), (1, 64, 252, 200), (1, 64, 252, 200), (1, 64, 252, 200), (1, 256, 252, 200), (1, 256, 252, 200), (1, 128, 252, 200), (1, 256, 252, 200), (1, 3, 1006, 800), (1, 3, 800, 1151), (1, 64, 200, 288), (1, 64, 200, 288), (1, 64, 200, 288), (1, 256, 200, 288), (1, 256, 200, 288), (1, 128, 200, 288), (1, 256, 200, 288), (1, 3, 885, 800), (1, 64, 222, 200), (1, 64, 222, 200), (1, 64, 222, 200), (1, 256, 222, 200), (1, 256, 222, 200), (1, 128, 222, 200), (1, 256, 222, 200), (1, 3, 1333, 633), (1, 64, 334, 159), (1, 64, 334, 159), (1, 64, 334, 159), (1, 256, 334, 159), (1, 256, 334, 159), (1, 128, 334, 159), (1, 128, 167, 80), (1, 256, 334, 159), (1, 512, 167, 80), (1, 128, 167, 80), (1, 512, 167, 80), (1, 256, 167, 80), (1, 256, 84, 40), (1, 512, 167, 80), (1, 1024, 84, 40), (1, 256, 84, 40), (1, 1024, 84, 40), (1, 512, 84, 40), (1, 512, 42, 20), (1, 1024, 84, 40), (1, 2048, 42, 20), (1, 512, 42, 20), (1, 3, 800, 932), (1, 3, 800, 803), (1, 3, 1069, 800), (1, 3, 800, 1050), (1, 3, 800, 1188), (1, 3, 800, 1117), (1, 3, 1103, 800), (1, 64, 276, 200), (1, 64, 276, 200), (1, 64, 276, 200), (1, 256, 276, 200), (1, 256, 276, 200), (1, 128, 276, 200), (1, 128, 138, 100), (1, 256, 276, 200), (1, 512, 138, 100), (1, 128, 138, 100), (1, 512, 138, 100), (1, 256, 138, 100), (1, 256, 69, 50), (1, 512, 138, 100), (1, 1024, 69, 50), (1, 256, 69, 50), (1, 1024, 69, 50), (1, 512, 69, 50), (1, 1024, 69, 50), (1, 3, 550, 1333), (1, 64, 138, 334), (1, 64, 138, 334), (1, 64, 138, 334), (1, 256, 138, 334), (1, 256, 138, 334), (1, 128, 138, 334), (1, 256, 138, 334), (1, 3, 800, 1182), (1, 64, 200, 296), (1, 64, 200, 296), (1, 64, 200, 296), (1, 256, 200, 296), (1, 256, 200, 296), (1, 128, 200, 296), (1, 256, 200, 296), (1, 3, 800, 938), (1, 64, 200, 235), (1, 64, 200, 235), (1, 64, 200, 235), (1, 256, 200, 235), (1, 256, 200, 235), (1, 128, 200, 235), (1, 256, 200, 235), (1, 3, 800, 1014), (1, 64, 200, 254), (1, 64, 200, 254), (1, 64, 200, 254), (1, 256, 200, 254), (1, 256, 200, 254), (1, 128, 200, 254), (1, 128, 100, 127), (1, 256, 200, 254), (1, 512, 100, 127), (1, 128, 100, 127), (1, 512, 100, 127), (1, 256, 100, 127), (1, 512, 100, 127), (1, 3, 955, 800), (1, 64, 239, 200), (1, 64, 239, 200), (1, 64, 239, 200), (1, 256, 239, 200), (1, 256, 239, 200), (1, 128, 239, 200), (1, 128, 120, 100), (1, 256, 239, 200), (1, 512, 120, 100), (1, 128, 120, 100), (1, 512, 120, 100), (1, 256, 120, 100), (1, 256, 60, 50), (1, 512, 120, 100), (1, 1024, 60, 50), (1, 256, 60, 50), (1, 1024, 60, 50), (1, 512, 60, 50), (1, 512, 30, 25), (1, 1024, 60, 50), (1, 2048, 30, 25), (1, 512, 30, 25), (1, 3, 1166, 800), (1, 64, 292, 200), (1, 64, 292, 200), (1, 64, 292, 200), (1, 256, 292, 200), (1, 256, 292, 200), (1, 128, 292, 200), (1, 128, 146, 100), (1, 256, 292, 200), (1, 512, 146, 100), (1, 128, 146, 100), (1, 512, 146, 100), (1, 256, 146, 100), (1, 512, 146, 100), (1, 3, 800, 1124), (1, 64, 200, 281), (1, 64, 200, 281), (1, 64, 200, 281), (1, 256, 200, 281), (1, 256, 200, 281), (1, 128, 200, 281), (1, 256, 200, 281), (1, 3, 1333, 787), (1, 64, 334, 197), (1, 64, 334, 197), (1, 64, 334, 197), (1, 256, 334, 197), (1, 256, 334, 197), (1, 128, 334, 197), (1, 128, 167, 99), (1, 256, 334, 197), (1, 512, 167, 99), (1, 128, 167, 99), (1, 512, 167, 99), (1, 256, 167, 99), (1, 512, 167, 99), (1, 3, 1274, 800), (1, 64, 319, 200), (1, 64, 319, 200), (1, 64, 319, 200), (1, 256, 319, 200), (1, 256, 319, 200), (1, 128, 319, 200), (1, 128, 160, 100), (1, 256, 319, 200), (1, 512, 160, 100), (1, 128, 160, 100), (1, 512, 160, 100), (1, 256, 160, 100), (1, 512, 160, 100), (1, 3, 800, 1249), (1, 3, 1228, 800), (1, 3, 1130, 800), (1, 64, 283, 200), (1, 64, 283, 200), (1, 64, 283, 200), (1, 256, 283, 200), (1, 256, 283, 200), (1, 128, 283, 200), (1, 256, 283, 200), (1, 3, 964, 800), (1, 64, 241, 200), (1, 64, 241, 200), (1, 64, 241, 200), (1, 256, 241, 200), (1, 256, 241, 200), (1, 128, 241, 200), (1, 128, 121, 100), (1, 256, 241, 200), (1, 512, 121, 100), (1, 128, 121, 100), (1, 512, 121, 100), (1, 256, 121, 100), (1, 512, 121, 100), (1, 3, 824, 800), (1, 64, 206, 200), (1, 64, 206, 200), (1, 64, 206, 200), (1, 256, 206, 200), (1, 256, 206, 200), (1, 128, 206, 200), (1, 128, 103, 100), (1, 256, 206, 200), (1, 512, 103, 100), (1, 128, 103, 100), (1, 512, 103, 100), (1, 256, 103, 100), (1, 256, 52, 50), (1, 512, 103, 100), (1, 1024, 52, 50), (1, 256, 52, 50), (1, 1024, 52, 50), (1, 512, 52, 50), (1, 1024, 52, 50), (1, 3, 800, 1169), (1, 64, 200, 293), (1, 64, 200, 293), (1, 64, 200, 293), (1, 256, 200, 293), (1, 256, 200, 293), (1, 128, 200, 293), (1, 256, 200, 293), (1, 3, 809, 800), (1, 64, 203, 200), (1, 64, 203, 200), (1, 64, 203, 200), (1, 256, 203, 200), (1, 256, 203, 200), (1, 128, 203, 200), (1, 128, 102, 100), (1, 256, 203, 200), (1, 512, 102, 100), (1, 128, 102, 100), (1, 512, 102, 100), (1, 256, 102, 100), (1, 512, 102, 100), (1, 3, 800, 1237), (1, 3, 800, 1130), (1, 3, 800, 1026), (1, 64, 200, 257), (1, 64, 200, 257), (1, 64, 200, 257), (1, 256, 200, 257), (1, 256, 200, 257), (1, 128, 200, 257), (1, 256, 200, 257), (1, 3, 800, 856), (1, 64, 200, 214), (1, 64, 200, 214), (1, 64, 200, 214), (1, 256, 200, 214), (1, 256, 200, 214), (1, 128, 200, 214), (1, 128, 100, 107), (1, 256, 200, 214), (1, 512, 100, 107), (1, 128, 100, 107), (1, 512, 100, 107), (1, 256, 100, 107), (1, 512, 100, 107), (1, 3, 1041, 800), (1, 64, 261, 200), (1, 64, 261, 200), (1, 64, 261, 200), (1, 256, 261, 200), (1, 256, 261, 200), (1, 128, 261, 200), (1, 128, 131, 100), (1, 256, 261, 200), (1, 512, 131, 100), (1, 128, 131, 100), (1, 512, 131, 100), (1, 256, 131, 100), (1, 512, 131, 100), (1, 3, 800, 1333), (1, 3, 771, 1333), (1, 64, 193, 334), (1, 64, 193, 334), (1, 64, 193, 334), (1, 256, 193, 334), (1, 256, 193, 334), (1, 128, 193, 334), (1, 256, 193, 334), (1, 3, 800, 1172), (1, 3, 800, 1148), (1, 3, 800, 1029), (1, 3, 800, 1016), (1, 3, 800, 1090), (1, 3, 800, 1158), (1, 64, 200, 290), (1, 64, 200, 290), (1, 64, 200, 290), (1, 256, 200, 290), (1, 256, 200, 290), (1, 128, 200, 290), (1, 256, 200, 290), (1, 3, 1200, 800), (1, 3, 800, 1103), (1, 64, 200, 276), (1, 64, 200, 276), (1, 64, 200, 276), (1, 256, 200, 276), (1, 256, 200, 276), (1, 128, 200, 276), (1, 128, 100, 138), (1, 256, 200, 276), (1, 512, 100, 138), (1, 128, 100, 138), (1, 512, 100, 138), (1, 256, 100, 138), (1, 512, 100, 138), (1, 3, 800, 976), (1, 64, 200, 244), (1, 64, 200, 244), (1, 64, 200, 244), (1, 256, 200, 244), (1, 256, 200, 244), (1, 128, 200, 244), (1, 256, 200, 244), (1, 3, 1092, 800), (1, 64, 273, 200), (1, 64, 273, 200), (1, 64, 273, 200), (1, 256, 273, 200), (1, 256, 273, 200), (1, 128, 273, 200), (1, 128, 137, 100), (1, 256, 273, 200), (1, 512, 137, 100), (1, 128, 137, 100), (1, 512, 137, 100), (1, 256, 137, 100), (1, 512, 137, 100), (1, 3, 733, 1333), (1, 64, 184, 334), (1, 64, 184, 334), (1, 64, 184, 334), (1, 256, 184, 334), (1, 256, 184, 334), (1, 128, 184, 334), (1, 128, 92, 167), (1, 256, 184, 334), (1, 512, 92, 167), (1, 128, 92, 167), (1, 512, 92, 167), (1, 256, 92, 167), (1, 256, 46, 84), (1, 512, 92, 167), (1, 1024, 46, 84), (1, 256, 46, 84), (1, 1024, 46, 84), (1, 512, 46, 84), (1, 1024, 46, 84), (1, 3, 818, 800), (1, 64, 205, 200), (1, 64, 205, 200), (1, 64, 205, 200), (1, 256, 205, 200), (1, 256, 205, 200), (1, 128, 205, 200), (1, 256, 205, 200), (1, 3, 800, 1096), (1, 3, 803, 800), (1, 64, 201, 200), (1, 64, 201, 200), (1, 64, 201, 200), (1, 256, 201, 200), (1, 256, 201, 200), (1, 128, 201, 200), (1, 256, 201, 200), (1, 3, 800, 1106), (1, 3, 800, 1246), (1, 64, 200, 312), (1, 64, 200, 312), (1, 64, 200, 312), (1, 256, 200, 312), (1, 256, 200, 312), (1, 128, 200, 312), (1, 256, 200, 312), (1, 3, 702, 1333), (1, 64, 176, 334), (1, 64, 176, 334), (1, 64, 176, 334), (1, 256, 176, 334), (1, 256, 176, 334), (1, 128, 176, 334), (1, 256, 176, 334), (1, 3, 855, 800), (1, 3, 800, 1138), (1, 3, 1061, 800), (1, 3, 1220, 800), (1, 64, 305, 200), (1, 64, 305, 200), (1, 64, 305, 200), (1, 256, 305, 200), (1, 256, 305, 200), (1, 128, 305, 200), (1, 128, 153, 100), (1, 256, 305, 200), (1, 512, 153, 100), (1, 128, 153, 100), (1, 512, 153, 100), (1, 256, 153, 100), (1, 512, 153, 100), (1, 3, 800, 1070), (1, 3, 650, 1333), (1, 64, 163, 334), (1, 64, 163, 334), (1, 64, 163, 334), (1, 256, 163, 334), (1, 256, 163, 334), (1, 128, 163, 334), (1, 256, 163, 334), (1, 3, 800, 1092), (1, 3, 1258, 800), (1, 64, 315, 200), (1, 64, 315, 200), (1, 64, 315, 200), (1, 256, 315, 200), (1, 256, 315, 200), (1, 128, 315, 200), (1, 128, 158, 100), (1, 256, 315, 200), (1, 512, 158, 100), (1, 128, 158, 100), (1, 512, 158, 100), (1, 256, 158, 100), (1, 256, 79, 50), (1, 512, 158, 100), (1, 1024, 79, 50), (1, 256, 79, 50), (1, 1024, 79, 50), (1, 512, 79, 50), (1, 1024, 79, 50), (1, 3, 800, 1191), (1, 3, 789, 1333), (1, 64, 198, 334), (1, 64, 198, 334), (1, 64, 198, 334), (1, 256, 198, 334), (1, 256, 198, 334), (1, 128, 198, 334), (1, 128, 99, 167), (1, 256, 198, 334), (1, 512, 99, 167), (1, 128, 99, 167), (1, 512, 99, 167), (1, 256, 99, 167), (1, 512, 99, 167), (1, 3, 679, 1333), (1, 64, 170, 334), (1, 64, 170, 334), (1, 64, 170, 334), (1, 256, 170, 334), (1, 256, 170, 334), (1, 128, 170, 334), (1, 128, 85, 167), (1, 256, 170, 334), (1, 512, 85, 167), (1, 128, 85, 167), (1, 512, 85, 167), (1, 256, 85, 167), (1, 256, 43, 84), (1, 512, 85, 167), (1, 1024, 43, 84), (1, 256, 43, 84), (1, 1024, 43, 84), (1, 512, 43, 84), (1, 1024, 43, 84), (1, 3, 800, 846), (1, 64, 200, 212), (1, 64, 200, 212), (1, 64, 200, 212), (1, 256, 200, 212), (1, 256, 200, 212), (1, 128, 200, 212), (1, 128, 100, 106), (1, 256, 200, 212), (1, 512, 100, 106), (1, 128, 100, 106), (1, 512, 100, 106), (1, 256, 100, 106), (1, 512, 100, 106), (1, 3, 1187, 800), (1, 3, 1108, 800), (1, 64, 277, 200), (1, 64, 277, 200), (1, 64, 277, 200), (1, 256, 277, 200), (1, 256, 277, 200), (1, 128, 277, 200), (1, 256, 277, 200), (1, 3, 961, 800), (1, 3, 352, 1333), (1, 64, 88, 334), (1, 64, 88, 334), (1, 64, 88, 334), (1, 256, 88, 334), (1, 256, 88, 334), (1, 128, 88, 334), (1, 128, 44, 167), (1, 256, 88, 334), (1, 512, 44, 167), (1, 128, 44, 167), (1, 512, 44, 167), (1, 256, 44, 167), (1, 256, 22, 84), (1, 512, 44, 167), (1, 1024, 22, 84), (1, 256, 22, 84), (1, 1024, 22, 84), (1, 512, 22, 84), (1, 512, 11, 42), (1, 1024, 22, 84), (1, 2048, 11, 42), (1, 512, 11, 42), (1, 3, 800, 964), (1, 64, 200, 241), (1, 64, 200, 241), (1, 64, 200, 241), (1, 256, 200, 241), (1, 256, 200, 241), (1, 128, 200, 241), (1, 256, 200, 241), (1, 3, 800, 1045), (1, 64, 200, 262), (1, 64, 200, 262), (1, 64, 200, 262), (1, 256, 200, 262), (1, 256, 200, 262), (1, 128, 200, 262), (1, 128, 100, 131), (1, 256, 200, 262), (1, 512, 100, 131), (1, 128, 100, 131), (1, 512, 100, 131), (1, 256, 100, 131), (1, 512, 100, 131), (1, 3, 800, 1073), (1, 3, 800, 900), (1, 64, 200, 225), (1, 64, 200, 225), (1, 64, 200, 225), (1, 256, 200, 225), (1, 256, 200, 225), (1, 128, 200, 225), (1, 128, 100, 113), (1, 256, 200, 225), (1, 512, 100, 113), (1, 128, 100, 113), (1, 512, 100, 113), (1, 256, 100, 113), (1, 512, 100, 113), (1, 3, 1070, 800), (1, 3, 800, 983), (1, 64, 200, 246), (1, 64, 200, 246), (1, 64, 200, 246), (1, 256, 200, 246), (1, 256, 200, 246), (1, 128, 200, 246), (1, 128, 100, 123), (1, 256, 200, 246), (1, 512, 100, 123), (1, 128, 100, 123), (1, 512, 100, 123), (1, 256, 100, 123), (1, 512, 100, 123), (1, 3, 1115, 800), (1, 64, 279, 200), (1, 64, 279, 200), (1, 64, 279, 200), (1, 256, 279, 200), (1, 256, 279, 200), (1, 128, 279, 200), (1, 256, 279, 200), (1, 3, 794, 1333), (1, 64, 199, 334), (1, 64, 199, 334), (1, 64, 199, 334), (1, 256, 199, 334), (1, 256, 199, 334), (1, 128, 199, 334), (1, 256, 199, 334), (1, 3, 1078, 800), (1, 3, 800, 842), (1, 64, 200, 211), (1, 64, 200, 211), (1, 64, 200, 211), (1, 256, 200, 211), (1, 256, 200, 211), (1, 128, 200, 211), (1, 256, 200, 211), (1, 3, 800, 981), (1, 3, 800, 916), (1, 64, 200, 229), (1, 64, 200, 229), (1, 64, 200, 229), (1, 256, 200, 229), (1, 256, 200, 229), (1, 128, 200, 229), (1, 128, 100, 115), (1, 256, 200, 229), (1, 512, 100, 115), (1, 128, 100, 115), (1, 512, 100, 115), (1, 256, 100, 115), (1, 512, 100, 115), (1, 3, 800, 1053), (1, 64, 200, 264), (1, 64, 200, 264), (1, 64, 200, 264), (1, 256, 200, 264), (1, 256, 200, 264), (1, 128, 200, 264), (1, 256, 200, 264), (1, 3, 800, 1008), (1, 64, 200, 252), (1, 64, 200, 252), (1, 64, 200, 252), (1, 256, 200, 252), (1, 256, 200, 252), (1, 128, 200, 252), (1, 256, 200, 252), (1, 3, 800, 1101), (1, 3, 394, 1333), (1, 64, 99, 334), (1, 64, 99, 334), (1, 64, 99, 334), (1, 256, 99, 334), (1, 256, 99, 334), (1, 128, 99, 334), (1, 128, 50, 167), (1, 256, 99, 334), (1, 512, 50, 167), (1, 128, 50, 167), (1, 512, 50, 167), (1, 256, 50, 167), (1, 256, 25, 84), (1, 512, 50, 167), (1, 1024, 25, 84), (1, 256, 25, 84), (1, 1024, 25, 84), (1, 512, 25, 84), (1, 512, 13, 42), (1, 1024, 25, 84), (1, 2048, 13, 42), (1, 512, 13, 42), (1, 3, 1060, 800), (1, 64, 265, 200), (1, 64, 265, 200), (1, 64, 265, 200), (1, 256, 265, 200), (1, 256, 265, 200), (1, 128, 265, 200), (1, 256, 265, 200), (1, 3, 800, 841), (1, 3, 690, 1333), (1, 3, 1333, 617), (1, 64, 334, 155), (1, 64, 334, 155), (1, 64, 334, 155), (1, 256, 334, 155), (1, 256, 334, 155), (1, 128, 334, 155), (1, 128, 167, 78), (1, 256, 334, 155), (1, 512, 167, 78), (1, 128, 167, 78), (1, 512, 167, 78), (1, 256, 167, 78), (1, 256, 84, 39), (1, 512, 167, 78), (1, 1024, 84, 39), (1, 256, 84, 39), (1, 1024, 84, 39), (1, 512, 84, 39), (1, 1024, 84, 39), (1, 3, 1163, 800), (1, 64, 291, 200), (1, 64, 291, 200), (1, 64, 291, 200), (1, 256, 291, 200), (1, 256, 291, 200), (1, 128, 291, 200), (1, 256, 291, 200), (1, 3, 1191, 800), (1, 3, 451, 1333), (1, 64, 113, 334), (1, 64, 113, 334), (1, 64, 113, 334), (1, 256, 113, 334), (1, 256, 113, 334), (1, 128, 113, 334), (1, 128, 57, 167), (1, 256, 113, 334), (1, 512, 57, 167), (1, 128, 57, 167), (1, 512, 57, 167), (1, 256, 57, 167), (1, 256, 29, 84), (1, 512, 57, 167), (1, 1024, 29, 84), (1, 256, 29, 84), (1, 1024, 29, 84), (1, 512, 29, 84), (1, 512, 15, 42), (1, 1024, 29, 84), (1, 2048, 15, 42), (1, 512, 15, 42), (1, 3, 727, 1333), (1, 64, 182, 334), (1, 64, 182, 334), (1, 64, 182, 334), (1, 256, 182, 334), (1, 256, 182, 334), (1, 128, 182, 334), (1, 128, 91, 167), (1, 256, 182, 334), (1, 512, 91, 167), (1, 128, 91, 167), (1, 512, 91, 167), (1, 256, 91, 167), (1, 512, 91, 167), (1, 3, 1333, 773), (1, 64, 334, 194), (1, 64, 334, 194), (1, 64, 334, 194), (1, 256, 334, 194), (1, 256, 334, 194), (1, 128, 334, 194), (1, 128, 167, 97), (1, 256, 334, 194), (1, 512, 167, 97), (1, 128, 167, 97), (1, 512, 167, 97), (1, 256, 167, 97), (1, 256, 84, 49), (1, 512, 167, 97), (1, 1024, 84, 49), (1, 256, 84, 49), (1, 1024, 84, 49), (1, 512, 84, 49), (1, 1024, 84, 49), (1, 3, 800, 868), (1, 64, 200, 217), (1, 64, 200, 217), (1, 64, 200, 217), (1, 256, 200, 217), (1, 256, 200, 217), (1, 128, 200, 217), (1, 128, 100, 109), (1, 256, 200, 217), (1, 512, 100, 109), (1, 128, 100, 109), (1, 512, 100, 109), (1, 256, 100, 109), (1, 256, 50, 55), (1, 512, 100, 109), (1, 1024, 50, 55), (1, 256, 50, 55), (1, 1024, 50, 55), (1, 512, 50, 55), (1, 1024, 50, 55), (1, 3, 627, 1333), (1, 64, 157, 334), (1, 64, 157, 334), (1, 64, 157, 334), (1, 256, 157, 334), (1, 256, 157, 334), (1, 128, 157, 334), (1, 128, 79, 167), (1, 256, 157, 334), (1, 512, 79, 167), (1, 128, 79, 167), (1, 512, 79, 167), (1, 256, 79, 167), (1, 256, 40, 84), (1, 512, 79, 167), (1, 1024, 40, 84), (1, 256, 40, 84), (1, 1024, 40, 84), (1, 512, 40, 84), (1, 1024, 40, 84), (1, 3, 800, 899), (1, 3, 602, 1333), (1, 3, 800, 1309), (1, 64, 200, 328), (1, 64, 200, 328), (1, 64, 200, 328), (1, 256, 200, 328), (1, 256, 200, 328), (1, 128, 200, 328), (1, 256, 200, 328), (1, 3, 1213, 800), (1, 64, 304, 200), (1, 64, 304, 200), (1, 64, 304, 200), (1, 256, 304, 200), (1, 256, 304, 200), (1, 128, 304, 200), (1, 256, 304, 200), (1, 3, 1105, 800), (1, 3, 813, 800), (1, 64, 204, 200), (1, 64, 204, 200), (1, 64, 204, 200), (1, 256, 204, 200), (1, 256, 204, 200), (1, 128, 204, 200), (1, 256, 204, 200), (1, 3, 948, 800), (1, 64, 237, 200), (1, 64, 237, 200), (1, 64, 237, 200), (1, 256, 237, 200), (1, 256, 237, 200), (1, 128, 237, 200), (1, 128, 119, 100), (1, 256, 237, 200), (1, 512, 119, 100), (1, 128, 119, 100), (1, 512, 119, 100), (1, 256, 119, 100), (1, 512, 119, 100), (1, 3, 766, 1333), (1, 64, 192, 334), (1, 64, 192, 334), (1, 64, 192, 334), (1, 256, 192, 334), (1, 256, 192, 334), (1, 128, 192, 334), (1, 256, 192, 334), (1, 3, 1094, 800), (1, 64, 274, 200), (1, 64, 274, 200), (1, 64, 274, 200), (1, 256, 274, 200), (1, 256, 274, 200), (1, 128, 274, 200), (1, 256, 274, 200), (1, 3, 758, 1333), (1, 64, 190, 334), (1, 64, 190, 334), (1, 64, 190, 334), (1, 256, 190, 334), (1, 256, 190, 334), (1, 128, 190, 334), (1, 128, 95, 167), (1, 256, 190, 334), (1, 512, 95, 167), (1, 128, 95, 167), (1, 512, 95, 167), (1, 256, 95, 167), (1, 512, 95, 167), (1, 3, 1216, 800), (1, 3, 1255, 800), (1, 64, 314, 200), (1, 64, 314, 200), (1, 64, 314, 200), (1, 256, 314, 200), (1, 256, 314, 200), (1, 128, 314, 200), (1, 128, 157, 100), (1, 256, 314, 200), (1, 512, 157, 100), (1, 128, 157, 100), (1, 512, 157, 100), (1, 256, 157, 100), (1, 512, 157, 100), (1, 3, 800, 1219), (1, 64, 200, 305), (1, 64, 200, 305), (1, 64, 200, 305), (1, 256, 200, 305), (1, 256, 200, 305), (1, 128, 200, 305), (1, 256, 200, 305), (1, 3, 1113, 800), (1, 3, 800, 977), (1, 64, 200, 245), (1, 64, 200, 245), (1, 64, 200, 245), (1, 256, 200, 245), (1, 256, 200, 245), (1, 128, 200, 245), (1, 256, 200, 245), (1, 3, 1014, 800), (1, 64, 254, 200), (1, 64, 254, 200), (1, 64, 254, 200), (1, 256, 254, 200), (1, 256, 254, 200), (1, 128, 254, 200), (1, 128, 127, 100), (1, 256, 254, 200), (1, 512, 127, 100), (1, 128, 127, 100), (1, 512, 127, 100), (1, 256, 127, 100), (1, 256, 64, 50), (1, 512, 127, 100), (1, 1024, 64, 50), (1, 256, 64, 50), (1, 1024, 64, 50), (1, 512, 64, 50), (1, 1024, 64, 50), (1, 3, 800, 1078), (1, 3, 1106, 800), (1, 3, 800, 1125), (1, 3, 800, 1042), (1, 64, 200, 261), (1, 64, 200, 261), (1, 64, 200, 261), (1, 256, 200, 261), (1, 256, 200, 261), (1, 128, 200, 261), (1, 256, 200, 261), (1, 3, 800, 1294), (1, 3, 787, 1333), (1, 64, 197, 334), (1, 64, 197, 334), (1, 64, 197, 334), (1, 256, 197, 334), (1, 256, 197, 334), (1, 128, 197, 334), (1, 256, 197, 334), (1, 3, 1051, 800), (1, 3, 800, 1020), (1, 64, 200, 255), (1, 64, 200, 255), (1, 64, 200, 255), (1, 256, 200, 255), (1, 256, 200, 255), (1, 128, 200, 255), (1, 256, 200, 255), (1, 3, 800, 1044), (1, 3, 800, 961), (1, 3, 800, 971), (1, 3, 777, 1333), (1, 64, 195, 334), (1, 64, 195, 334), (1, 64, 195, 334), (1, 256, 195, 334), (1, 256, 195, 334), (1, 128, 195, 334), (1, 128, 98, 167), (1, 256, 195, 334), (1, 512, 98, 167), (1, 128, 98, 167), (1, 512, 98, 167), (1, 256, 98, 167), (1, 512, 98, 167), (1, 3, 800, 874), (1, 64, 200, 219), (1, 64, 200, 219), (1, 64, 200, 219), (1, 256, 200, 219), (1, 256, 200, 219), (1, 128, 200, 219), (1, 128, 100, 110), (1, 256, 200, 219), (1, 512, 100, 110), (1, 128, 100, 110), (1, 512, 100, 110), (1, 256, 100, 110), (1, 512, 100, 110), (1, 3, 1058, 800), (1, 3, 800, 852), (1, 64, 200, 213), (1, 64, 200, 213), (1, 64, 200, 213), (1, 256, 200, 213), (1, 256, 200, 213), (1, 128, 200, 213), (1, 256, 200, 213), (1, 3, 1251, 800), (1, 64, 313, 200), (1, 64, 313, 200), (1, 64, 313, 200), (1, 256, 313, 200), (1, 256, 313, 200), (1, 128, 313, 200), (1, 256, 313, 200), (1, 3, 631, 1333), (1, 64, 158, 334), (1, 64, 158, 334), (1, 64, 158, 334), (1, 256, 158, 334), (1, 256, 158, 334), (1, 128, 158, 334), (1, 256, 158, 334), (1, 3, 800, 1225), (1, 64, 200, 307), (1, 64, 200, 307), (1, 64, 200, 307), (1, 256, 200, 307), (1, 256, 200, 307), (1, 128, 200, 307), (1, 256, 200, 307), (1, 3, 1182, 800), (1, 64, 296, 200), (1, 64, 296, 200), (1, 64, 296, 200), (1, 256, 296, 200), (1, 256, 296, 200), (1, 128, 296, 200), (1, 128, 148, 100), (1, 256, 296, 200), (1, 512, 148, 100), (1, 128, 148, 100), (1, 512, 148, 100), (1, 256, 148, 100), (1, 512, 148, 100), (1, 3, 691, 1333), (1, 3, 800, 913), (1, 3, 1096, 800), (1, 3, 800, 1154), (1, 3, 786, 1333), (1, 3, 1062, 800), (1, 3, 899, 800), (1, 64, 225, 200), (1, 64, 225, 200), (1, 64, 225, 200), (1, 256, 225, 200), (1, 256, 225, 200), (1, 128, 225, 200), (1, 128, 113, 100), (1, 256, 225, 200), (1, 512, 113, 100), (1, 128, 113, 100), (1, 512, 113, 100), (1, 256, 113, 100), (1, 256, 57, 50), (1, 512, 113, 100), (1, 1024, 57, 50), (1, 256, 57, 50), (1, 1024, 57, 50), (1, 512, 57, 50), (1, 512, 29, 25), (1, 1024, 57, 50), (1, 2048, 29, 25), (1, 512, 29, 25), (1, 3, 1330, 800), (1, 64, 333, 200), (1, 64, 333, 200), (1, 64, 333, 200), (1, 256, 333, 200), (1, 256, 333, 200), (1, 128, 333, 200), (1, 256, 333, 200), (1, 3, 950, 800), (1, 64, 238, 200), (1, 64, 238, 200), (1, 64, 238, 200), (1, 256, 238, 200), (1, 256, 238, 200), (1, 128, 238, 200), (1, 256, 238, 200), (1, 3, 800, 1133), (1, 3, 800, 1082), (1, 3, 800, 1043), (1, 3, 800, 1056), (1, 3, 800, 1047), (1, 3, 848, 800), (1, 64, 212, 200), (1, 64, 212, 200), (1, 64, 212, 200), (1, 256, 212, 200), (1, 256, 212, 200), (1, 128, 212, 200), (1, 128, 106, 100), (1, 256, 212, 200), (1, 512, 106, 100), (1, 128, 106, 100), (1, 512, 106, 100), (1, 256, 106, 100), (1, 256, 53, 50), (1, 512, 106, 100), (1, 1024, 53, 50), (1, 256, 53, 50), (1, 1024, 53, 50), (1, 512, 53, 50), (1, 1024, 53, 50), (1, 3, 1333, 637), (1, 64, 334, 160), (1, 64, 334, 160), (1, 64, 334, 160), (1, 256, 334, 160), (1, 256, 334, 160), (1, 128, 334, 160), (1, 256, 334, 160), (1, 3, 929, 800), (1, 64, 233, 200), (1, 64, 233, 200), (1, 64, 233, 200), (1, 256, 233, 200), (1, 256, 233, 200), (1, 128, 233, 200), (1, 128, 117, 100), (1, 256, 233, 200), (1, 512, 117, 100), (1, 128, 117, 100), (1, 512, 117, 100), (1, 256, 117, 100), (1, 256, 59, 50), (1, 512, 117, 100), (1, 1024, 59, 50), (1, 256, 59, 50), (1, 1024, 59, 50), (1, 512, 59, 50), (1, 1024, 59, 50), (1, 3, 820, 800), (1, 3, 800, 1153), (1, 3, 935, 800), (1, 64, 234, 200), (1, 64, 234, 200), (1, 64, 234, 200), (1, 256, 234, 200), (1, 256, 234, 200), (1, 128, 234, 200), (1, 256, 234, 200), (1, 3, 1087, 800), (1, 64, 272, 200), (1, 64, 272, 200), (1, 64, 272, 200), (1, 256, 272, 200), (1, 256, 272, 200), (1, 128, 272, 200), (1, 128, 136, 100), (1, 256, 272, 200), (1, 512, 136, 100), (1, 128, 136, 100), (1, 512, 136, 100), (1, 256, 136, 100), (1, 512, 136, 100), (1, 3, 1227, 800), (1, 3, 800, 1061), (1, 3, 685, 1333), (1, 64, 172, 334), (1, 64, 172, 334), (1, 64, 172, 334), (1, 256, 172, 334), (1, 256, 172, 334), (1, 128, 172, 334), (1, 128, 86, 167), (1, 256, 172, 334), (1, 512, 86, 167), (1, 128, 86, 167), (1, 512, 86, 167), (1, 256, 86, 167), (1, 512, 86, 167), (1, 3, 342, 1333), (1, 64, 86, 334), (1, 64, 86, 334), (1, 64, 86, 334), (1, 256, 86, 334), (1, 256, 86, 334), (1, 128, 86, 334), (1, 128, 43, 167), (1, 256, 86, 334), (1, 512, 43, 167), (1, 128, 43, 167), (1, 512, 43, 167), (1, 256, 43, 167), (1, 512, 43, 167), (1, 3, 1153, 800), (1, 3, 880, 800), (1, 3, 754, 1333), (1, 64, 189, 334), (1, 64, 189, 334), (1, 64, 189, 334), (1, 256, 189, 334), (1, 256, 189, 334), (1, 128, 189, 334), (1, 256, 189, 334), (1, 3, 800, 952), (1, 64, 200, 238), (1, 64, 200, 238), (1, 64, 200, 238), (1, 256, 200, 238), (1, 256, 200, 238), (1, 128, 200, 238), (1, 256, 200, 238), (1, 3, 810, 800), (1, 3, 800, 1114), (1, 3, 1333, 696), (1, 64, 334, 174), (1, 64, 334, 174), (1, 64, 334, 174), (1, 256, 334, 174), (1, 256, 334, 174), (1, 128, 334, 174), (1, 128, 167, 87), (1, 256, 334, 174), (1, 512, 167, 87), (1, 128, 167, 87), (1, 512, 167, 87), (1, 256, 167, 87), (1, 256, 84, 44), (1, 512, 167, 87), (1, 1024, 84, 44), (1, 256, 84, 44), (1, 1024, 84, 44), (1, 512, 84, 44), (1, 512, 42, 22), (1, 1024, 84, 44), (1, 2048, 42, 22), (1, 512, 42, 22), (1, 3, 918, 800), (1, 64, 230, 200), (1, 64, 230, 200), (1, 64, 230, 200), (1, 256, 230, 200), (1, 256, 230, 200), (1, 128, 230, 200), (1, 128, 115, 100), (1, 256, 230, 200), (1, 512, 115, 100), (1, 128, 115, 100), (1, 512, 115, 100), (1, 256, 115, 100), (1, 256, 58, 50), (1, 512, 115, 100), (1, 1024, 58, 50), (1, 256, 58, 50), (1, 1024, 58, 50), (1, 512, 58, 50), (1, 1024, 58, 50), (1, 3, 623, 1333), (1, 64, 156, 334), (1, 64, 156, 334), (1, 64, 156, 334), (1, 256, 156, 334), (1, 256, 156, 334), (1, 128, 156, 334), (1, 128, 78, 167), (1, 256, 156, 334), (1, 512, 78, 167), (1, 128, 78, 167), (1, 512, 78, 167), (1, 256, 78, 167), (1, 512, 78, 167), (1, 3, 1089, 800), (1, 3, 605, 1333), (1, 64, 152, 334), (1, 64, 152, 334), (1, 64, 152, 334), (1, 256, 152, 334), (1, 256, 152, 334), (1, 128, 152, 334), (1, 256, 152, 334), (1, 3, 800, 848), (1, 3, 800, 1203), (1, 3, 496, 1333), (1, 64, 124, 334), (1, 64, 124, 334), (1, 64, 124, 334), (1, 256, 124, 334), (1, 256, 124, 334), (1, 128, 124, 334), (1, 128, 62, 167), (1, 256, 124, 334), (1, 512, 62, 167), (1, 128, 62, 167), (1, 512, 62, 167), (1, 256, 62, 167), (1, 256, 31, 84), (1, 512, 62, 167), (1, 1024, 31, 84), (1, 256, 31, 84), (1, 1024, 31, 84), (1, 512, 31, 84), (1, 512, 16, 42), (1, 1024, 31, 84), (1, 2048, 16, 42), (1, 512, 16, 42), (1, 3, 1034, 800), (1, 3, 654, 1333), (1, 3, 901, 800), (1, 64, 226, 200), (1, 64, 226, 200), (1, 64, 226, 200), (1, 256, 226, 200), (1, 256, 226, 200), (1, 128, 226, 200), (1, 256, 226, 200), (1, 3, 800, 1323), (1, 64, 200, 331), (1, 64, 200, 331), (1, 64, 200, 331), (1, 256, 200, 331), (1, 256, 200, 331), (1, 128, 200, 331), (1, 256, 200, 331), (1, 3, 894, 800), (1, 64, 224, 200), (1, 64, 224, 200), (1, 64, 224, 200), (1, 256, 224, 200), (1, 256, 224, 200), (1, 128, 224, 200), (1, 128, 112, 100), (1, 256, 224, 200), (1, 512, 112, 100), (1, 128, 112, 100), (1, 512, 112, 100), (1, 256, 112, 100), (1, 512, 112, 100), (1, 3, 331, 1333), (1, 64, 83, 334), (1, 64, 83, 334), (1, 64, 83, 334), (1, 256, 83, 334), (1, 256, 83, 334), (1, 128, 83, 334), (1, 128, 42, 167), (1, 256, 83, 334), (1, 512, 42, 167), (1, 128, 42, 167), (1, 512, 42, 167), (1, 256, 42, 167), (1, 256, 21, 84), (1, 512, 42, 167), (1, 1024, 21, 84), (1, 256, 21, 84), (1, 1024, 21, 84), (1, 512, 21, 84), (1, 1024, 21, 84), (1, 3, 800, 1022), (1, 3, 633, 1333), (1, 64, 159, 334), (1, 64, 159, 334), (1, 64, 159, 334), (1, 256, 159, 334), (1, 256, 159, 334), (1, 128, 159, 334), (1, 128, 80, 167), (1, 256, 159, 334), (1, 512, 80, 167), (1, 128, 80, 167), (1, 512, 80, 167), (1, 256, 80, 167), (1, 512, 80, 167), (1, 3, 664, 1333), (1, 3, 800, 871), (1, 64, 200, 218), (1, 64, 200, 218), (1, 64, 200, 218), (1, 256, 200, 218), (1, 256, 200, 218), (1, 128, 200, 218), (1, 256, 200, 218), (1, 3, 931, 800), (1, 3, 800, 1213), (1, 3, 988, 800), (1, 64, 247, 200), (1, 64, 247, 200), (1, 64, 247, 200), (1, 256, 247, 200), (1, 256, 247, 200), (1, 128, 247, 200), (1, 128, 124, 100), (1, 256, 247, 200), (1, 512, 124, 100), (1, 128, 124, 100), (1, 512, 124, 100), (1, 256, 124, 100), (1, 512, 124, 100), (1, 3, 1333, 746), (1, 3, 1003, 800), (1, 3, 800, 1028), (1, 3, 913, 800), (1, 64, 229, 200), (1, 64, 229, 200), (1, 64, 229, 200), (1, 256, 229, 200), (1, 256, 229, 200), (1, 128, 229, 200), (1, 256, 229, 200), (1, 3, 800, 1099), (1, 64, 200, 275), (1, 64, 200, 275), (1, 64, 200, 275), (1, 256, 200, 275), (1, 256, 200, 275), (1, 128, 200, 275), (1, 256, 200, 275), (1, 3, 800, 1330), (1, 64, 200, 333), (1, 64, 200, 333), (1, 64, 200, 333), (1, 256, 200, 333), (1, 256, 200, 333), (1, 128, 200, 333), (1, 256, 200, 333), (1, 3, 1333, 775), (1, 3, 800, 1296), (1, 3, 731, 1333), (1, 64, 183, 334), (1, 64, 183, 334), (1, 64, 183, 334), (1, 256, 183, 334), (1, 256, 183, 334), (1, 128, 183, 334), (1, 256, 183, 334), (1, 3, 644, 1333), (1, 64, 161, 334), (1, 64, 161, 334), (1, 64, 161, 334), (1, 256, 161, 334), (1, 256, 161, 334), (1, 128, 161, 334), (1, 128, 81, 167), (1, 256, 161, 334), (1, 512, 81, 167), (1, 128, 81, 167), (1, 512, 81, 167), (1, 256, 81, 167), (1, 512, 81, 167), (1, 3, 800, 933), (1, 64, 200, 234), (1, 64, 200, 234), (1, 64, 200, 234), (1, 256, 200, 234), (1, 256, 200, 234), (1, 128, 200, 234), (1, 256, 200, 234), (1, 3, 800, 894), (1, 64, 200, 224), (1, 64, 200, 224), (1, 64, 200, 224), (1, 256, 200, 224), (1, 256, 200, 224), (1, 128, 200, 224), (1, 256, 200, 224), (1, 3, 800, 1282), (1, 3, 1333, 685), (1, 64, 334, 172), (1, 64, 334, 172), (1, 64, 334, 172), (1, 256, 334, 172), (1, 256, 334, 172), (1, 128, 334, 172), (1, 128, 167, 86), (1, 256, 334, 172), (1, 512, 167, 86), (1, 128, 167, 86), (1, 512, 167, 86), (1, 256, 167, 86), (1, 256, 84, 43), (1, 512, 167, 86), (1, 1024, 84, 43), (1, 256, 84, 43), (1, 1024, 84, 43), (1, 512, 84, 43), (1, 1024, 84, 43), (1, 3, 585, 1333), (1, 64, 147, 334), (1, 64, 147, 334), (1, 64, 147, 334), (1, 256, 147, 334), (1, 256, 147, 334), (1, 128, 147, 334), (1, 128, 74, 167), (1, 256, 147, 334), (1, 512, 74, 167), (1, 128, 74, 167), (1, 512, 74, 167), (1, 256, 74, 167), (1, 256, 37, 84), (1, 512, 74, 167), (1, 1024, 37, 84), (1, 256, 37, 84), (1, 1024, 37, 84), (1, 512, 37, 84), (1, 1024, 37, 84), (1, 3, 800, 879), (1, 64, 200, 220), (1, 64, 200, 220), (1, 64, 200, 220), (1, 256, 200, 220), (1, 256, 200, 220), (1, 128, 200, 220), (1, 256, 200, 220), (1, 3, 1237, 800), (1, 64, 310, 200), (1, 64, 310, 200), (1, 64, 310, 200), (1, 256, 310, 200), (1, 256, 310, 200), (1, 128, 310, 200), (1, 128, 155, 100), (1, 256, 310, 200), (1, 512, 155, 100), (1, 128, 155, 100), (1, 512, 155, 100), (1, 256, 155, 100), (1, 512, 155, 100), (1, 3, 800, 804), (1, 3, 800, 1183), (1, 3, 784, 1333), (1, 64, 196, 334), (1, 64, 196, 334), (1, 64, 196, 334), (1, 256, 196, 334), (1, 256, 196, 334), (1, 128, 196, 334), (1, 256, 196, 334), (1, 3, 806, 800), (1, 3, 377, 1333), (1, 64, 95, 334), (1, 64, 95, 334), (1, 64, 95, 334), (1, 256, 95, 334), (1, 256, 95, 334), (1, 128, 95, 334), (1, 128, 48, 167), (1, 256, 95, 334), (1, 512, 48, 167), (1, 128, 48, 167), (1, 512, 48, 167), (1, 256, 48, 167), (1, 256, 24, 84), (1, 512, 48, 167), (1, 1024, 24, 84), (1, 256, 24, 84), (1, 1024, 24, 84), (1, 512, 24, 84), (1, 512, 12, 42), (1, 1024, 24, 84), (1, 2048, 12, 42), (1, 512, 12, 42), (1, 3, 1043, 800), (1, 3, 800, 1316), (1, 3, 800, 1206), (1, 3, 1280, 800), (1, 64, 320, 200), (1, 64, 320, 200), (1, 64, 320, 200), (1, 256, 320, 200), (1, 256, 320, 200), (1, 128, 320, 200), (1, 256, 320, 200), (1, 3, 800, 1234), (1, 64, 200, 309), (1, 64, 200, 309), (1, 64, 200, 309), (1, 256, 200, 309), (1, 256, 200, 309), (1, 128, 200, 309), (1, 256, 200, 309), (1, 3, 1219, 800), (1, 3, 800, 926), (1, 64, 200, 232), (1, 64, 200, 232), (1, 64, 200, 232), (1, 256, 200, 232), (1, 256, 200, 232), (1, 128, 200, 232), (1, 256, 200, 232), (1, 3, 1076, 800), (1, 3, 1012, 800), (1, 64, 253, 200), (1, 64, 253, 200), (1, 64, 253, 200), (1, 256, 253, 200), (1, 256, 253, 200), (1, 128, 253, 200), (1, 256, 253, 200), (1, 3, 737, 1333), (1, 64, 185, 334), (1, 64, 185, 334), (1, 64, 185, 334), (1, 256, 185, 334), (1, 256, 185, 334), (1, 128, 185, 334), (1, 256, 185, 334), (1, 3, 800, 998), (1, 3, 660, 1333), (1, 3, 800, 1010), (1, 64, 200, 253), (1, 64, 200, 253), (1, 64, 200, 253), (1, 256, 200, 253), (1, 256, 200, 253), (1, 128, 200, 253), (1, 256, 200, 253), (1, 3, 756, 1333), (1, 3, 994, 800), (1, 64, 249, 200), (1, 64, 249, 200), (1, 64, 249, 200), (1, 256, 249, 200), (1, 256, 249, 200), (1, 128, 249, 200), (1, 256, 249, 200), (1, 3, 924, 800), (1, 64, 231, 200), (1, 64, 231, 200), (1, 64, 231, 200), (1, 256, 231, 200), (1, 256, 231, 200), (1, 128, 231, 200), (1, 128, 116, 100), (1, 256, 231, 200), (1, 512, 116, 100), (1, 128, 116, 100), (1, 512, 116, 100), (1, 256, 116, 100), (1, 512, 116, 100), (1, 3, 1148, 800), (1, 3, 800, 853), (1, 3, 800, 950), (1, 3, 512, 1333), (1, 64, 128, 334), (1, 64, 128, 334), (1, 64, 128, 334), (1, 256, 128, 334), (1, 256, 128, 334), (1, 128, 128, 334), (1, 128, 64, 167), (1, 256, 128, 334), (1, 512, 64, 167), (1, 128, 64, 167), (1, 512, 64, 167), (1, 256, 64, 167), (1, 256, 32, 84), (1, 512, 64, 167), (1, 1024, 32, 84), (1, 256, 32, 84), (1, 1024, 32, 84), (1, 512, 32, 84), (1, 1024, 32, 84), (1, 3, 800, 1049), (1, 3, 873, 800), (1, 64, 219, 200), (1, 64, 219, 200), (1, 64, 219, 200), (1, 256, 219, 200), (1, 256, 219, 200), (1, 128, 219, 200), (1, 256, 219, 200), (1, 3, 796, 1333), (1, 3, 1333, 789), (1, 64, 334, 198), (1, 64, 334, 198), (1, 64, 334, 198), (1, 256, 334, 198), (1, 256, 334, 198), (1, 128, 334, 198), (1, 256, 334, 198), (1, 3, 800, 823), (1, 64, 200, 206), (1, 64, 200, 206), (1, 64, 200, 206), (1, 256, 200, 206), (1, 256, 200, 206), (1, 128, 200, 206), (1, 128, 100, 103), (1, 256, 200, 206), (1, 512, 100, 103), (1, 128, 100, 103), (1, 512, 100, 103), (1, 256, 100, 103), (1, 256, 50, 52), (1, 512, 100, 103), (1, 1024, 50, 52), (1, 256, 50, 52), (1, 1024, 50, 52), (1, 512, 50, 52), (1, 1024, 50, 52), (1, 3, 980, 800), (1, 3, 800, 1036), (1, 64, 200, 259), (1, 64, 200, 259), (1, 64, 200, 259), (1, 256, 200, 259), (1, 256, 200, 259), (1, 128, 200, 259), (1, 256, 200, 259), (1, 3, 800, 1228), (1, 3, 1161, 800), (1, 3, 802, 800), (1, 3, 1333, 597), (1, 3, 800, 1066), (1, 3, 1085, 800), (1, 3, 987, 800), (1, 3, 1299, 800), (1, 64, 325, 200), (1, 64, 325, 200), (1, 64, 325, 200), (1, 256, 325, 200), (1, 256, 325, 200), (1, 128, 325, 200), (1, 128, 163, 100), (1, 256, 325, 200), (1, 512, 163, 100), (1, 128, 163, 100), (1, 512, 163, 100), (1, 256, 163, 100), (1, 256, 82, 50), (1, 512, 163, 100), (1, 1024, 82, 50), (1, 256, 82, 50), (1, 1024, 82, 50), (1, 512, 82, 50), (1, 1024, 82, 50), (1, 3, 1015, 800), (1, 3, 1333, 512), (1, 64, 334, 128), (1, 64, 334, 128), (1, 64, 334, 128), (1, 256, 334, 128), (1, 256, 334, 128), (1, 128, 334, 128), (1, 128, 167, 64), (1, 256, 334, 128), (1, 512, 167, 64), (1, 128, 167, 64), (1, 512, 167, 64), (1, 256, 167, 64), (1, 256, 84, 32), (1, 512, 167, 64), (1, 1024, 84, 32), (1, 256, 84, 32), (1, 1024, 84, 32), (1, 512, 84, 32), (1, 512, 42, 16), (1, 1024, 84, 32), (1, 2048, 42, 16), (1, 512, 42, 16), (1, 3, 800, 918), (1, 64, 200, 230), (1, 64, 200, 230), (1, 64, 200, 230), (1, 256, 200, 230), (1, 256, 200, 230), (1, 128, 200, 230), (1, 256, 200, 230), (1, 3, 874, 800), (1, 3, 801, 800), (1, 3, 1306, 800), (1, 64, 327, 200), (1, 64, 327, 200), (1, 64, 327, 200), (1, 256, 327, 200), (1, 256, 327, 200), (1, 128, 327, 200), (1, 128, 164, 100), (1, 256, 327, 200), (1, 512, 164, 100), (1, 128, 164, 100), (1, 512, 164, 100), (1, 256, 164, 100), (1, 512, 164, 100), (1, 3, 1296, 800), (1, 64, 324, 200), (1, 64, 324, 200), (1, 64, 324, 200), (1, 256, 324, 200), (1, 256, 324, 200), (1, 128, 324, 200), (1, 128, 162, 100), (1, 256, 324, 200), (1, 512, 162, 100), (1, 128, 162, 100), (1, 512, 162, 100), (1, 256, 162, 100), (1, 512, 162, 100), (1, 3, 800, 1212), (1, 3, 800, 1005), (1, 3, 800, 1034), (1, 3, 652, 1333), (1, 3, 769, 1333), (1, 3, 800, 887), (1, 64, 200, 222), (1, 64, 200, 222), (1, 64, 200, 222), (1, 256, 200, 222), (1, 256, 200, 222), (1, 128, 200, 222), (1, 128, 100, 111), (1, 256, 200, 222), (1, 512, 100, 111), (1, 128, 100, 111), (1, 512, 100, 111), (1, 256, 100, 111), (1, 512, 100, 111), (1, 3, 800, 859), (1, 64, 200, 215), (1, 64, 200, 215), (1, 64, 200, 215), (1, 256, 200, 215), (1, 256, 200, 215), (1, 128, 200, 215), (1, 256, 200, 215), (1, 3, 800, 1163), (1, 3, 800, 886), (1, 3, 897, 800), (1, 3, 800, 968), (1, 3, 941, 800), (1, 64, 236, 200), (1, 64, 236, 200), (1, 64, 236, 200), (1, 256, 236, 200), (1, 256, 236, 200), (1, 128, 236, 200), (1, 128, 118, 100), (1, 256, 236, 200), (1, 512, 118, 100), (1, 128, 118, 100), (1, 512, 118, 100), (1, 256, 118, 100), (1, 512, 118, 100), (1, 3, 797, 1333), (1, 3, 968, 800), (1, 64, 242, 200), (1, 64, 242, 200), (1, 64, 242, 200), (1, 256, 242, 200), (1, 256, 242, 200), (1, 128, 242, 200), (1, 256, 242, 200), (1, 3, 1024, 800), (1, 64, 256, 200), (1, 64, 256, 200), (1, 64, 256, 200), (1, 256, 256, 200), (1, 256, 256, 200), (1, 128, 256, 200), (1, 128, 128, 100), (1, 256, 256, 200), (1, 512, 128, 100), (1, 128, 128, 100), (1, 512, 128, 100), (1, 256, 128, 100), (1, 512, 128, 100), (1, 3, 800, 1220), (1, 3, 404, 1333), (1, 64, 101, 334), (1, 64, 101, 334), (1, 64, 101, 334), (1, 256, 101, 334), (1, 256, 101, 334), (1, 128, 101, 334), (1, 128, 51, 167), (1, 256, 101, 334), (1, 512, 51, 167), (1, 128, 51, 167), (1, 512, 51, 167), (1, 256, 51, 167), (1, 256, 26, 84), (1, 512, 51, 167), (1, 1024, 26, 84), (1, 256, 26, 84), (1, 1024, 26, 84), (1, 512, 26, 84), (1, 1024, 26, 84), (1, 3, 739, 1333), (1, 3, 800, 994), (1, 3, 1018, 800), (1, 64, 255, 200), (1, 64, 255, 200), (1, 64, 255, 200), (1, 256, 255, 200), (1, 256, 255, 200), (1, 128, 255, 200), (1, 256, 255, 200), (1, 3, 362, 1333), (1, 64, 91, 334), (1, 64, 91, 334), (1, 64, 91, 334), (1, 256, 91, 334), (1, 256, 91, 334), (1, 128, 91, 334), (1, 128, 46, 167), (1, 256, 91, 334), (1, 512, 46, 167), (1, 128, 46, 167), (1, 512, 46, 167), (1, 256, 46, 167), (1, 256, 23, 84), (1, 512, 46, 167), (1, 1024, 23, 84), (1, 256, 23, 84), (1, 1024, 23, 84), (1, 512, 23, 84), (1, 1024, 23, 84), (1, 3, 506, 1333), (1, 64, 127, 334), (1, 64, 127, 334), (1, 64, 127, 334), (1, 256, 127, 334), (1, 256, 127, 334), (1, 128, 127, 334), (1, 256, 127, 334), (1, 3, 446, 1333), (1, 64, 112, 334), (1, 64, 112, 334), (1, 64, 112, 334), (1, 256, 112, 334), (1, 256, 112, 334), (1, 128, 112, 334), (1, 128, 56, 167), (1, 256, 112, 334), (1, 512, 56, 167), (1, 128, 56, 167), (1, 512, 56, 167), (1, 256, 56, 167), (1, 256, 28, 84), (1, 512, 56, 167), (1, 1024, 28, 84), (1, 256, 28, 84), (1, 1024, 28, 84), (1, 512, 28, 84), (1, 512, 14, 42), (1, 1024, 28, 84), (1, 2048, 14, 42), (1, 512, 14, 42), (1, 3, 875, 800), (1, 3, 1055, 800), (1, 3, 849, 800), (1, 64, 213, 200), (1, 64, 213, 200), (1, 64, 213, 200), (1, 256, 213, 200), (1, 256, 213, 200), (1, 128, 213, 200), (1, 256, 213, 200), (1, 3, 612, 1333), (1, 3, 1183, 800), (1, 3, 800, 1018), (1, 3, 800, 1295), (1, 3, 1293, 800), (1, 3, 946, 800), (1, 3, 725, 1333), (1, 3, 624, 1333), (1, 3, 962, 800), (1, 3, 477, 1333), (1, 64, 120, 334), (1, 64, 120, 334), (1, 64, 120, 334), (1, 256, 120, 334), (1, 256, 120, 334), (1, 128, 120, 334), (1, 128, 60, 167), (1, 256, 120, 334), (1, 512, 60, 167), (1, 128, 60, 167), (1, 512, 60, 167), (1, 256, 60, 167), (1, 256, 30, 84), (1, 512, 60, 167), (1, 1024, 30, 84), (1, 256, 30, 84), (1, 1024, 30, 84), (1, 512, 30, 84), (1, 1024, 30, 84), (1, 3, 800, 1111), (1, 64, 200, 278), (1, 64, 200, 278), (1, 64, 200, 278), (1, 256, 200, 278), (1, 256, 200, 278), (1, 128, 200, 278), (1, 256, 200, 278), (1, 3, 704, 1333), (1, 3, 1222, 800), (1, 64, 306, 200), (1, 64, 306, 200), (1, 64, 306, 200), (1, 256, 306, 200), (1, 256, 306, 200), (1, 128, 306, 200), (1, 256, 306, 200), (1, 3, 800, 1003), (1, 3, 972, 800), (1, 3, 934, 800), (1, 3, 800, 1173), (1, 3, 800, 924), (1, 3, 717, 1333), (1, 64, 180, 334), (1, 64, 180, 334), (1, 64, 180, 334), (1, 256, 180, 334), (1, 256, 180, 334), (1, 128, 180, 334), (1, 256, 180, 334), (1, 3, 821, 800), (1, 3, 853, 800), (1, 3, 800, 816), (1, 64, 200, 204), (1, 64, 200, 204), (1, 64, 200, 204), (1, 256, 200, 204), (1, 256, 200, 204), (1, 128, 200, 204), (1, 256, 200, 204), (1, 3, 1093, 800), (1, 3, 648, 1333), (1, 64, 162, 334), (1, 64, 162, 334), (1, 64, 162, 334), (1, 256, 162, 334), (1, 256, 162, 334), (1, 128, 162, 334), (1, 256, 162, 334), (1, 3, 1212, 800), (1, 3, 1056, 800), (1, 3, 1333, 673), (1, 64, 334, 169), (1, 64, 334, 169), (1, 64, 334, 169), (1, 256, 334, 169), (1, 256, 334, 169), (1, 128, 334, 169), (1, 128, 167, 85), (1, 256, 334, 169), (1, 512, 167, 85), (1, 128, 167, 85), (1, 512, 167, 85), (1, 256, 167, 85), (1, 512, 167, 85), (1, 3, 871, 800), (1, 3, 555, 1333), (1, 64, 139, 334), (1, 64, 139, 334), (1, 64, 139, 334), (1, 256, 139, 334), (1, 256, 139, 334), (1, 128, 139, 334), (1, 128, 70, 167), (1, 256, 139, 334), (1, 512, 70, 167), (1, 128, 70, 167), (1, 512, 70, 167), (1, 256, 70, 167), (1, 512, 70, 167), (1, 3, 842, 800), (1, 64, 211, 200), (1, 64, 211, 200), (1, 64, 211, 200), (1, 256, 211, 200), (1, 256, 211, 200), (1, 128, 211, 200), (1, 256, 211, 200), (1, 3, 908, 800), (1, 64, 227, 200), (1, 64, 227, 200), (1, 64, 227, 200), (1, 256, 227, 200), (1, 256, 227, 200), (1, 128, 227, 200), (1, 128, 114, 100), (1, 256, 227, 200), (1, 512, 114, 100), (1, 128, 114, 100), (1, 512, 114, 100), (1, 256, 114, 100), (1, 512, 114, 100), (1, 3, 1333, 702), (1, 64, 334, 176), (1, 64, 334, 176), (1, 64, 334, 176), (1, 256, 334, 176), (1, 256, 334, 176), (1, 128, 334, 176), (1, 128, 167, 88), (1, 256, 334, 176), (1, 512, 167, 88), (1, 128, 167, 88), (1, 512, 167, 88), (1, 256, 167, 88), (1, 512, 167, 88), (1, 3, 444, 1333), (1, 64, 111, 334), (1, 64, 111, 334), (1, 64, 111, 334), (1, 256, 111, 334), (1, 256, 111, 334), (1, 128, 111, 334), (1, 256, 111, 334), (1, 3, 921, 800), (1, 3, 800, 921), (1, 3, 800, 992), (1, 3, 800, 1085), (1, 3, 1302, 800), (1, 64, 326, 200), (1, 64, 326, 200), (1, 64, 326, 200), (1, 256, 326, 200), (1, 256, 326, 200), (1, 128, 326, 200), (1, 256, 326, 200), (1, 3, 800, 1004), (1, 3, 943, 800), (1, 3, 800, 889), (1, 3, 800, 1238), (1, 3, 800, 1254), (1, 3, 800, 1113), (1, 3, 800, 1041), (1, 3, 800, 1093), (1, 3, 800, 908), (1, 3, 933, 800), (1, 3, 936, 800), (1, 3, 872, 800), (1, 3, 606, 1333), (1, 3, 1082, 800), (1, 64, 271, 200), (1, 64, 271, 200), (1, 64, 271, 200), (1, 256, 271, 200), (1, 256, 271, 200), (1, 128, 271, 200), (1, 256, 271, 200), (1, 3, 1267, 800), (1, 64, 317, 200), (1, 64, 317, 200), (1, 64, 317, 200), (1, 256, 317, 200), (1, 256, 317, 200), (1, 128, 317, 200), (1, 256, 317, 200), (1, 3, 1127, 800), (1, 64, 282, 200), (1, 64, 282, 200), (1, 64, 282, 200), (1, 256, 282, 200), (1, 256, 282, 200), (1, 128, 282, 200), (1, 128, 141, 100), (1, 256, 282, 200), (1, 512, 141, 100), (1, 128, 141, 100), (1, 512, 141, 100), (1, 256, 141, 100), (1, 512, 141, 100), (1, 3, 800, 845), (1, 3, 1185, 800), (1, 3, 527, 1333), (1, 64, 132, 334), (1, 64, 132, 334), (1, 64, 132, 334), (1, 256, 132, 334), (1, 256, 132, 334), (1, 128, 132, 334), (1, 128, 66, 167), (1, 256, 132, 334), (1, 512, 66, 167), (1, 128, 66, 167), (1, 512, 66, 167), (1, 256, 66, 167), (1, 256, 33, 84), (1, 512, 66, 167), (1, 1024, 33, 84), (1, 256, 33, 84), (1, 1024, 33, 84), (1, 512, 33, 84), (1, 512, 17, 42), (1, 1024, 33, 84), (1, 2048, 17, 42), (1, 512, 17, 42), (1, 3, 1252, 800), (1, 3, 1022, 800), (1, 3, 823, 800), (1, 3, 1174, 800), (1, 64, 294, 200), (1, 64, 294, 200), (1, 64, 294, 200), (1, 256, 294, 200), (1, 256, 294, 200), (1, 128, 294, 200), (1, 256, 294, 200), (1, 3, 1146, 800), (1, 3, 1333, 736), (1, 64, 334, 184), (1, 64, 334, 184), (1, 64, 334, 184), (1, 256, 334, 184), (1, 256, 334, 184), (1, 128, 334, 184), (1, 128, 167, 92), (1, 256, 334, 184), (1, 512, 167, 92), (1, 128, 167, 92), (1, 512, 167, 92), (1, 256, 167, 92), (1, 256, 84, 46), (1, 512, 167, 92), (1, 1024, 84, 46), (1, 256, 84, 46), (1, 1024, 84, 46), (1, 512, 84, 46), (1, 512, 42, 23), (1, 1024, 84, 46), (1, 2048, 42, 23), (1, 512, 42, 23), (1, 3, 781, 1333), (1, 3, 1234, 800), (1, 64, 309, 200), (1, 64, 309, 200), (1, 64, 309, 200), (1, 256, 309, 200), (1, 256, 309, 200), (1, 128, 309, 200), (1, 256, 309, 200)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["weight"],
                    "requires_grad": [True],
                    "shape": [(64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 1024, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 512, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (128, 128, 3, 3), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (256, 256, 3, 3), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (512, 512, 3, 3), (64, 3, 7, 7), (64, 3, 7, 7), (64, 64, 1, 1), (64, 64, 3, 3), (256, 64, 1, 1), (64, 256, 1, 1), (128, 256, 1, 1), (128, 128, 3, 3), (512, 256, 1, 1)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'batch_norm': dict(
        name=["batch_norm"],
        para=dict(
            training=[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False],
            momentum=[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],
            eps=[1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "requires_grad": [True],
                    "shape": [(2, 64, 560, 400), (2, 64, 280, 200), (2, 256, 280, 200), (2, 128, 280, 200), (2, 128, 140, 100), (2, 512, 140, 100), (2, 256, 140, 100), (2, 256, 70, 50), (2, 1024, 70, 50), (2, 512, 70, 50), (2, 512, 35, 25), (2, 2048, 35, 25), (1, 64, 400, 600), (1, 64, 200, 300), (1, 256, 200, 300), (1, 128, 200, 300), (1, 128, 100, 150), (1, 512, 100, 150), (1, 256, 100, 150), (1, 256, 50, 75), (1, 1024, 50, 75), (1, 512, 50, 75), (1, 512, 25, 38), (1, 2048, 25, 38), (1, 64, 400, 612), (1, 64, 200, 306), (1, 256, 200, 306), (1, 128, 200, 306), (1, 128, 100, 153), (1, 512, 100, 153), (1, 256, 100, 153), (1, 256, 50, 77), (1, 1024, 50, 77), (1, 512, 50, 77), (1, 512, 25, 39), (1, 2048, 25, 39), (1, 64, 400, 598), (1, 64, 200, 299), (1, 256, 200, 299), (1, 128, 200, 299), (1, 64, 400, 534), (1, 64, 200, 267), (1, 256, 200, 267), (1, 128, 200, 267), (1, 128, 100, 134), (1, 512, 100, 134), (1, 256, 100, 134), (1, 256, 50, 67), (1, 1024, 50, 67), (1, 512, 50, 67), (1, 512, 25, 34), (1, 2048, 25, 34), (1, 64, 400, 660), (1, 64, 200, 330), (1, 256, 200, 330), (1, 128, 200, 330), (1, 128, 100, 165), (1, 512, 100, 165), (1, 256, 100, 165), (1, 256, 50, 83), (1, 1024, 50, 83), (1, 512, 50, 83), (1, 512, 25, 42), (1, 2048, 25, 42), (1, 64, 400, 501), (1, 64, 200, 251), (1, 256, 200, 251), (1, 128, 200, 251), (1, 128, 100, 126), (1, 512, 100, 126), (1, 256, 100, 126), (1, 256, 50, 63), (1, 1024, 50, 63), (1, 512, 50, 63), (1, 512, 25, 32), (1, 2048, 25, 32), (1, 64, 600, 400), (1, 64, 300, 200), (1, 256, 300, 200), (1, 128, 300, 200), (1, 128, 150, 100), (1, 512, 150, 100), (1, 256, 150, 100), (1, 256, 75, 50), (1, 1024, 75, 50), (1, 512, 75, 50), (1, 512, 38, 25), (1, 2048, 38, 25), (1, 64, 534, 400), (1, 64, 267, 200), (1, 256, 267, 200), (1, 128, 267, 200), (1, 128, 134, 100), (1, 512, 134, 100), (1, 256, 134, 100), (1, 256, 67, 50), (1, 1024, 67, 50), (1, 512, 67, 50), (1, 512, 34, 25), (1, 2048, 34, 25), (1, 64, 400, 601), (1, 64, 200, 301), (1, 256, 200, 301), (1, 128, 200, 301), (1, 128, 100, 151), (1, 512, 100, 151), (1, 256, 100, 151), (1, 256, 50, 76), (1, 1024, 50, 76), (1, 512, 50, 76), (1, 64, 570, 400), (1, 64, 285, 200), (1, 256, 285, 200), (1, 128, 285, 200), (1, 128, 143, 100), (1, 512, 143, 100), (1, 256, 143, 100), (1, 256, 72, 50), (1, 1024, 72, 50), (1, 512, 72, 50), (1, 512, 36, 25), (1, 2048, 36, 25), (1, 64, 400, 473), (1, 64, 200, 237), (1, 256, 200, 237), (1, 128, 200, 237), (1, 128, 100, 119), (1, 512, 100, 119), (1, 256, 100, 119), (1, 256, 50, 60), (1, 1024, 50, 60), (1, 512, 50, 60), (1, 512, 25, 30), (1, 2048, 25, 30), (1, 64, 400, 512), (1, 64, 200, 256), (1, 256, 200, 256), (1, 128, 200, 256), (1, 128, 100, 128), (1, 512, 100, 128), (1, 256, 100, 128), (1, 256, 50, 64), (1, 1024, 50, 64), (1, 512, 50, 64), (1, 64, 400, 554), (1, 64, 200, 277), (1, 256, 200, 277), (1, 128, 200, 277), (1, 128, 100, 139), (1, 512, 100, 139), (1, 256, 100, 139), (1, 256, 50, 70), (1, 1024, 50, 70), (1, 512, 50, 70), (1, 512, 25, 35), (1, 2048, 25, 35), (1, 64, 400, 603), (1, 64, 200, 302), (1, 256, 200, 302), (1, 128, 200, 302), (1, 64, 434, 400), (1, 64, 217, 200), (1, 256, 217, 200), (1, 128, 217, 200), (1, 128, 109, 100), (1, 512, 109, 100), (1, 256, 109, 100), (1, 256, 55, 50), (1, 1024, 55, 50), (1, 512, 55, 50), (1, 512, 28, 25), (1, 2048, 28, 25), (1, 64, 404, 400), (1, 64, 202, 200), (1, 256, 202, 200), (1, 128, 202, 200), (1, 128, 101, 100), (1, 512, 101, 100), (1, 256, 101, 100), (1, 256, 51, 50), (1, 1024, 51, 50), (1, 512, 51, 50), (1, 512, 26, 25), (1, 2048, 26, 25), (1, 64, 400, 640), (1, 64, 200, 320), (1, 256, 200, 320), (1, 128, 200, 320), (1, 128, 100, 160), (1, 512, 100, 160), (1, 256, 100, 160), (1, 256, 50, 80), (1, 1024, 50, 80), (1, 512, 50, 80), (1, 512, 25, 40), (1, 2048, 25, 40), (1, 64, 400, 593), (1, 64, 200, 297), (1, 256, 200, 297), (1, 128, 200, 297), (1, 128, 100, 149), (1, 512, 100, 149), (1, 256, 100, 149), (1, 64, 387, 667), (1, 64, 194, 334), (1, 256, 194, 334), (1, 128, 194, 334), (1, 128, 97, 167), (1, 512, 97, 167), (1, 256, 97, 167), (1, 256, 49, 84), (1, 1024, 49, 84), (1, 512, 49, 84), (1, 64, 400, 570), (1, 64, 200, 285), (1, 256, 200, 285), (1, 128, 200, 285), (1, 128, 100, 143), (1, 512, 100, 143), (1, 256, 100, 143), (1, 256, 50, 72), (1, 1024, 50, 72), (1, 512, 50, 72), (1, 512, 25, 36), (1, 2048, 25, 36), (1, 64, 603, 400), (1, 64, 302, 200), (1, 256, 302, 200), (1, 128, 302, 200), (1, 128, 151, 100), (1, 512, 151, 100), (1, 256, 151, 100), (1, 256, 76, 50), (1, 1024, 76, 50), (1, 512, 76, 50), (1, 64, 441, 400), (1, 64, 221, 200), (1, 256, 221, 200), (1, 128, 221, 200), (1, 128, 111, 100), (1, 512, 111, 100), (1, 256, 111, 100), (1, 256, 56, 50), (1, 1024, 56, 50), (1, 512, 56, 50), (1, 64, 375, 667), (1, 64, 188, 334), (1, 256, 188, 334), (1, 128, 188, 334), (1, 128, 94, 167), (1, 512, 94, 167), (1, 256, 94, 167), (1, 256, 47, 84), (1, 1024, 47, 84), (1, 512, 47, 84), (1, 512, 24, 42), (1, 2048, 24, 42), (1, 64, 400, 400), (1, 64, 200, 200), (1, 256, 200, 200), (1, 128, 200, 200), (1, 128, 100, 100), (1, 512, 100, 100), (1, 256, 100, 100), (1, 256, 50, 50), (1, 1024, 50, 50), (1, 512, 50, 50), (1, 512, 25, 25), (1, 2048, 25, 25), (1, 64, 642, 400), (1, 64, 321, 200), (1, 256, 321, 200), (1, 128, 321, 200), (1, 128, 161, 100), (1, 512, 161, 100), (1, 256, 161, 100), (1, 256, 81, 50), (1, 1024, 81, 50), (1, 512, 81, 50), (1, 512, 41, 25), (1, 2048, 41, 25), (1, 64, 400, 604), (1, 64, 400, 564), (1, 64, 200, 282), (1, 256, 200, 282), (1, 128, 200, 282), (1, 128, 100, 141), (1, 512, 100, 141), (1, 256, 100, 141), (1, 256, 50, 71), (1, 1024, 50, 71), (1, 512, 50, 71), (1, 64, 400, 582), (1, 64, 200, 291), (1, 256, 200, 291), (1, 128, 200, 291), (1, 128, 100, 146), (1, 512, 100, 146), (1, 256, 100, 146), (1, 256, 50, 73), (1, 1024, 50, 73), (1, 512, 50, 73), (1, 512, 25, 37), (1, 2048, 25, 37), (1, 64, 400, 565), (1, 64, 200, 283), (1, 256, 200, 283), (1, 128, 200, 283), (1, 128, 100, 142), (1, 512, 100, 142), (1, 256, 100, 142), (1, 64, 400, 599), (1, 64, 382, 667), (1, 64, 191, 334), (1, 256, 191, 334), (1, 128, 191, 334), (1, 128, 96, 167), (1, 512, 96, 167), (1, 256, 96, 167), (1, 256, 48, 84), (1, 1024, 48, 84), (1, 512, 48, 84), (1, 64, 597, 400), (1, 64, 299, 200), (1, 256, 299, 200), (1, 128, 299, 200), (1, 64, 601, 400), (1, 64, 301, 200), (1, 256, 301, 200), (1, 128, 301, 200), (1, 64, 400, 583), (1, 64, 200, 292), (1, 256, 200, 292), (1, 128, 200, 292), (1, 64, 532, 400), (1, 64, 266, 200), (1, 256, 266, 200), (1, 128, 266, 200), (1, 128, 133, 100), (1, 512, 133, 100), (1, 256, 133, 100), (1, 64, 400, 650), (1, 64, 200, 325), (1, 256, 200, 325), (1, 128, 200, 325), (1, 128, 100, 163), (1, 512, 100, 163), (1, 256, 100, 163), (1, 256, 50, 82), (1, 1024, 50, 82), (1, 512, 50, 82), (1, 512, 25, 41), (1, 2048, 25, 41), (1, 64, 302, 667), (1, 64, 151, 334), (1, 256, 151, 334), (1, 128, 151, 334), (1, 128, 76, 167), (1, 512, 76, 167), (1, 256, 76, 167), (1, 256, 38, 84), (1, 1024, 38, 84), (1, 512, 38, 84), (1, 512, 19, 42), (1, 2048, 19, 42), (1, 64, 400, 639), (1, 64, 602, 400), (1, 64, 400, 657), (1, 64, 200, 329), (1, 256, 200, 329), (1, 128, 200, 329), (1, 64, 400, 536), (1, 64, 200, 268), (1, 256, 200, 268), (1, 128, 200, 268), (1, 64, 616, 400), (1, 64, 308, 200), (1, 256, 308, 200), (1, 128, 308, 200), (1, 128, 154, 100), (1, 512, 154, 100), (1, 256, 154, 100), (1, 256, 77, 50), (1, 1024, 77, 50), (1, 512, 77, 50), (1, 512, 39, 25), (1, 2048, 39, 25), (1, 64, 598, 400), (1, 64, 400, 578), (1, 64, 200, 289), (1, 256, 200, 289), (1, 128, 200, 289), (1, 128, 100, 145), (1, 512, 100, 145), (1, 256, 100, 145), (1, 64, 560, 400), (1, 64, 280, 200), (1, 256, 280, 200), (1, 128, 280, 200), (1, 128, 140, 100), (1, 512, 140, 100), (1, 256, 140, 100), (1, 256, 70, 50), (1, 1024, 70, 50), (1, 512, 70, 50), (1, 512, 35, 25), (1, 2048, 35, 25), (1, 64, 400, 597), (1, 64, 400, 533), (1, 64, 400, 530), (1, 64, 200, 265), (1, 256, 200, 265), (1, 128, 200, 265), (1, 128, 100, 133), (1, 512, 100, 133), (1, 256, 100, 133), (1, 64, 400, 405), (1, 64, 200, 203), (1, 256, 200, 203), (1, 128, 200, 203), (1, 128, 100, 102), (1, 512, 100, 102), (1, 256, 100, 102), (1, 256, 50, 51), (1, 1024, 50, 51), (1, 512, 50, 51), (1, 512, 25, 26), (1, 2048, 25, 26), (1, 64, 400, 526), (1, 64, 200, 263), (1, 256, 200, 263), (1, 128, 200, 263), (1, 128, 100, 132), (1, 512, 100, 132), (1, 256, 100, 132), (1, 256, 50, 66), (1, 1024, 50, 66), (1, 512, 50, 66), (1, 512, 25, 33), (1, 2048, 25, 33), (1, 64, 400, 535), (1, 64, 381, 667), (1, 64, 604, 400), (1, 64, 400, 500), (1, 64, 200, 250), (1, 256, 200, 250), (1, 128, 200, 250), (1, 128, 100, 125), (1, 512, 100, 125), (1, 256, 100, 125), (1, 64, 400, 568), (1, 64, 200, 284), (1, 256, 200, 284), (1, 128, 200, 284), (1, 64, 400, 634), (1, 64, 200, 317), (1, 256, 200, 317), (1, 128, 200, 317), (1, 128, 100, 159), (1, 512, 100, 159), (1, 256, 100, 159), (1, 64, 400, 620), (1, 64, 200, 310), (1, 256, 200, 310), (1, 128, 200, 310), (1, 128, 100, 155), (1, 512, 100, 155), (1, 256, 100, 155), (1, 256, 50, 78), (1, 1024, 50, 78), (1, 512, 50, 78), (1, 64, 400, 560), (1, 64, 200, 280), (1, 256, 200, 280), (1, 128, 200, 280), (1, 128, 100, 140), (1, 512, 100, 140), (1, 256, 100, 140), (1, 64, 400, 472), (1, 64, 200, 236), (1, 256, 200, 236), (1, 128, 200, 236), (1, 128, 100, 118), (1, 512, 100, 118), (1, 256, 100, 118), (1, 256, 50, 59), (1, 1024, 50, 59), (1, 512, 50, 59), (1, 64, 490, 400), (1, 64, 245, 200), (1, 256, 245, 200), (1, 128, 245, 200), (1, 128, 123, 100), (1, 512, 123, 100), (1, 256, 123, 100), (1, 256, 62, 50), (1, 1024, 62, 50), (1, 512, 62, 50), (1, 512, 31, 25), (1, 2048, 31, 25), (1, 64, 400, 540), (1, 64, 200, 270), (1, 256, 200, 270), (1, 128, 200, 270), (1, 128, 100, 135), (1, 512, 100, 135), (1, 256, 100, 135), (1, 256, 50, 68), (1, 1024, 50, 68), (1, 512, 50, 68), (1, 64, 376, 667), (1, 64, 667, 376), (1, 64, 334, 188), (1, 256, 334, 188), (1, 128, 334, 188), (1, 128, 167, 94), (1, 512, 167, 94), (1, 256, 167, 94), (1, 256, 84, 47), (1, 1024, 84, 47), (1, 512, 84, 47), (1, 512, 42, 24), (1, 2048, 42, 24), (1, 64, 536, 400), (1, 64, 268, 200), (1, 256, 268, 200), (1, 128, 268, 200), (1, 64, 400, 587), (1, 64, 200, 294), (1, 256, 200, 294), (1, 128, 200, 294), (1, 128, 100, 147), (1, 512, 100, 147), (1, 256, 100, 147), (1, 256, 50, 74), (1, 1024, 50, 74), (1, 512, 50, 74), (1, 64, 578, 400), (1, 64, 289, 200), (1, 256, 289, 200), (1, 128, 289, 200), (1, 128, 145, 100), (1, 512, 145, 100), (1, 256, 145, 100), (1, 256, 73, 50), (1, 1024, 73, 50), (1, 512, 73, 50), (1, 512, 37, 25), (1, 2048, 37, 25), (1, 64, 400, 645), (1, 64, 200, 323), (1, 256, 200, 323), (1, 128, 200, 323), (1, 128, 100, 162), (1, 512, 100, 162), (1, 256, 100, 162), (1, 256, 50, 81), (1, 1024, 50, 81), (1, 512, 50, 81), (1, 64, 400, 621), (1, 64, 200, 311), (1, 256, 200, 311), (1, 128, 200, 311), (1, 128, 100, 156), (1, 512, 100, 156), (1, 256, 100, 156), (1, 64, 371, 667), (1, 64, 186, 334), (1, 256, 186, 334), (1, 128, 186, 334), (1, 128, 93, 167), (1, 512, 93, 167), (1, 256, 93, 167), (1, 64, 400, 647), (1, 64, 200, 324), (1, 256, 200, 324), (1, 128, 200, 324), (1, 64, 400, 605), (1, 64, 200, 303), (1, 256, 200, 303), (1, 128, 200, 303), (1, 128, 100, 152), (1, 512, 100, 152), (1, 256, 100, 152), (1, 64, 400, 485), (1, 64, 200, 243), (1, 256, 200, 243), (1, 128, 200, 243), (1, 128, 100, 122), (1, 512, 100, 122), (1, 256, 100, 122), (1, 256, 50, 61), (1, 1024, 50, 61), (1, 512, 50, 61), (1, 512, 25, 31), (1, 2048, 25, 31), (1, 64, 400, 498), (1, 64, 200, 249), (1, 256, 200, 249), (1, 128, 200, 249), (1, 64, 635, 400), (1, 64, 318, 200), (1, 256, 318, 200), (1, 128, 318, 200), (1, 128, 159, 100), (1, 512, 159, 100), (1, 256, 159, 100), (1, 256, 80, 50), (1, 1024, 80, 50), (1, 512, 80, 50), (1, 512, 40, 25), (1, 2048, 40, 25), (1, 64, 400, 652), (1, 64, 200, 326), (1, 256, 200, 326), (1, 128, 200, 326), (1, 64, 345, 667), (1, 64, 173, 334), (1, 256, 173, 334), (1, 128, 173, 334), (1, 128, 87, 167), (1, 512, 87, 167), (1, 256, 87, 167), (1, 256, 44, 84), (1, 1024, 44, 84), (1, 512, 44, 84), (1, 512, 22, 42), (1, 2048, 22, 42), (1, 64, 428, 400), (1, 64, 214, 200), (1, 256, 214, 200), (1, 128, 214, 200), (1, 128, 107, 100), (1, 512, 107, 100), (1, 256, 107, 100), (1, 256, 54, 50), (1, 1024, 54, 50), (1, 512, 54, 50), (1, 512, 27, 25), (1, 2048, 27, 25), (1, 64, 400, 626), (1, 64, 200, 313), (1, 256, 200, 313), (1, 128, 200, 313), (1, 128, 100, 157), (1, 512, 100, 157), (1, 256, 100, 157), (1, 256, 50, 79), (1, 1024, 50, 79), (1, 512, 50, 79), (1, 64, 400, 547), (1, 64, 200, 274), (1, 256, 200, 274), (1, 128, 200, 274), (1, 128, 100, 137), (1, 512, 100, 137), (1, 256, 100, 137), (1, 256, 50, 69), (1, 1024, 50, 69), (1, 512, 50, 69), (1, 64, 400, 532), (1, 64, 200, 266), (1, 256, 200, 266), (1, 128, 200, 266), (1, 64, 623, 400), (1, 64, 312, 200), (1, 256, 312, 200), (1, 128, 312, 200), (1, 128, 156, 100), (1, 512, 156, 100), (1, 256, 156, 100), (1, 256, 78, 50), (1, 1024, 78, 50), (1, 512, 78, 50), (1, 64, 400, 420), (1, 64, 200, 210), (1, 256, 200, 210), (1, 128, 200, 210), (1, 128, 100, 105), (1, 512, 100, 105), (1, 256, 100, 105), (1, 256, 50, 53), (1, 1024, 50, 53), (1, 512, 50, 53), (1, 512, 25, 27), (1, 2048, 25, 27), (1, 64, 485, 400), (1, 64, 243, 200), (1, 256, 243, 200), (1, 128, 243, 200), (1, 128, 122, 100), (1, 512, 122, 100), (1, 256, 122, 100), (1, 256, 61, 50), (1, 1024, 61, 50), (1, 512, 61, 50), (1, 64, 513, 400), (1, 64, 257, 200), (1, 256, 257, 200), (1, 128, 257, 200), (1, 128, 129, 100), (1, 512, 129, 100), (1, 256, 129, 100), (1, 256, 65, 50), (1, 1024, 65, 50), (1, 512, 65, 50), (1, 512, 33, 25), (1, 2048, 33, 25), (1, 64, 667, 374), (1, 64, 334, 187), (1, 256, 334, 187), (1, 128, 334, 187), (1, 64, 400, 538), (1, 64, 200, 269), (1, 256, 200, 269), (1, 128, 200, 269), (1, 64, 573, 400), (1, 64, 287, 200), (1, 256, 287, 200), (1, 128, 287, 200), (1, 128, 144, 100), (1, 512, 144, 100), (1, 256, 144, 100), (1, 64, 559, 400), (1, 64, 305, 667), (1, 64, 153, 334), (1, 256, 153, 334), (1, 128, 153, 334), (1, 128, 77, 167), (1, 512, 77, 167), (1, 256, 77, 167), (1, 256, 39, 84), (1, 1024, 39, 84), (1, 512, 39, 84), (1, 512, 20, 42), (1, 2048, 20, 42), (1, 64, 667, 399), (1, 64, 334, 200), (1, 256, 334, 200), (1, 128, 334, 200), (1, 128, 167, 100), (1, 512, 167, 100), (1, 256, 167, 100), (1, 256, 84, 50), (1, 1024, 84, 50), (1, 512, 84, 50), (1, 512, 42, 25), (1, 2048, 42, 25), (1, 64, 538, 400), (1, 64, 269, 200), (1, 256, 269, 200), (1, 128, 269, 200), (1, 128, 135, 100), (1, 512, 135, 100), (1, 256, 135, 100), (1, 256, 68, 50), (1, 1024, 68, 50), (1, 512, 68, 50), (1, 64, 430, 400), (1, 64, 215, 200), (1, 256, 215, 200), (1, 128, 215, 200), (1, 128, 108, 100), (1, 512, 108, 100), (1, 256, 108, 100), (1, 64, 400, 531), (1, 64, 400, 635), (1, 64, 200, 318), (1, 256, 200, 318), (1, 128, 200, 318), (1, 64, 358, 667), (1, 64, 179, 334), (1, 256, 179, 334), (1, 128, 179, 334), (1, 128, 90, 167), (1, 512, 90, 167), (1, 256, 90, 167), (1, 256, 45, 84), (1, 1024, 45, 84), (1, 512, 45, 84), (1, 512, 23, 42), (1, 2048, 23, 42), (1, 64, 400, 544), (1, 64, 200, 272), (1, 256, 200, 272), (1, 128, 200, 272), (1, 128, 100, 136), (1, 512, 100, 136), (1, 256, 100, 136), (1, 64, 400, 529), (1, 64, 328, 667), (1, 64, 164, 334), (1, 256, 164, 334), (1, 128, 164, 334), (1, 128, 82, 167), (1, 512, 82, 167), (1, 256, 82, 167), (1, 256, 41, 84), (1, 1024, 41, 84), (1, 512, 41, 84), (1, 512, 21, 42), (1, 2048, 21, 42), (1, 64, 613, 400), (1, 64, 307, 200), (1, 256, 307, 200), (1, 128, 307, 200), (1, 64, 400, 401), (1, 64, 200, 201), (1, 256, 200, 201), (1, 128, 200, 201), (1, 128, 100, 101), (1, 512, 100, 101), (1, 256, 100, 101), (1, 64, 501, 400), (1, 64, 251, 200), (1, 256, 251, 200), (1, 128, 251, 200), (1, 128, 126, 100), (1, 512, 126, 100), (1, 256, 126, 100), (1, 256, 63, 50), (1, 1024, 63, 50), (1, 512, 63, 50), (1, 512, 32, 25), (1, 2048, 32, 25), (1, 64, 400, 642), (1, 64, 200, 321), (1, 256, 200, 321), (1, 128, 200, 321), (1, 128, 100, 161), (1, 512, 100, 161), (1, 256, 100, 161), (1, 64, 400, 625), (1, 64, 400, 541), (1, 64, 200, 271), (1, 256, 200, 271), (1, 128, 200, 271), (1, 64, 400, 590), (1, 64, 200, 295), (1, 256, 200, 295), (1, 128, 200, 295), (1, 128, 100, 148), (1, 512, 100, 148), (1, 256, 100, 148), (1, 64, 400, 520), (1, 64, 200, 260), (1, 256, 200, 260), (1, 128, 200, 260), (1, 128, 100, 130), (1, 512, 100, 130), (1, 256, 100, 130), (1, 256, 50, 65), (1, 1024, 50, 65), (1, 512, 50, 65), (1, 64, 572, 400), (1, 64, 286, 200), (1, 256, 286, 200), (1, 128, 286, 200), (1, 64, 400, 462), (1, 64, 200, 231), (1, 256, 200, 231), (1, 128, 200, 231), (1, 128, 100, 116), (1, 512, 100, 116), (1, 256, 100, 116), (1, 256, 50, 58), (1, 1024, 50, 58), (1, 512, 50, 58), (1, 512, 25, 29), (1, 2048, 25, 29), (1, 64, 400, 455), (1, 64, 200, 228), (1, 256, 200, 228), (1, 128, 200, 228), (1, 128, 100, 114), (1, 512, 100, 114), (1, 256, 100, 114), (1, 256, 50, 57), (1, 1024, 50, 57), (1, 512, 50, 57), (1, 64, 400, 545), (1, 64, 200, 273), (1, 256, 200, 273), (1, 128, 200, 273), (1, 64, 400, 495), (1, 64, 200, 248), (1, 256, 200, 248), (1, 128, 200, 248), (1, 128, 100, 124), (1, 512, 100, 124), (1, 256, 100, 124), (1, 256, 50, 62), (1, 1024, 50, 62), (1, 512, 50, 62), (1, 64, 435, 400), (1, 64, 218, 200), (1, 256, 218, 200), (1, 128, 218, 200), (1, 64, 667, 299), (1, 64, 334, 150), (1, 256, 334, 150), (1, 128, 334, 150), (1, 128, 167, 75), (1, 512, 167, 75), (1, 256, 167, 75), (1, 256, 84, 38), (1, 1024, 84, 38), (1, 512, 84, 38), (1, 512, 42, 19), (1, 2048, 42, 19), (1, 64, 400, 608), (1, 64, 200, 304), (1, 256, 200, 304), (1, 128, 200, 304), (1, 64, 555, 400), (1, 64, 278, 200), (1, 256, 278, 200), (1, 128, 278, 200), (1, 128, 139, 100), (1, 512, 139, 100), (1, 256, 139, 100), (1, 64, 400, 653), (1, 64, 200, 327), (1, 256, 200, 327), (1, 128, 200, 327), (1, 128, 100, 164), (1, 512, 100, 164), (1, 256, 100, 164), (1, 64, 660, 400), (1, 64, 330, 200), (1, 256, 330, 200), (1, 128, 330, 200), (1, 128, 165, 100), (1, 512, 165, 100), (1, 256, 165, 100), (1, 256, 83, 50), (1, 1024, 83, 50), (1, 512, 83, 50), (1, 64, 500, 400), (1, 64, 250, 200), (1, 256, 250, 200), (1, 128, 250, 200), (1, 128, 125, 100), (1, 512, 125, 100), (1, 256, 125, 100), (1, 64, 595, 400), (1, 64, 298, 200), (1, 256, 298, 200), (1, 128, 298, 200), (1, 128, 149, 100), (1, 512, 149, 100), (1, 256, 149, 100), (1, 64, 585, 400), (1, 64, 293, 200), (1, 256, 293, 200), (1, 128, 293, 200), (1, 128, 147, 100), (1, 512, 147, 100), (1, 256, 147, 100), (1, 256, 74, 50), (1, 1024, 74, 50), (1, 512, 74, 50), (1, 64, 400, 446), (1, 64, 200, 223), (1, 256, 200, 223), (1, 128, 200, 223), (1, 128, 100, 112), (1, 512, 100, 112), (1, 256, 100, 112), (1, 256, 50, 56), (1, 1024, 50, 56), (1, 512, 50, 56), (1, 512, 25, 28), (1, 2048, 25, 28), (1, 64, 400, 453), (1, 64, 200, 227), (1, 256, 200, 227), (1, 128, 200, 227), (1, 64, 400, 559), (1, 64, 331, 667), (1, 64, 166, 334), (1, 256, 166, 334), (1, 128, 166, 334), (1, 128, 83, 167), (1, 512, 83, 167), (1, 256, 83, 167), (1, 256, 42, 84), (1, 1024, 42, 84), (1, 512, 42, 84), (1, 64, 567, 400), (1, 64, 284, 200), (1, 256, 284, 200), (1, 128, 284, 200), (1, 128, 142, 100), (1, 512, 142, 100), (1, 256, 142, 100), (1, 256, 71, 50), (1, 1024, 71, 50), (1, 512, 71, 50), (1, 64, 525, 400), (1, 64, 263, 200), (1, 256, 263, 200), (1, 128, 263, 200), (1, 128, 132, 100), (1, 512, 132, 100), (1, 256, 132, 100), (1, 256, 66, 50), (1, 1024, 66, 50), (1, 512, 66, 50), (1, 64, 400, 595), (1, 64, 200, 298), (1, 256, 200, 298), (1, 128, 200, 298), (1, 64, 400, 589), (1, 64, 274, 667), (1, 64, 137, 334), (1, 256, 137, 334), (1, 128, 137, 334), (1, 128, 69, 167), (1, 512, 69, 167), (1, 256, 69, 167), (1, 256, 35, 84), (1, 1024, 35, 84), (1, 512, 35, 84), (1, 512, 18, 42), (1, 2048, 18, 42), (1, 64, 400, 663), (1, 64, 200, 332), (1, 256, 200, 332), (1, 128, 200, 332), (1, 128, 100, 166), (1, 512, 100, 166), (1, 256, 100, 166), (1, 64, 400, 478), (1, 64, 200, 239), (1, 256, 200, 239), (1, 128, 200, 239), (1, 128, 100, 120), (1, 512, 100, 120), (1, 256, 100, 120), (1, 64, 518, 400), (1, 64, 259, 200), (1, 256, 259, 200), (1, 128, 259, 200), (1, 128, 130, 100), (1, 512, 130, 100), (1, 256, 130, 100), (1, 64, 349, 667), (1, 64, 175, 334), (1, 256, 175, 334), (1, 128, 175, 334), (1, 128, 88, 167), (1, 512, 88, 167), (1, 256, 88, 167), (1, 64, 667, 400), (1, 64, 334, 667), (1, 64, 167, 334), (1, 256, 167, 334), (1, 128, 167, 334), (1, 128, 84, 167), (1, 512, 84, 167), (1, 256, 84, 167), (1, 64, 400, 466), (1, 64, 200, 233), (1, 256, 200, 233), (1, 128, 200, 233), (1, 128, 100, 117), (1, 512, 100, 117), (1, 256, 100, 117), (1, 64, 400, 628), (1, 64, 200, 314), (1, 256, 200, 314), (1, 128, 200, 314), (1, 64, 400, 573), (1, 64, 200, 287), (1, 256, 200, 287), (1, 128, 200, 287), (1, 128, 100, 144), (1, 512, 100, 144), (1, 256, 100, 144), (1, 64, 400, 493), (1, 64, 200, 247), (1, 256, 200, 247), (1, 128, 200, 247), (1, 64, 400, 483), (1, 64, 200, 242), (1, 256, 200, 242), (1, 128, 200, 242), (1, 128, 100, 121), (1, 512, 100, 121), (1, 256, 100, 121), (1, 64, 540, 400), (1, 64, 270, 200), (1, 256, 270, 200), (1, 128, 270, 200), (1, 64, 605, 400), (1, 64, 303, 200), (1, 256, 303, 200), (1, 128, 303, 200), (1, 128, 152, 100), (1, 512, 152, 100), (1, 256, 152, 100), (1, 64, 667, 375), (1, 64, 399, 667), (1, 64, 200, 334), (1, 256, 200, 334), (1, 128, 200, 334), (1, 128, 100, 167), (1, 512, 100, 167), (1, 256, 100, 167), (1, 256, 50, 84), (1, 1024, 50, 84), (1, 512, 50, 84), (1, 64, 400, 516), (1, 64, 200, 258), (1, 256, 200, 258), (1, 128, 200, 258), (1, 128, 100, 129), (1, 512, 100, 129), (1, 256, 100, 129), (1, 64, 400, 581), (1, 64, 374, 667), (1, 64, 187, 334), (1, 256, 187, 334), (1, 128, 187, 334), (1, 64, 599, 400), (1, 64, 329, 667), (1, 64, 165, 334), (1, 256, 165, 334), (1, 128, 165, 334), (1, 64, 400, 643), (1, 64, 200, 322), (1, 256, 200, 322), (1, 128, 200, 322), (1, 64, 373, 667), (1, 64, 400, 631), (1, 64, 200, 316), (1, 256, 200, 316), (1, 128, 200, 316), (1, 128, 100, 158), (1, 512, 100, 158), (1, 256, 100, 158), (1, 64, 400, 611), (1, 64, 442, 400), (1, 64, 439, 400), (1, 64, 220, 200), (1, 256, 220, 200), (1, 128, 220, 200), (1, 128, 110, 100), (1, 512, 110, 100), (1, 256, 110, 100), (1, 64, 400, 431), (1, 64, 200, 216), (1, 256, 200, 216), (1, 128, 200, 216), (1, 128, 100, 108), (1, 512, 100, 108), (1, 256, 100, 108), (1, 256, 50, 54), (1, 1024, 50, 54), (1, 512, 50, 54), (1, 64, 400, 558), (1, 64, 200, 279), (1, 256, 200, 279), (1, 128, 200, 279), (1, 64, 400, 616), (1, 64, 200, 308), (1, 256, 200, 308), (1, 128, 200, 308), (1, 128, 100, 154), (1, 512, 100, 154), (1, 256, 100, 154), (1, 64, 400, 622), (1, 64, 357, 667), (1, 64, 489, 400), (1, 64, 594, 400), (1, 64, 297, 200), (1, 256, 297, 200), (1, 128, 297, 200), (1, 64, 492, 400), (1, 64, 246, 200), (1, 256, 246, 200), (1, 128, 246, 200), (1, 64, 432, 400), (1, 64, 216, 200), (1, 256, 216, 200), (1, 128, 216, 200), (1, 64, 400, 572), (1, 64, 200, 286), (1, 256, 200, 286), (1, 128, 200, 286), (1, 64, 537, 400), (1, 64, 527, 400), (1, 64, 264, 200), (1, 256, 264, 200), (1, 128, 264, 200), (1, 64, 504, 400), (1, 64, 252, 200), (1, 256, 252, 200), (1, 128, 252, 200), (1, 64, 503, 400), (1, 64, 400, 576), (1, 64, 200, 288), (1, 256, 200, 288), (1, 128, 200, 288), (1, 64, 443, 400), (1, 64, 222, 200), (1, 256, 222, 200), (1, 128, 222, 200), (1, 64, 667, 317), (1, 64, 334, 159), (1, 256, 334, 159), (1, 128, 334, 159), (1, 128, 167, 80), (1, 512, 167, 80), (1, 256, 167, 80), (1, 256, 84, 40), (1, 1024, 84, 40), (1, 512, 84, 40), (1, 512, 42, 20), (1, 2048, 42, 20), (1, 64, 400, 402), (1, 64, 535, 400), (1, 64, 400, 525), (1, 64, 400, 594), (1, 64, 552, 400), (1, 64, 276, 200), (1, 256, 276, 200), (1, 128, 276, 200), (1, 128, 138, 100), (1, 512, 138, 100), (1, 256, 138, 100), (1, 256, 69, 50), (1, 1024, 69, 50), (1, 512, 69, 50), (1, 64, 275, 667), (1, 64, 138, 334), (1, 256, 138, 334), (1, 128, 138, 334), (1, 64, 400, 591), (1, 64, 200, 296), (1, 256, 200, 296), (1, 128, 200, 296), (1, 64, 400, 469), (1, 64, 200, 235), (1, 256, 200, 235), (1, 128, 200, 235), (1, 64, 400, 507), (1, 64, 200, 254), (1, 256, 200, 254), (1, 128, 200, 254), (1, 128, 100, 127), (1, 512, 100, 127), (1, 256, 100, 127), (1, 64, 478, 400), (1, 64, 239, 200), (1, 256, 239, 200), (1, 128, 239, 200), (1, 128, 120, 100), (1, 512, 120, 100), (1, 256, 120, 100), (1, 256, 60, 50), (1, 1024, 60, 50), (1, 512, 60, 50), (1, 512, 30, 25), (1, 2048, 30, 25), (1, 64, 583, 400), (1, 64, 292, 200), (1, 256, 292, 200), (1, 128, 292, 200), (1, 128, 146, 100), (1, 512, 146, 100), (1, 256, 146, 100), (1, 64, 400, 562), (1, 64, 200, 281), (1, 256, 200, 281), (1, 128, 200, 281), (1, 64, 667, 394), (1, 64, 334, 197), (1, 256, 334, 197), (1, 128, 334, 197), (1, 128, 167, 99), (1, 512, 167, 99), (1, 256, 167, 99), (1, 64, 637, 400), (1, 64, 319, 200), (1, 256, 319, 200), (1, 128, 319, 200), (1, 128, 160, 100), (1, 512, 160, 100), (1, 256, 160, 100), (1, 64, 614, 400), (1, 64, 565, 400), (1, 64, 283, 200), (1, 256, 283, 200), (1, 128, 283, 200), (1, 64, 482, 400), (1, 64, 241, 200), (1, 256, 241, 200), (1, 128, 241, 200), (1, 128, 121, 100), (1, 512, 121, 100), (1, 256, 121, 100), (1, 64, 412, 400), (1, 64, 206, 200), (1, 256, 206, 200), (1, 128, 206, 200), (1, 128, 103, 100), (1, 512, 103, 100), (1, 256, 103, 100), (1, 256, 52, 50), (1, 1024, 52, 50), (1, 512, 52, 50), (1, 64, 400, 585), (1, 64, 200, 293), (1, 256, 200, 293), (1, 128, 200, 293), (1, 64, 405, 400), (1, 64, 203, 200), (1, 256, 203, 200), (1, 128, 203, 200), (1, 128, 102, 100), (1, 512, 102, 100), (1, 256, 102, 100), (1, 64, 400, 619), (1, 64, 400, 513), (1, 64, 200, 257), (1, 256, 200, 257), (1, 128, 200, 257), (1, 64, 400, 428), (1, 64, 200, 214), (1, 256, 200, 214), (1, 128, 200, 214), (1, 128, 100, 107), (1, 512, 100, 107), (1, 256, 100, 107), (1, 64, 521, 400), (1, 64, 261, 200), (1, 256, 261, 200), (1, 128, 261, 200), (1, 128, 131, 100), (1, 512, 131, 100), (1, 256, 131, 100), (1, 64, 400, 667), (1, 64, 386, 667), (1, 64, 193, 334), (1, 256, 193, 334), (1, 128, 193, 334), (1, 64, 400, 586), (1, 64, 400, 574), (1, 64, 400, 515), (1, 64, 400, 508), (1, 64, 400, 579), (1, 64, 200, 290), (1, 256, 200, 290), (1, 128, 200, 290), (1, 64, 400, 552), (1, 64, 200, 276), (1, 256, 200, 276), (1, 128, 200, 276), (1, 128, 100, 138), (1, 512, 100, 138), (1, 256, 100, 138), (1, 64, 400, 488), (1, 64, 200, 244), (1, 256, 200, 244), (1, 128, 200, 244), (1, 64, 546, 400), (1, 64, 273, 200), (1, 256, 273, 200), (1, 128, 273, 200), (1, 128, 137, 100), (1, 512, 137, 100), (1, 256, 137, 100), (1, 64, 367, 667), (1, 64, 184, 334), (1, 256, 184, 334), (1, 128, 184, 334), (1, 128, 92, 167), (1, 512, 92, 167), (1, 256, 92, 167), (1, 256, 46, 84), (1, 1024, 46, 84), (1, 512, 46, 84), (1, 64, 409, 400), (1, 64, 205, 200), (1, 256, 205, 200), (1, 128, 205, 200), (1, 64, 400, 548), (1, 64, 402, 400), (1, 64, 201, 200), (1, 256, 201, 200), (1, 128, 201, 200), (1, 64, 400, 553), (1, 64, 400, 623), (1, 64, 200, 312), (1, 256, 200, 312), (1, 128, 200, 312), (1, 64, 351, 667), (1, 64, 176, 334), (1, 256, 176, 334), (1, 128, 176, 334), (1, 64, 400, 569), (1, 64, 531, 400), (1, 64, 610, 400), (1, 64, 305, 200), (1, 256, 305, 200), (1, 128, 305, 200), (1, 128, 153, 100), (1, 512, 153, 100), (1, 256, 153, 100), (1, 64, 325, 667), (1, 64, 163, 334), (1, 256, 163, 334), (1, 128, 163, 334), (1, 64, 400, 546), (1, 64, 629, 400), (1, 64, 315, 200), (1, 256, 315, 200), (1, 128, 315, 200), (1, 128, 158, 100), (1, 512, 158, 100), (1, 256, 158, 100), (1, 256, 79, 50), (1, 1024, 79, 50), (1, 512, 79, 50), (1, 64, 400, 596), (1, 64, 395, 667), (1, 64, 198, 334), (1, 256, 198, 334), (1, 128, 198, 334), (1, 128, 99, 167), (1, 512, 99, 167), (1, 256, 99, 167), (1, 64, 340, 667), (1, 64, 170, 334), (1, 256, 170, 334), (1, 128, 170, 334), (1, 128, 85, 167), (1, 512, 85, 167), (1, 256, 85, 167), (1, 256, 43, 84), (1, 1024, 43, 84), (1, 512, 43, 84), (1, 64, 400, 423), (1, 64, 200, 212), (1, 256, 200, 212), (1, 128, 200, 212), (1, 128, 100, 106), (1, 512, 100, 106), (1, 256, 100, 106), (1, 64, 554, 400), (1, 64, 277, 200), (1, 256, 277, 200), (1, 128, 277, 200), (1, 64, 481, 400), (1, 64, 176, 667), (1, 64, 88, 334), (1, 256, 88, 334), (1, 128, 88, 334), (1, 128, 44, 167), (1, 512, 44, 167), (1, 256, 44, 167), (1, 256, 22, 84), (1, 1024, 22, 84), (1, 512, 22, 84), (1, 512, 11, 42), (1, 2048, 11, 42), (1, 64, 400, 482), (1, 64, 200, 241), (1, 256, 200, 241), (1, 128, 200, 241), (1, 64, 400, 523), (1, 64, 200, 262), (1, 256, 200, 262), (1, 128, 200, 262), (1, 128, 100, 131), (1, 512, 100, 131), (1, 256, 100, 131), (1, 64, 400, 537), (1, 64, 400, 450), (1, 64, 200, 225), (1, 256, 200, 225), (1, 128, 200, 225), (1, 128, 100, 113), (1, 512, 100, 113), (1, 256, 100, 113), (1, 64, 400, 492), (1, 64, 200, 246), (1, 256, 200, 246), (1, 128, 200, 246), (1, 128, 100, 123), (1, 512, 100, 123), (1, 256, 100, 123), (1, 64, 558, 400), (1, 64, 279, 200), (1, 256, 279, 200), (1, 128, 279, 200), (1, 64, 397, 667), (1, 64, 199, 334), (1, 256, 199, 334), (1, 128, 199, 334), (1, 64, 539, 400), (1, 64, 400, 421), (1, 64, 200, 211), (1, 256, 200, 211), (1, 128, 200, 211), (1, 64, 400, 491), (1, 64, 400, 458), (1, 64, 200, 229), (1, 256, 200, 229), (1, 128, 200, 229), (1, 128, 100, 115), (1, 512, 100, 115), (1, 256, 100, 115), (1, 64, 400, 527), (1, 64, 200, 264), (1, 256, 200, 264), (1, 128, 200, 264), (1, 64, 400, 504), (1, 64, 200, 252), (1, 256, 200, 252), (1, 128, 200, 252), (1, 64, 400, 551), (1, 64, 197, 667), (1, 64, 99, 334), (1, 256, 99, 334), (1, 128, 99, 334), (1, 128, 50, 167), (1, 512, 50, 167), (1, 256, 50, 167), (1, 256, 25, 84), (1, 1024, 25, 84), (1, 512, 25, 84), (1, 512, 13, 42), (1, 2048, 13, 42), (1, 64, 530, 400), (1, 64, 265, 200), (1, 256, 265, 200), (1, 128, 265, 200), (1, 64, 667, 309), (1, 64, 334, 155), (1, 256, 334, 155), (1, 128, 334, 155), (1, 128, 167, 78), (1, 512, 167, 78), (1, 256, 167, 78), (1, 256, 84, 39), (1, 1024, 84, 39), (1, 512, 84, 39), (1, 64, 582, 400), (1, 64, 291, 200), (1, 256, 291, 200), (1, 128, 291, 200), (1, 64, 596, 400), (1, 64, 226, 667), (1, 64, 113, 334), (1, 256, 113, 334), (1, 128, 113, 334), (1, 128, 57, 167), (1, 512, 57, 167), (1, 256, 57, 167), (1, 256, 29, 84), (1, 1024, 29, 84), (1, 512, 29, 84), (1, 512, 15, 42), (1, 2048, 15, 42), (1, 64, 364, 667), (1, 64, 182, 334), (1, 256, 182, 334), (1, 128, 182, 334), (1, 128, 91, 167), (1, 512, 91, 167), (1, 256, 91, 167), (1, 64, 667, 387), (1, 64, 334, 194), (1, 256, 334, 194), (1, 128, 334, 194), (1, 128, 167, 97), (1, 512, 167, 97), (1, 256, 167, 97), (1, 256, 84, 49), (1, 1024, 84, 49), (1, 512, 84, 49), (1, 64, 400, 434), (1, 64, 200, 217), (1, 256, 200, 217), (1, 128, 200, 217), (1, 128, 100, 109), (1, 512, 100, 109), (1, 256, 100, 109), (1, 256, 50, 55), (1, 1024, 50, 55), (1, 512, 50, 55), (1, 64, 314, 667), (1, 64, 157, 334), (1, 256, 157, 334), (1, 128, 157, 334), (1, 128, 79, 167), (1, 512, 79, 167), (1, 256, 79, 167), (1, 256, 40, 84), (1, 1024, 40, 84), (1, 512, 40, 84), (1, 64, 301, 667), (1, 64, 400, 655), (1, 64, 200, 328), (1, 256, 200, 328), (1, 128, 200, 328), (1, 64, 607, 400), (1, 64, 304, 200), (1, 256, 304, 200), (1, 128, 304, 200), (1, 64, 553, 400), (1, 64, 407, 400), (1, 64, 204, 200), (1, 256, 204, 200), (1, 128, 204, 200), (1, 64, 474, 400), (1, 64, 237, 200), (1, 256, 237, 200), (1, 128, 237, 200), (1, 128, 119, 100), (1, 512, 119, 100), (1, 256, 119, 100), (1, 64, 383, 667), (1, 64, 192, 334), (1, 256, 192, 334), (1, 128, 192, 334), (1, 64, 547, 400), (1, 64, 274, 200), (1, 256, 274, 200), (1, 128, 274, 200), (1, 64, 379, 667), (1, 64, 190, 334), (1, 256, 190, 334), (1, 128, 190, 334), (1, 128, 95, 167), (1, 512, 95, 167), (1, 256, 95, 167), (1, 64, 608, 400), (1, 64, 628, 400), (1, 64, 314, 200), (1, 256, 314, 200), (1, 128, 314, 200), (1, 128, 157, 100), (1, 512, 157, 100), (1, 256, 157, 100), (1, 64, 400, 610), (1, 64, 200, 305), (1, 256, 200, 305), (1, 128, 200, 305), (1, 64, 557, 400), (1, 64, 400, 489), (1, 64, 200, 245), (1, 256, 200, 245), (1, 128, 200, 245), (1, 64, 507, 400), (1, 64, 254, 200), (1, 256, 254, 200), (1, 128, 254, 200), (1, 128, 127, 100), (1, 512, 127, 100), (1, 256, 127, 100), (1, 256, 64, 50), (1, 1024, 64, 50), (1, 512, 64, 50), (1, 64, 400, 539), (1, 64, 400, 563), (1, 64, 400, 521), (1, 64, 200, 261), (1, 256, 200, 261), (1, 128, 200, 261), (1, 64, 394, 667), (1, 64, 197, 334), (1, 256, 197, 334), (1, 128, 197, 334), (1, 64, 526, 400), (1, 64, 400, 510), (1, 64, 200, 255), (1, 256, 200, 255), (1, 128, 200, 255), (1, 64, 400, 522), (1, 64, 400, 481), (1, 64, 400, 486), (1, 64, 389, 667), (1, 64, 195, 334), (1, 256, 195, 334), (1, 128, 195, 334), (1, 128, 98, 167), (1, 512, 98, 167), (1, 256, 98, 167), (1, 64, 400, 437), (1, 64, 200, 219), (1, 256, 200, 219), (1, 128, 200, 219), (1, 128, 100, 110), (1, 512, 100, 110), (1, 256, 100, 110), (1, 64, 529, 400), (1, 64, 400, 426), (1, 64, 200, 213), (1, 256, 200, 213), (1, 128, 200, 213), (1, 64, 626, 400), (1, 64, 313, 200), (1, 256, 313, 200), (1, 128, 313, 200), (1, 64, 316, 667), (1, 64, 158, 334), (1, 256, 158, 334), (1, 128, 158, 334), (1, 64, 400, 613), (1, 64, 200, 307), (1, 256, 200, 307), (1, 128, 200, 307), (1, 64, 591, 400), (1, 64, 296, 200), (1, 256, 296, 200), (1, 128, 296, 200), (1, 128, 148, 100), (1, 512, 148, 100), (1, 256, 148, 100), (1, 64, 346, 667), (1, 64, 400, 457), (1, 64, 548, 400), (1, 64, 400, 577), (1, 64, 393, 667), (1, 64, 450, 400), (1, 64, 225, 200), (1, 256, 225, 200), (1, 128, 225, 200), (1, 128, 113, 100), (1, 512, 113, 100), (1, 256, 113, 100), (1, 256, 57, 50), (1, 1024, 57, 50), (1, 512, 57, 50), (1, 512, 29, 25), (1, 2048, 29, 25), (1, 64, 665, 400), (1, 64, 333, 200), (1, 256, 333, 200), (1, 128, 333, 200), (1, 64, 475, 400), (1, 64, 238, 200), (1, 256, 238, 200), (1, 128, 238, 200), (1, 64, 400, 567), (1, 64, 400, 528), (1, 64, 400, 524), (1, 64, 424, 400), (1, 64, 212, 200), (1, 256, 212, 200), (1, 128, 212, 200), (1, 128, 106, 100), (1, 512, 106, 100), (1, 256, 106, 100), (1, 256, 53, 50), (1, 1024, 53, 50), (1, 512, 53, 50), (1, 64, 667, 319), (1, 64, 334, 160), (1, 256, 334, 160), (1, 128, 334, 160), (1, 64, 465, 400), (1, 64, 233, 200), (1, 256, 233, 200), (1, 128, 233, 200), (1, 128, 117, 100), (1, 512, 117, 100), (1, 256, 117, 100), (1, 256, 59, 50), (1, 1024, 59, 50), (1, 512, 59, 50), (1, 64, 410, 400), (1, 64, 468, 400), (1, 64, 234, 200), (1, 256, 234, 200), (1, 128, 234, 200), (1, 64, 544, 400), (1, 64, 272, 200), (1, 256, 272, 200), (1, 128, 272, 200), (1, 128, 136, 100), (1, 512, 136, 100), (1, 256, 136, 100), (1, 64, 343, 667), (1, 64, 172, 334), (1, 256, 172, 334), (1, 128, 172, 334), (1, 128, 86, 167), (1, 512, 86, 167), (1, 256, 86, 167), (1, 64, 171, 667), (1, 64, 86, 334), (1, 256, 86, 334), (1, 128, 86, 334), (1, 128, 43, 167), (1, 512, 43, 167), (1, 256, 43, 167), (1, 64, 577, 400), (1, 64, 440, 400), (1, 64, 377, 667), (1, 64, 189, 334), (1, 256, 189, 334), (1, 128, 189, 334), (1, 64, 400, 476), (1, 64, 200, 238), (1, 256, 200, 238), (1, 128, 200, 238), (1, 64, 400, 557), (1, 64, 667, 348), (1, 64, 334, 174), (1, 256, 334, 174), (1, 128, 334, 174), (1, 128, 167, 87), (1, 512, 167, 87), (1, 256, 167, 87), (1, 256, 84, 44), (1, 1024, 84, 44), (1, 512, 84, 44), (1, 512, 42, 22), (1, 2048, 42, 22), (1, 64, 459, 400), (1, 64, 230, 200), (1, 256, 230, 200), (1, 128, 230, 200), (1, 128, 115, 100), (1, 512, 115, 100), (1, 256, 115, 100), (1, 256, 58, 50), (1, 1024, 58, 50), (1, 512, 58, 50), (1, 64, 312, 667), (1, 64, 156, 334), (1, 256, 156, 334), (1, 128, 156, 334), (1, 128, 78, 167), (1, 512, 78, 167), (1, 256, 78, 167), (1, 64, 545, 400), (1, 64, 303, 667), (1, 64, 152, 334), (1, 256, 152, 334), (1, 128, 152, 334), (1, 64, 400, 424), (1, 64, 400, 602), (1, 64, 248, 667), (1, 64, 124, 334), (1, 256, 124, 334), (1, 128, 124, 334), (1, 128, 62, 167), (1, 512, 62, 167), (1, 256, 62, 167), (1, 256, 31, 84), (1, 1024, 31, 84), (1, 512, 31, 84), (1, 512, 16, 42), (1, 2048, 16, 42), (1, 64, 517, 400), (1, 64, 327, 667), (1, 64, 451, 400), (1, 64, 226, 200), (1, 256, 226, 200), (1, 128, 226, 200), (1, 64, 400, 662), (1, 64, 200, 331), (1, 256, 200, 331), (1, 128, 200, 331), (1, 64, 447, 400), (1, 64, 224, 200), (1, 256, 224, 200), (1, 128, 224, 200), (1, 128, 112, 100), (1, 512, 112, 100), (1, 256, 112, 100), (1, 64, 166, 667), (1, 64, 83, 334), (1, 256, 83, 334), (1, 128, 83, 334), (1, 128, 42, 167), (1, 512, 42, 167), (1, 256, 42, 167), (1, 256, 21, 84), (1, 1024, 21, 84), (1, 512, 21, 84), (1, 64, 400, 511), (1, 64, 317, 667), (1, 64, 159, 334), (1, 256, 159, 334), (1, 128, 159, 334), (1, 128, 80, 167), (1, 512, 80, 167), (1, 256, 80, 167), (1, 64, 332, 667), (1, 64, 400, 436), (1, 64, 200, 218), (1, 256, 200, 218), (1, 128, 200, 218), (1, 64, 466, 400), (1, 64, 400, 607), (1, 64, 494, 400), (1, 64, 247, 200), (1, 256, 247, 200), (1, 128, 247, 200), (1, 128, 124, 100), (1, 512, 124, 100), (1, 256, 124, 100), (1, 64, 667, 373), (1, 64, 502, 400), (1, 64, 400, 514), (1, 64, 457, 400), (1, 64, 229, 200), (1, 256, 229, 200), (1, 128, 229, 200), (1, 64, 400, 550), (1, 64, 200, 275), (1, 256, 200, 275), (1, 128, 200, 275), (1, 64, 400, 665), (1, 64, 200, 333), (1, 256, 200, 333), (1, 128, 200, 333), (1, 64, 667, 388), (1, 64, 400, 648), (1, 64, 366, 667), (1, 64, 183, 334), (1, 256, 183, 334), (1, 128, 183, 334), (1, 64, 322, 667), (1, 64, 161, 334), (1, 256, 161, 334), (1, 128, 161, 334), (1, 128, 81, 167), (1, 512, 81, 167), (1, 256, 81, 167), (1, 64, 400, 467), (1, 64, 200, 234), (1, 256, 200, 234), (1, 128, 200, 234), (1, 64, 400, 447), (1, 64, 200, 224), (1, 256, 200, 224), (1, 128, 200, 224), (1, 64, 400, 641), (1, 64, 667, 343), (1, 64, 334, 172), (1, 256, 334, 172), (1, 128, 334, 172), (1, 128, 167, 86), (1, 512, 167, 86), (1, 256, 167, 86), (1, 256, 84, 43), (1, 1024, 84, 43), (1, 512, 84, 43), (1, 64, 293, 667), (1, 64, 147, 334), (1, 256, 147, 334), (1, 128, 147, 334), (1, 128, 74, 167), (1, 512, 74, 167), (1, 256, 74, 167), (1, 256, 37, 84), (1, 1024, 37, 84), (1, 512, 37, 84), (1, 64, 400, 440), (1, 64, 200, 220), (1, 256, 200, 220), (1, 128, 200, 220), (1, 64, 619, 400), (1, 64, 310, 200), (1, 256, 310, 200), (1, 128, 310, 200), (1, 128, 155, 100), (1, 512, 155, 100), (1, 256, 155, 100), (1, 64, 400, 592), (1, 64, 392, 667), (1, 64, 196, 334), (1, 256, 196, 334), (1, 128, 196, 334), (1, 64, 403, 400), (1, 64, 189, 667), (1, 64, 95, 334), (1, 256, 95, 334), (1, 128, 95, 334), (1, 128, 48, 167), (1, 512, 48, 167), (1, 256, 48, 167), (1, 256, 24, 84), (1, 1024, 24, 84), (1, 512, 24, 84), (1, 512, 12, 42), (1, 2048, 12, 42), (1, 64, 522, 400), (1, 64, 400, 658), (1, 64, 640, 400), (1, 64, 320, 200), (1, 256, 320, 200), (1, 128, 320, 200), (1, 64, 400, 617), (1, 64, 200, 309), (1, 256, 200, 309), (1, 128, 200, 309), (1, 64, 400, 463), (1, 64, 200, 232), (1, 256, 200, 232), (1, 128, 200, 232), (1, 64, 506, 400), (1, 64, 253, 200), (1, 256, 253, 200), (1, 128, 253, 200), (1, 64, 369, 667), (1, 64, 185, 334), (1, 256, 185, 334), (1, 128, 185, 334), (1, 64, 400, 499), (1, 64, 330, 667), (1, 64, 400, 505), (1, 64, 200, 253), (1, 256, 200, 253), (1, 128, 200, 253), (1, 64, 378, 667), (1, 64, 497, 400), (1, 64, 249, 200), (1, 256, 249, 200), (1, 128, 249, 200), (1, 64, 462, 400), (1, 64, 231, 200), (1, 256, 231, 200), (1, 128, 231, 200), (1, 128, 116, 100), (1, 512, 116, 100), (1, 256, 116, 100), (1, 64, 574, 400), (1, 64, 400, 427), (1, 64, 400, 475), (1, 64, 256, 667), (1, 64, 128, 334), (1, 256, 128, 334), (1, 128, 128, 334), (1, 128, 64, 167), (1, 512, 64, 167), (1, 256, 64, 167), (1, 256, 32, 84), (1, 1024, 32, 84), (1, 512, 32, 84), (1, 64, 437, 400), (1, 64, 219, 200), (1, 256, 219, 200), (1, 128, 219, 200), (1, 64, 398, 667), (1, 64, 667, 395), (1, 64, 334, 198), (1, 256, 334, 198), (1, 128, 334, 198), (1, 64, 400, 412), (1, 64, 200, 206), (1, 256, 200, 206), (1, 128, 200, 206), (1, 128, 100, 103), (1, 512, 100, 103), (1, 256, 100, 103), (1, 256, 50, 52), (1, 1024, 50, 52), (1, 512, 50, 52), (1, 64, 400, 518), (1, 64, 200, 259), (1, 256, 200, 259), (1, 128, 200, 259), (1, 64, 400, 614), (1, 64, 581, 400), (1, 64, 401, 400), (1, 64, 543, 400), (1, 64, 650, 400), (1, 64, 325, 200), (1, 256, 325, 200), (1, 128, 325, 200), (1, 128, 163, 100), (1, 512, 163, 100), (1, 256, 163, 100), (1, 256, 82, 50), (1, 1024, 82, 50), (1, 512, 82, 50), (1, 64, 508, 400), (1, 64, 667, 256), (1, 64, 334, 128), (1, 256, 334, 128), (1, 128, 334, 128), (1, 128, 167, 64), (1, 512, 167, 64), (1, 256, 167, 64), (1, 256, 84, 32), (1, 1024, 84, 32), (1, 512, 84, 32), (1, 512, 42, 16), (1, 2048, 42, 16), (1, 64, 400, 459), (1, 64, 200, 230), (1, 256, 200, 230), (1, 128, 200, 230), (1, 64, 653, 400), (1, 64, 327, 200), (1, 256, 327, 200), (1, 128, 327, 200), (1, 128, 164, 100), (1, 512, 164, 100), (1, 256, 164, 100), (1, 64, 648, 400), (1, 64, 324, 200), (1, 256, 324, 200), (1, 128, 324, 200), (1, 128, 162, 100), (1, 512, 162, 100), (1, 256, 162, 100), (1, 64, 400, 606), (1, 64, 400, 503), (1, 64, 400, 517), (1, 64, 326, 667), (1, 64, 385, 667), (1, 64, 400, 444), (1, 64, 200, 222), (1, 256, 200, 222), (1, 128, 200, 222), (1, 128, 100, 111), (1, 512, 100, 111), (1, 256, 100, 111), (1, 64, 400, 430), (1, 64, 200, 215), (1, 256, 200, 215), (1, 128, 200, 215), (1, 64, 400, 443), (1, 64, 449, 400), (1, 64, 400, 484), (1, 64, 471, 400), (1, 64, 236, 200), (1, 256, 236, 200), (1, 128, 236, 200), (1, 128, 118, 100), (1, 512, 118, 100), (1, 256, 118, 100), (1, 64, 484, 400), (1, 64, 242, 200), (1, 256, 242, 200), (1, 128, 242, 200), (1, 64, 512, 400), (1, 64, 256, 200), (1, 256, 256, 200), (1, 128, 256, 200), (1, 128, 128, 100), (1, 512, 128, 100), (1, 256, 128, 100), (1, 64, 202, 667), (1, 64, 101, 334), (1, 256, 101, 334), (1, 128, 101, 334), (1, 128, 51, 167), (1, 512, 51, 167), (1, 256, 51, 167), (1, 256, 26, 84), (1, 1024, 26, 84), (1, 512, 26, 84), (1, 64, 370, 667), (1, 64, 400, 497), (1, 64, 509, 400), (1, 64, 255, 200), (1, 256, 255, 200), (1, 128, 255, 200), (1, 64, 181, 667), (1, 64, 91, 334), (1, 256, 91, 334), (1, 128, 91, 334), (1, 128, 46, 167), (1, 512, 46, 167), (1, 256, 46, 167), (1, 256, 23, 84), (1, 1024, 23, 84), (1, 512, 23, 84), (1, 64, 253, 667), (1, 64, 127, 334), (1, 256, 127, 334), (1, 128, 127, 334), (1, 64, 223, 667), (1, 64, 112, 334), (1, 256, 112, 334), (1, 128, 112, 334), (1, 128, 56, 167), (1, 512, 56, 167), (1, 256, 56, 167), (1, 256, 28, 84), (1, 1024, 28, 84), (1, 512, 28, 84), (1, 512, 14, 42), (1, 2048, 14, 42), (1, 64, 438, 400), (1, 64, 528, 400), (1, 64, 425, 400), (1, 64, 213, 200), (1, 256, 213, 200), (1, 128, 213, 200), (1, 64, 306, 667), (1, 64, 592, 400), (1, 64, 400, 509), (1, 64, 647, 400), (1, 64, 473, 400), (1, 64, 363, 667), (1, 64, 239, 667), (1, 64, 120, 334), (1, 256, 120, 334), (1, 128, 120, 334), (1, 128, 60, 167), (1, 512, 60, 167), (1, 256, 60, 167), (1, 256, 30, 84), (1, 1024, 30, 84), (1, 512, 30, 84), (1, 64, 400, 556), (1, 64, 200, 278), (1, 256, 200, 278), (1, 128, 200, 278), (1, 64, 352, 667), (1, 64, 611, 400), (1, 64, 306, 200), (1, 256, 306, 200), (1, 128, 306, 200), (1, 64, 400, 502), (1, 64, 486, 400), (1, 64, 467, 400), (1, 64, 359, 667), (1, 64, 180, 334), (1, 256, 180, 334), (1, 128, 180, 334), (1, 64, 411, 400), (1, 64, 427, 400), (1, 64, 400, 408), (1, 64, 200, 204), (1, 256, 200, 204), (1, 128, 200, 204), (1, 64, 324, 667), (1, 64, 162, 334), (1, 256, 162, 334), (1, 128, 162, 334), (1, 64, 606, 400), (1, 64, 667, 337), (1, 64, 334, 169), (1, 256, 334, 169), (1, 128, 334, 169), (1, 128, 167, 85), (1, 512, 167, 85), (1, 256, 167, 85), (1, 64, 436, 400), (1, 64, 278, 667), (1, 64, 139, 334), (1, 256, 139, 334), (1, 128, 139, 334), (1, 128, 70, 167), (1, 512, 70, 167), (1, 256, 70, 167), (1, 64, 421, 400), (1, 64, 211, 200), (1, 256, 211, 200), (1, 128, 211, 200), (1, 64, 454, 400), (1, 64, 227, 200), (1, 256, 227, 200), (1, 128, 227, 200), (1, 128, 114, 100), (1, 512, 114, 100), (1, 256, 114, 100), (1, 64, 667, 351), (1, 64, 334, 176), (1, 256, 334, 176), (1, 128, 334, 176), (1, 128, 167, 88), (1, 512, 167, 88), (1, 256, 167, 88), (1, 64, 222, 667), (1, 64, 111, 334), (1, 256, 111, 334), (1, 128, 111, 334), (1, 64, 461, 400), (1, 64, 400, 461), (1, 64, 400, 496), (1, 64, 400, 543), (1, 64, 651, 400), (1, 64, 326, 200), (1, 256, 326, 200), (1, 128, 326, 200), (1, 64, 472, 400), (1, 64, 400, 445), (1, 64, 400, 627), (1, 64, 400, 454), (1, 64, 541, 400), (1, 64, 271, 200), (1, 256, 271, 200), (1, 128, 271, 200), (1, 64, 634, 400), (1, 64, 317, 200), (1, 256, 317, 200), (1, 128, 317, 200), (1, 64, 564, 400), (1, 64, 282, 200), (1, 256, 282, 200), (1, 128, 282, 200), (1, 128, 141, 100), (1, 512, 141, 100), (1, 256, 141, 100), (1, 64, 593, 400), (1, 64, 264, 667), (1, 64, 132, 334), (1, 256, 132, 334), (1, 128, 132, 334), (1, 128, 66, 167), (1, 512, 66, 167), (1, 256, 66, 167), (1, 256, 33, 84), (1, 1024, 33, 84), (1, 512, 33, 84), (1, 512, 17, 42), (1, 2048, 17, 42), (1, 64, 511, 400), (1, 64, 587, 400), (1, 64, 294, 200), (1, 256, 294, 200), (1, 128, 294, 200), (1, 64, 667, 368), (1, 64, 334, 184), (1, 256, 334, 184), (1, 128, 334, 184), (1, 128, 167, 92), (1, 512, 167, 92), (1, 256, 167, 92), (1, 256, 84, 46), (1, 1024, 84, 46), (1, 512, 84, 46), (1, 512, 42, 23), (1, 2048, 42, 23), (1, 64, 391, 667), (1, 64, 617, 400), (1, 64, 309, 200), (1, 256, 309, 200), (1, 128, 309, 200)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["running_mean"],
                    "shape": [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["running_var"],
                    "shape": [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["weight"],
                    "requires_grad": [True],
                    "shape": [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["bias"],
                    "requires_grad": [True],
                    "shape": [(64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (64,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (64,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,), (64,), (64,), (256,), (128,), (128,), (512,), (256,), (256,), (1024,), (512,), (512,), (2048,), (64,), (64,), (64,), (256,), (128,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'relu': dict(
        name=["relu"],
        para=dict(
            inplace=[True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True, True],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 64, 560, 400), (2, 64, 280, 200), (2, 256, 280, 200), (2, 128, 280, 200), (2, 128, 140, 100), (2, 512, 140, 100), (2, 256, 140, 100), (2, 256, 70, 50), (2, 1024, 70, 50), (2, 512, 70, 50), (2, 512, 35, 25), (2, 2048, 35, 25), (875, 2, 2048), (100, 2, 2048), (6, 2, 100, 256), (1, 64, 400, 600), (1, 64, 200, 300), (1, 256, 200, 300), (1, 128, 200, 300), (1, 128, 100, 150), (1, 512, 100, 150), (1, 256, 100, 150), (1, 256, 50, 75), (1, 1024, 50, 75), (1, 512, 50, 75), (1, 512, 25, 38), (1, 2048, 25, 38), (950, 1, 2048), (100, 1, 2048), (6, 1, 100, 256), (1, 64, 400, 612), (1, 64, 200, 306), (1, 256, 200, 306), (1, 128, 200, 306), (1, 128, 100, 153), (1, 512, 100, 153), (1, 256, 100, 153), (1, 256, 50, 77), (1, 1024, 50, 77), (1, 512, 50, 77), (1, 512, 25, 39), (1, 2048, 25, 39), (975, 1, 2048), (1, 64, 400, 598), (1, 64, 200, 299), (1, 256, 200, 299), (1, 128, 200, 299), (1, 64, 400, 534), (1, 64, 200, 267), (1, 256, 200, 267), (1, 128, 200, 267), (1, 128, 100, 134), (1, 512, 100, 134), (1, 256, 100, 134), (1, 256, 50, 67), (1, 1024, 50, 67), (1, 512, 50, 67), (1, 512, 25, 34), (1, 2048, 25, 34), (850, 1, 2048), (1, 64, 400, 660), (1, 64, 200, 330), (1, 256, 200, 330), (1, 128, 200, 330), (1, 128, 100, 165), (1, 512, 100, 165), (1, 256, 100, 165), (1, 256, 50, 83), (1, 1024, 50, 83), (1, 512, 50, 83), (1, 512, 25, 42), (1, 2048, 25, 42), (1050, 1, 2048), (1, 64, 400, 501), (1, 64, 200, 251), (1, 256, 200, 251), (1, 128, 200, 251), (1, 128, 100, 126), (1, 512, 100, 126), (1, 256, 100, 126), (1, 256, 50, 63), (1, 1024, 50, 63), (1, 512, 50, 63), (1, 512, 25, 32), (1, 2048, 25, 32), (800, 1, 2048), (1, 64, 600, 400), (1, 64, 300, 200), (1, 256, 300, 200), (1, 128, 300, 200), (1, 128, 150, 100), (1, 512, 150, 100), (1, 256, 150, 100), (1, 256, 75, 50), (1, 1024, 75, 50), (1, 512, 75, 50), (1, 512, 38, 25), (1, 2048, 38, 25), (1, 64, 534, 400), (1, 64, 267, 200), (1, 256, 267, 200), (1, 128, 267, 200), (1, 128, 134, 100), (1, 512, 134, 100), (1, 256, 134, 100), (1, 256, 67, 50), (1, 1024, 67, 50), (1, 512, 67, 50), (1, 512, 34, 25), (1, 2048, 34, 25), (1, 64, 400, 601), (1, 64, 200, 301), (1, 256, 200, 301), (1, 128, 200, 301), (1, 128, 100, 151), (1, 512, 100, 151), (1, 256, 100, 151), (1, 256, 50, 76), (1, 1024, 50, 76), (1, 512, 50, 76), (1, 64, 570, 400), (1, 64, 285, 200), (1, 256, 285, 200), (1, 128, 285, 200), (1, 128, 143, 100), (1, 512, 143, 100), (1, 256, 143, 100), (1, 256, 72, 50), (1, 1024, 72, 50), (1, 512, 72, 50), (1, 512, 36, 25), (1, 2048, 36, 25), (900, 1, 2048), (1, 64, 400, 473), (1, 64, 200, 237), (1, 256, 200, 237), (1, 128, 200, 237), (1, 128, 100, 119), (1, 512, 100, 119), (1, 256, 100, 119), (1, 256, 50, 60), (1, 1024, 50, 60), (1, 512, 50, 60), (1, 512, 25, 30), (1, 2048, 25, 30), (750, 1, 2048), (1, 64, 400, 512), (1, 64, 200, 256), (1, 256, 200, 256), (1, 128, 200, 256), (1, 128, 100, 128), (1, 512, 100, 128), (1, 256, 100, 128), (1, 256, 50, 64), (1, 1024, 50, 64), (1, 512, 50, 64), (1, 64, 400, 554), (1, 64, 200, 277), (1, 256, 200, 277), (1, 128, 200, 277), (1, 128, 100, 139), (1, 512, 100, 139), (1, 256, 100, 139), (1, 256, 50, 70), (1, 1024, 50, 70), (1, 512, 50, 70), (1, 512, 25, 35), (1, 2048, 25, 35), (875, 1, 2048), (1, 64, 400, 603), (1, 64, 200, 302), (1, 256, 200, 302), (1, 128, 200, 302), (1, 64, 434, 400), (1, 64, 217, 200), (1, 256, 217, 200), (1, 128, 217, 200), (1, 128, 109, 100), (1, 512, 109, 100), (1, 256, 109, 100), (1, 256, 55, 50), (1, 1024, 55, 50), (1, 512, 55, 50), (1, 512, 28, 25), (1, 2048, 28, 25), (700, 1, 2048), (1, 64, 404, 400), (1, 64, 202, 200), (1, 256, 202, 200), (1, 128, 202, 200), (1, 128, 101, 100), (1, 512, 101, 100), (1, 256, 101, 100), (1, 256, 51, 50), (1, 1024, 51, 50), (1, 512, 51, 50), (1, 512, 26, 25), (1, 2048, 26, 25), (650, 1, 2048), (1, 64, 400, 640), (1, 64, 200, 320), (1, 256, 200, 320), (1, 128, 200, 320), (1, 128, 100, 160), (1, 512, 100, 160), (1, 256, 100, 160), (1, 256, 50, 80), (1, 1024, 50, 80), (1, 512, 50, 80), (1, 512, 25, 40), (1, 2048, 25, 40), (1000, 1, 2048), (1, 64, 400, 593), (1, 64, 200, 297), (1, 256, 200, 297), (1, 128, 200, 297), (1, 128, 100, 149), (1, 512, 100, 149), (1, 256, 100, 149), (1, 64, 387, 667), (1, 64, 194, 334), (1, 256, 194, 334), (1, 128, 194, 334), (1, 128, 97, 167), (1, 512, 97, 167), (1, 256, 97, 167), (1, 256, 49, 84), (1, 1024, 49, 84), (1, 512, 49, 84), (1, 64, 400, 570), (1, 64, 200, 285), (1, 256, 200, 285), (1, 128, 200, 285), (1, 128, 100, 143), (1, 512, 100, 143), (1, 256, 100, 143), (1, 256, 50, 72), (1, 1024, 50, 72), (1, 512, 50, 72), (1, 512, 25, 36), (1, 2048, 25, 36), (1, 64, 603, 400), (1, 64, 302, 200), (1, 256, 302, 200), (1, 128, 302, 200), (1, 128, 151, 100), (1, 512, 151, 100), (1, 256, 151, 100), (1, 256, 76, 50), (1, 1024, 76, 50), (1, 512, 76, 50), (1, 64, 441, 400), (1, 64, 221, 200), (1, 256, 221, 200), (1, 128, 221, 200), (1, 128, 111, 100), (1, 512, 111, 100), (1, 256, 111, 100), (1, 256, 56, 50), (1, 1024, 56, 50), (1, 512, 56, 50), (1, 64, 375, 667), (1, 64, 188, 334), (1, 256, 188, 334), (1, 128, 188, 334), (1, 128, 94, 167), (1, 512, 94, 167), (1, 256, 94, 167), (1, 256, 47, 84), (1, 1024, 47, 84), (1, 512, 47, 84), (1, 512, 24, 42), (1, 2048, 24, 42), (1008, 1, 2048), (1, 64, 400, 400), (1, 64, 200, 200), (1, 256, 200, 200), (1, 128, 200, 200), (1, 128, 100, 100), (1, 512, 100, 100), (1, 256, 100, 100), (1, 256, 50, 50), (1, 1024, 50, 50), (1, 512, 50, 50), (1, 512, 25, 25), (1, 2048, 25, 25), (625, 1, 2048), (1, 64, 642, 400), (1, 64, 321, 200), (1, 256, 321, 200), (1, 128, 321, 200), (1, 128, 161, 100), (1, 512, 161, 100), (1, 256, 161, 100), (1, 256, 81, 50), (1, 1024, 81, 50), (1, 512, 81, 50), (1, 512, 41, 25), (1, 2048, 41, 25), (1025, 1, 2048), (1, 64, 400, 604), (1, 64, 400, 564), (1, 64, 200, 282), (1, 256, 200, 282), (1, 128, 200, 282), (1, 128, 100, 141), (1, 512, 100, 141), (1, 256, 100, 141), (1, 256, 50, 71), (1, 1024, 50, 71), (1, 512, 50, 71), (1, 64, 400, 582), (1, 64, 200, 291), (1, 256, 200, 291), (1, 128, 200, 291), (1, 128, 100, 146), (1, 512, 100, 146), (1, 256, 100, 146), (1, 256, 50, 73), (1, 1024, 50, 73), (1, 512, 50, 73), (1, 512, 25, 37), (1, 2048, 25, 37), (925, 1, 2048), (1, 64, 400, 565), (1, 64, 200, 283), (1, 256, 200, 283), (1, 128, 200, 283), (1, 128, 100, 142), (1, 512, 100, 142), (1, 256, 100, 142), (1, 64, 400, 599), (1, 64, 382, 667), (1, 64, 191, 334), (1, 256, 191, 334), (1, 128, 191, 334), (1, 128, 96, 167), (1, 512, 96, 167), (1, 256, 96, 167), (1, 256, 48, 84), (1, 1024, 48, 84), (1, 512, 48, 84), (1, 64, 597, 400), (1, 64, 299, 200), (1, 256, 299, 200), (1, 128, 299, 200), (1, 64, 601, 400), (1, 64, 301, 200), (1, 256, 301, 200), (1, 128, 301, 200), (1, 64, 400, 583), (1, 64, 200, 292), (1, 256, 200, 292), (1, 128, 200, 292), (1, 64, 532, 400), (1, 64, 266, 200), (1, 256, 266, 200), (1, 128, 266, 200), (1, 128, 133, 100), (1, 512, 133, 100), (1, 256, 133, 100), (1, 64, 400, 650), (1, 64, 200, 325), (1, 256, 200, 325), (1, 128, 200, 325), (1, 128, 100, 163), (1, 512, 100, 163), (1, 256, 100, 163), (1, 256, 50, 82), (1, 1024, 50, 82), (1, 512, 50, 82), (1, 512, 25, 41), (1, 2048, 25, 41), (1, 64, 302, 667), (1, 64, 151, 334), (1, 256, 151, 334), (1, 128, 151, 334), (1, 128, 76, 167), (1, 512, 76, 167), (1, 256, 76, 167), (1, 256, 38, 84), (1, 1024, 38, 84), (1, 512, 38, 84), (1, 512, 19, 42), (1, 2048, 19, 42), (798, 1, 2048), (1, 64, 400, 639), (1, 64, 602, 400), (1, 64, 400, 657), (1, 64, 200, 329), (1, 256, 200, 329), (1, 128, 200, 329), (1, 64, 400, 536), (1, 64, 200, 268), (1, 256, 200, 268), (1, 128, 200, 268), (1, 64, 616, 400), (1, 64, 308, 200), (1, 256, 308, 200), (1, 128, 308, 200), (1, 128, 154, 100), (1, 512, 154, 100), (1, 256, 154, 100), (1, 256, 77, 50), (1, 1024, 77, 50), (1, 512, 77, 50), (1, 512, 39, 25), (1, 2048, 39, 25), (1, 64, 598, 400), (1, 64, 400, 578), (1, 64, 200, 289), (1, 256, 200, 289), (1, 128, 200, 289), (1, 128, 100, 145), (1, 512, 100, 145), (1, 256, 100, 145), (1, 64, 560, 400), (1, 64, 280, 200), (1, 256, 280, 200), (1, 128, 280, 200), (1, 128, 140, 100), (1, 512, 140, 100), (1, 256, 140, 100), (1, 256, 70, 50), (1, 1024, 70, 50), (1, 512, 70, 50), (1, 512, 35, 25), (1, 2048, 35, 25), (1, 64, 400, 597), (1, 64, 400, 533), (1, 64, 400, 530), (1, 64, 200, 265), (1, 256, 200, 265), (1, 128, 200, 265), (1, 128, 100, 133), (1, 512, 100, 133), (1, 256, 100, 133), (1, 64, 400, 405), (1, 64, 200, 203), (1, 256, 200, 203), (1, 128, 200, 203), (1, 128, 100, 102), (1, 512, 100, 102), (1, 256, 100, 102), (1, 256, 50, 51), (1, 1024, 50, 51), (1, 512, 50, 51), (1, 512, 25, 26), (1, 2048, 25, 26), (1, 64, 400, 526), (1, 64, 200, 263), (1, 256, 200, 263), (1, 128, 200, 263), (1, 128, 100, 132), (1, 512, 100, 132), (1, 256, 100, 132), (1, 256, 50, 66), (1, 1024, 50, 66), (1, 512, 50, 66), (1, 512, 25, 33), (1, 2048, 25, 33), (825, 1, 2048), (1, 64, 400, 535), (1, 64, 381, 667), (1, 64, 604, 400), (1, 64, 400, 500), (1, 64, 200, 250), (1, 256, 200, 250), (1, 128, 200, 250), (1, 128, 100, 125), (1, 512, 100, 125), (1, 256, 100, 125), (1, 64, 400, 568), (1, 64, 200, 284), (1, 256, 200, 284), (1, 128, 200, 284), (1, 64, 400, 634), (1, 64, 200, 317), (1, 256, 200, 317), (1, 128, 200, 317), (1, 128, 100, 159), (1, 512, 100, 159), (1, 256, 100, 159), (1, 64, 400, 620), (1, 64, 200, 310), (1, 256, 200, 310), (1, 128, 200, 310), (1, 128, 100, 155), (1, 512, 100, 155), (1, 256, 100, 155), (1, 256, 50, 78), (1, 1024, 50, 78), (1, 512, 50, 78), (1, 64, 400, 560), (1, 64, 200, 280), (1, 256, 200, 280), (1, 128, 200, 280), (1, 128, 100, 140), (1, 512, 100, 140), (1, 256, 100, 140), (1, 64, 400, 472), (1, 64, 200, 236), (1, 256, 200, 236), (1, 128, 200, 236), (1, 128, 100, 118), (1, 512, 100, 118), (1, 256, 100, 118), (1, 256, 50, 59), (1, 1024, 50, 59), (1, 512, 50, 59), (1, 64, 490, 400), (1, 64, 245, 200), (1, 256, 245, 200), (1, 128, 245, 200), (1, 128, 123, 100), (1, 512, 123, 100), (1, 256, 123, 100), (1, 256, 62, 50), (1, 1024, 62, 50), (1, 512, 62, 50), (1, 512, 31, 25), (1, 2048, 31, 25), (775, 1, 2048), (1, 64, 400, 540), (1, 64, 200, 270), (1, 256, 200, 270), (1, 128, 200, 270), (1, 128, 100, 135), (1, 512, 100, 135), (1, 256, 100, 135), (1, 256, 50, 68), (1, 1024, 50, 68), (1, 512, 50, 68), (1, 64, 376, 667), (1, 64, 667, 376), (1, 64, 334, 188), (1, 256, 334, 188), (1, 128, 334, 188), (1, 128, 167, 94), (1, 512, 167, 94), (1, 256, 167, 94), (1, 256, 84, 47), (1, 1024, 84, 47), (1, 512, 84, 47), (1, 512, 42, 24), (1, 2048, 42, 24), (1, 64, 536, 400), (1, 64, 268, 200), (1, 256, 268, 200), (1, 128, 268, 200), (1, 64, 400, 587), (1, 64, 200, 294), (1, 256, 200, 294), (1, 128, 200, 294), (1, 128, 100, 147), (1, 512, 100, 147), (1, 256, 100, 147), (1, 256, 50, 74), (1, 1024, 50, 74), (1, 512, 50, 74), (1, 64, 578, 400), (1, 64, 289, 200), (1, 256, 289, 200), (1, 128, 289, 200), (1, 128, 145, 100), (1, 512, 145, 100), (1, 256, 145, 100), (1, 256, 73, 50), (1, 1024, 73, 50), (1, 512, 73, 50), (1, 512, 37, 25), (1, 2048, 37, 25), (1, 64, 400, 645), (1, 64, 200, 323), (1, 256, 200, 323), (1, 128, 200, 323), (1, 128, 100, 162), (1, 512, 100, 162), (1, 256, 100, 162), (1, 256, 50, 81), (1, 1024, 50, 81), (1, 512, 50, 81), (1, 64, 400, 621), (1, 64, 200, 311), (1, 256, 200, 311), (1, 128, 200, 311), (1, 128, 100, 156), (1, 512, 100, 156), (1, 256, 100, 156), (1, 64, 371, 667), (1, 64, 186, 334), (1, 256, 186, 334), (1, 128, 186, 334), (1, 128, 93, 167), (1, 512, 93, 167), (1, 256, 93, 167), (1, 64, 400, 647), (1, 64, 200, 324), (1, 256, 200, 324), (1, 128, 200, 324), (1, 64, 400, 605), (1, 64, 200, 303), (1, 256, 200, 303), (1, 128, 200, 303), (1, 128, 100, 152), (1, 512, 100, 152), (1, 256, 100, 152), (1, 64, 400, 485), (1, 64, 200, 243), (1, 256, 200, 243), (1, 128, 200, 243), (1, 128, 100, 122), (1, 512, 100, 122), (1, 256, 100, 122), (1, 256, 50, 61), (1, 1024, 50, 61), (1, 512, 50, 61), (1, 512, 25, 31), (1, 2048, 25, 31), (1, 64, 400, 498), (1, 64, 200, 249), (1, 256, 200, 249), (1, 128, 200, 249), (1, 64, 635, 400), (1, 64, 318, 200), (1, 256, 318, 200), (1, 128, 318, 200), (1, 128, 159, 100), (1, 512, 159, 100), (1, 256, 159, 100), (1, 256, 80, 50), (1, 1024, 80, 50), (1, 512, 80, 50), (1, 512, 40, 25), (1, 2048, 40, 25), (1, 64, 400, 652), (1, 64, 200, 326), (1, 256, 200, 326), (1, 128, 200, 326), (1, 64, 345, 667), (1, 64, 173, 334), (1, 256, 173, 334), (1, 128, 173, 334), (1, 128, 87, 167), (1, 512, 87, 167), (1, 256, 87, 167), (1, 256, 44, 84), (1, 1024, 44, 84), (1, 512, 44, 84), (1, 512, 22, 42), (1, 2048, 22, 42), (924, 1, 2048), (1, 64, 428, 400), (1, 64, 214, 200), (1, 256, 214, 200), (1, 128, 214, 200), (1, 128, 107, 100), (1, 512, 107, 100), (1, 256, 107, 100), (1, 256, 54, 50), (1, 1024, 54, 50), (1, 512, 54, 50), (1, 512, 27, 25), (1, 2048, 27, 25), (675, 1, 2048), (1, 64, 400, 626), (1, 64, 200, 313), (1, 256, 200, 313), (1, 128, 200, 313), (1, 128, 100, 157), (1, 512, 100, 157), (1, 256, 100, 157), (1, 256, 50, 79), (1, 1024, 50, 79), (1, 512, 50, 79), (1, 64, 400, 547), (1, 64, 200, 274), (1, 256, 200, 274), (1, 128, 200, 274), (1, 128, 100, 137), (1, 512, 100, 137), (1, 256, 100, 137), (1, 256, 50, 69), (1, 1024, 50, 69), (1, 512, 50, 69), (1, 64, 400, 532), (1, 64, 200, 266), (1, 256, 200, 266), (1, 128, 200, 266), (1, 64, 623, 400), (1, 64, 312, 200), (1, 256, 312, 200), (1, 128, 312, 200), (1, 128, 156, 100), (1, 512, 156, 100), (1, 256, 156, 100), (1, 256, 78, 50), (1, 1024, 78, 50), (1, 512, 78, 50), (1, 64, 400, 420), (1, 64, 200, 210), (1, 256, 200, 210), (1, 128, 200, 210), (1, 128, 100, 105), (1, 512, 100, 105), (1, 256, 100, 105), (1, 256, 50, 53), (1, 1024, 50, 53), (1, 512, 50, 53), (1, 512, 25, 27), (1, 2048, 25, 27), (1, 64, 485, 400), (1, 64, 243, 200), (1, 256, 243, 200), (1, 128, 243, 200), (1, 128, 122, 100), (1, 512, 122, 100), (1, 256, 122, 100), (1, 256, 61, 50), (1, 1024, 61, 50), (1, 512, 61, 50), (1, 64, 513, 400), (1, 64, 257, 200), (1, 256, 257, 200), (1, 128, 257, 200), (1, 128, 129, 100), (1, 512, 129, 100), (1, 256, 129, 100), (1, 256, 65, 50), (1, 1024, 65, 50), (1, 512, 65, 50), (1, 512, 33, 25), (1, 2048, 33, 25), (1, 64, 667, 374), (1, 64, 334, 187), (1, 256, 334, 187), (1, 128, 334, 187), (1, 64, 400, 538), (1, 64, 200, 269), (1, 256, 200, 269), (1, 128, 200, 269), (1, 64, 573, 400), (1, 64, 287, 200), (1, 256, 287, 200), (1, 128, 287, 200), (1, 128, 144, 100), (1, 512, 144, 100), (1, 256, 144, 100), (1, 64, 559, 400), (1, 64, 305, 667), (1, 64, 153, 334), (1, 256, 153, 334), (1, 128, 153, 334), (1, 128, 77, 167), (1, 512, 77, 167), (1, 256, 77, 167), (1, 256, 39, 84), (1, 1024, 39, 84), (1, 512, 39, 84), (1, 512, 20, 42), (1, 2048, 20, 42), (840, 1, 2048), (1, 64, 667, 399), (1, 64, 334, 200), (1, 256, 334, 200), (1, 128, 334, 200), (1, 128, 167, 100), (1, 512, 167, 100), (1, 256, 167, 100), (1, 256, 84, 50), (1, 1024, 84, 50), (1, 512, 84, 50), (1, 512, 42, 25), (1, 2048, 42, 25), (1, 64, 538, 400), (1, 64, 269, 200), (1, 256, 269, 200), (1, 128, 269, 200), (1, 128, 135, 100), (1, 512, 135, 100), (1, 256, 135, 100), (1, 256, 68, 50), (1, 1024, 68, 50), (1, 512, 68, 50), (1, 64, 430, 400), (1, 64, 215, 200), (1, 256, 215, 200), (1, 128, 215, 200), (1, 128, 108, 100), (1, 512, 108, 100), (1, 256, 108, 100), (1, 64, 400, 531), (1, 64, 400, 635), (1, 64, 200, 318), (1, 256, 200, 318), (1, 128, 200, 318), (1, 64, 358, 667), (1, 64, 179, 334), (1, 256, 179, 334), (1, 128, 179, 334), (1, 128, 90, 167), (1, 512, 90, 167), (1, 256, 90, 167), (1, 256, 45, 84), (1, 1024, 45, 84), (1, 512, 45, 84), (1, 512, 23, 42), (1, 2048, 23, 42), (966, 1, 2048), (1, 64, 400, 544), (1, 64, 200, 272), (1, 256, 200, 272), (1, 128, 200, 272), (1, 128, 100, 136), (1, 512, 100, 136), (1, 256, 100, 136), (1, 64, 400, 529), (1, 64, 328, 667), (1, 64, 164, 334), (1, 256, 164, 334), (1, 128, 164, 334), (1, 128, 82, 167), (1, 512, 82, 167), (1, 256, 82, 167), (1, 256, 41, 84), (1, 1024, 41, 84), (1, 512, 41, 84), (1, 512, 21, 42), (1, 2048, 21, 42), (882, 1, 2048), (1, 64, 613, 400), (1, 64, 307, 200), (1, 256, 307, 200), (1, 128, 307, 200), (1, 64, 400, 401), (1, 64, 200, 201), (1, 256, 200, 201), (1, 128, 200, 201), (1, 128, 100, 101), (1, 512, 100, 101), (1, 256, 100, 101), (1, 64, 501, 400), (1, 64, 251, 200), (1, 256, 251, 200), (1, 128, 251, 200), (1, 128, 126, 100), (1, 512, 126, 100), (1, 256, 126, 100), (1, 256, 63, 50), (1, 1024, 63, 50), (1, 512, 63, 50), (1, 512, 32, 25), (1, 2048, 32, 25), (1, 64, 400, 642), (1, 64, 200, 321), (1, 256, 200, 321), (1, 128, 200, 321), (1, 128, 100, 161), (1, 512, 100, 161), (1, 256, 100, 161), (1, 64, 400, 625), (1, 64, 400, 541), (1, 64, 200, 271), (1, 256, 200, 271), (1, 128, 200, 271), (1, 64, 400, 590), (1, 64, 200, 295), (1, 256, 200, 295), (1, 128, 200, 295), (1, 128, 100, 148), (1, 512, 100, 148), (1, 256, 100, 148), (1, 64, 400, 520), (1, 64, 200, 260), (1, 256, 200, 260), (1, 128, 200, 260), (1, 128, 100, 130), (1, 512, 100, 130), (1, 256, 100, 130), (1, 256, 50, 65), (1, 1024, 50, 65), (1, 512, 50, 65), (1, 64, 572, 400), (1, 64, 286, 200), (1, 256, 286, 200), (1, 128, 286, 200), (1, 64, 400, 462), (1, 64, 200, 231), (1, 256, 200, 231), (1, 128, 200, 231), (1, 128, 100, 116), (1, 512, 100, 116), (1, 256, 100, 116), (1, 256, 50, 58), (1, 1024, 50, 58), (1, 512, 50, 58), (1, 512, 25, 29), (1, 2048, 25, 29), (725, 1, 2048), (1, 64, 400, 455), (1, 64, 200, 228), (1, 256, 200, 228), (1, 128, 200, 228), (1, 128, 100, 114), (1, 512, 100, 114), (1, 256, 100, 114), (1, 256, 50, 57), (1, 1024, 50, 57), (1, 512, 50, 57), (1, 64, 400, 545), (1, 64, 200, 273), (1, 256, 200, 273), (1, 128, 200, 273), (1, 64, 400, 495), (1, 64, 200, 248), (1, 256, 200, 248), (1, 128, 200, 248), (1, 128, 100, 124), (1, 512, 100, 124), (1, 256, 100, 124), (1, 256, 50, 62), (1, 1024, 50, 62), (1, 512, 50, 62), (1, 64, 435, 400), (1, 64, 218, 200), (1, 256, 218, 200), (1, 128, 218, 200), (1, 64, 667, 299), (1, 64, 334, 150), (1, 256, 334, 150), (1, 128, 334, 150), (1, 128, 167, 75), (1, 512, 167, 75), (1, 256, 167, 75), (1, 256, 84, 38), (1, 1024, 84, 38), (1, 512, 84, 38), (1, 512, 42, 19), (1, 2048, 42, 19), (1, 64, 400, 608), (1, 64, 200, 304), (1, 256, 200, 304), (1, 128, 200, 304), (1, 64, 555, 400), (1, 64, 278, 200), (1, 256, 278, 200), (1, 128, 278, 200), (1, 128, 139, 100), (1, 512, 139, 100), (1, 256, 139, 100), (1, 64, 400, 653), (1, 64, 200, 327), (1, 256, 200, 327), (1, 128, 200, 327), (1, 128, 100, 164), (1, 512, 100, 164), (1, 256, 100, 164), (1, 64, 660, 400), (1, 64, 330, 200), (1, 256, 330, 200), (1, 128, 330, 200), (1, 128, 165, 100), (1, 512, 165, 100), (1, 256, 165, 100), (1, 256, 83, 50), (1, 1024, 83, 50), (1, 512, 83, 50), (1, 64, 500, 400), (1, 64, 250, 200), (1, 256, 250, 200), (1, 128, 250, 200), (1, 128, 125, 100), (1, 512, 125, 100), (1, 256, 125, 100), (1, 64, 595, 400), (1, 64, 298, 200), (1, 256, 298, 200), (1, 128, 298, 200), (1, 128, 149, 100), (1, 512, 149, 100), (1, 256, 149, 100), (1, 64, 585, 400), (1, 64, 293, 200), (1, 256, 293, 200), (1, 128, 293, 200), (1, 128, 147, 100), (1, 512, 147, 100), (1, 256, 147, 100), (1, 256, 74, 50), (1, 1024, 74, 50), (1, 512, 74, 50), (1, 64, 400, 446), (1, 64, 200, 223), (1, 256, 200, 223), (1, 128, 200, 223), (1, 128, 100, 112), (1, 512, 100, 112), (1, 256, 100, 112), (1, 256, 50, 56), (1, 1024, 50, 56), (1, 512, 50, 56), (1, 512, 25, 28), (1, 2048, 25, 28), (1, 64, 400, 453), (1, 64, 200, 227), (1, 256, 200, 227), (1, 128, 200, 227), (1, 64, 400, 559), (1, 64, 331, 667), (1, 64, 166, 334), (1, 256, 166, 334), (1, 128, 166, 334), (1, 128, 83, 167), (1, 512, 83, 167), (1, 256, 83, 167), (1, 256, 42, 84), (1, 1024, 42, 84), (1, 512, 42, 84), (1, 64, 567, 400), (1, 64, 284, 200), (1, 256, 284, 200), (1, 128, 284, 200), (1, 128, 142, 100), (1, 512, 142, 100), (1, 256, 142, 100), (1, 256, 71, 50), (1, 1024, 71, 50), (1, 512, 71, 50), (1, 64, 525, 400), (1, 64, 263, 200), (1, 256, 263, 200), (1, 128, 263, 200), (1, 128, 132, 100), (1, 512, 132, 100), (1, 256, 132, 100), (1, 256, 66, 50), (1, 1024, 66, 50), (1, 512, 66, 50), (1, 64, 400, 595), (1, 64, 200, 298), (1, 256, 200, 298), (1, 128, 200, 298), (1, 64, 400, 589), (1, 64, 274, 667), (1, 64, 137, 334), (1, 256, 137, 334), (1, 128, 137, 334), (1, 128, 69, 167), (1, 512, 69, 167), (1, 256, 69, 167), (1, 256, 35, 84), (1, 1024, 35, 84), (1, 512, 35, 84), (1, 512, 18, 42), (1, 2048, 18, 42), (756, 1, 2048), (1, 64, 400, 663), (1, 64, 200, 332), (1, 256, 200, 332), (1, 128, 200, 332), (1, 128, 100, 166), (1, 512, 100, 166), (1, 256, 100, 166), (1, 64, 400, 478), (1, 64, 200, 239), (1, 256, 200, 239), (1, 128, 200, 239), (1, 128, 100, 120), (1, 512, 100, 120), (1, 256, 100, 120), (1, 64, 518, 400), (1, 64, 259, 200), (1, 256, 259, 200), (1, 128, 259, 200), (1, 128, 130, 100), (1, 512, 130, 100), (1, 256, 130, 100), (1, 64, 349, 667), (1, 64, 175, 334), (1, 256, 175, 334), (1, 128, 175, 334), (1, 128, 88, 167), (1, 512, 88, 167), (1, 256, 88, 167), (1, 64, 667, 400), (1, 64, 334, 667), (1, 64, 167, 334), (1, 256, 167, 334), (1, 128, 167, 334), (1, 128, 84, 167), (1, 512, 84, 167), (1, 256, 84, 167), (1, 64, 400, 466), (1, 64, 200, 233), (1, 256, 200, 233), (1, 128, 200, 233), (1, 128, 100, 117), (1, 512, 100, 117), (1, 256, 100, 117), (1, 64, 400, 628), (1, 64, 200, 314), (1, 256, 200, 314), (1, 128, 200, 314), (1, 64, 400, 573), (1, 64, 200, 287), (1, 256, 200, 287), (1, 128, 200, 287), (1, 128, 100, 144), (1, 512, 100, 144), (1, 256, 100, 144), (1, 64, 400, 493), (1, 64, 200, 247), (1, 256, 200, 247), (1, 128, 200, 247), (1, 64, 400, 483), (1, 64, 200, 242), (1, 256, 200, 242), (1, 128, 200, 242), (1, 128, 100, 121), (1, 512, 100, 121), (1, 256, 100, 121), (1, 64, 540, 400), (1, 64, 270, 200), (1, 256, 270, 200), (1, 128, 270, 200), (1, 64, 605, 400), (1, 64, 303, 200), (1, 256, 303, 200), (1, 128, 303, 200), (1, 128, 152, 100), (1, 512, 152, 100), (1, 256, 152, 100), (1, 64, 667, 375), (1, 64, 399, 667), (1, 64, 200, 334), (1, 256, 200, 334), (1, 128, 200, 334), (1, 128, 100, 167), (1, 512, 100, 167), (1, 256, 100, 167), (1, 256, 50, 84), (1, 1024, 50, 84), (1, 512, 50, 84), (1, 64, 400, 516), (1, 64, 200, 258), (1, 256, 200, 258), (1, 128, 200, 258), (1, 128, 100, 129), (1, 512, 100, 129), (1, 256, 100, 129), (1, 64, 400, 581), (1, 64, 374, 667), (1, 64, 187, 334), (1, 256, 187, 334), (1, 128, 187, 334), (1, 64, 599, 400), (1, 64, 329, 667), (1, 64, 165, 334), (1, 256, 165, 334), (1, 128, 165, 334), (1, 64, 400, 643), (1, 64, 200, 322), (1, 256, 200, 322), (1, 128, 200, 322), (1, 64, 373, 667), (1, 64, 400, 631), (1, 64, 200, 316), (1, 256, 200, 316), (1, 128, 200, 316), (1, 128, 100, 158), (1, 512, 100, 158), (1, 256, 100, 158), (1, 64, 400, 611), (1, 64, 442, 400), (1, 64, 439, 400), (1, 64, 220, 200), (1, 256, 220, 200), (1, 128, 220, 200), (1, 128, 110, 100), (1, 512, 110, 100), (1, 256, 110, 100), (1, 64, 400, 431), (1, 64, 200, 216), (1, 256, 200, 216), (1, 128, 200, 216), (1, 128, 100, 108), (1, 512, 100, 108), (1, 256, 100, 108), (1, 256, 50, 54), (1, 1024, 50, 54), (1, 512, 50, 54), (1, 64, 400, 558), (1, 64, 200, 279), (1, 256, 200, 279), (1, 128, 200, 279), (1, 64, 400, 616), (1, 64, 200, 308), (1, 256, 200, 308), (1, 128, 200, 308), (1, 128, 100, 154), (1, 512, 100, 154), (1, 256, 100, 154), (1, 64, 400, 622), (1, 64, 357, 667), (1, 64, 489, 400), (1, 64, 594, 400), (1, 64, 297, 200), (1, 256, 297, 200), (1, 128, 297, 200), (1, 64, 492, 400), (1, 64, 246, 200), (1, 256, 246, 200), (1, 128, 246, 200), (1, 64, 432, 400), (1, 64, 216, 200), (1, 256, 216, 200), (1, 128, 216, 200), (1, 64, 400, 572), (1, 64, 200, 286), (1, 256, 200, 286), (1, 128, 200, 286), (1, 64, 537, 400), (1, 64, 527, 400), (1, 64, 264, 200), (1, 256, 264, 200), (1, 128, 264, 200), (1, 64, 504, 400), (1, 64, 252, 200), (1, 256, 252, 200), (1, 128, 252, 200), (1, 64, 503, 400), (1, 64, 400, 576), (1, 64, 200, 288), (1, 256, 200, 288), (1, 128, 200, 288), (1, 64, 443, 400), (1, 64, 222, 200), (1, 256, 222, 200), (1, 128, 222, 200), (1, 64, 667, 317), (1, 64, 334, 159), (1, 256, 334, 159), (1, 128, 334, 159), (1, 128, 167, 80), (1, 512, 167, 80), (1, 256, 167, 80), (1, 256, 84, 40), (1, 1024, 84, 40), (1, 512, 84, 40), (1, 512, 42, 20), (1, 2048, 42, 20), (1, 64, 400, 402), (1, 64, 535, 400), (1, 64, 400, 525), (1, 64, 400, 594), (1, 64, 552, 400), (1, 64, 276, 200), (1, 256, 276, 200), (1, 128, 276, 200), (1, 128, 138, 100), (1, 512, 138, 100), (1, 256, 138, 100), (1, 256, 69, 50), (1, 1024, 69, 50), (1, 512, 69, 50), (1, 64, 275, 667), (1, 64, 138, 334), (1, 256, 138, 334), (1, 128, 138, 334), (1, 64, 400, 591), (1, 64, 200, 296), (1, 256, 200, 296), (1, 128, 200, 296), (1, 64, 400, 469), (1, 64, 200, 235), (1, 256, 200, 235), (1, 128, 200, 235), (1, 64, 400, 507), (1, 64, 200, 254), (1, 256, 200, 254), (1, 128, 200, 254), (1, 128, 100, 127), (1, 512, 100, 127), (1, 256, 100, 127), (1, 64, 478, 400), (1, 64, 239, 200), (1, 256, 239, 200), (1, 128, 239, 200), (1, 128, 120, 100), (1, 512, 120, 100), (1, 256, 120, 100), (1, 256, 60, 50), (1, 1024, 60, 50), (1, 512, 60, 50), (1, 512, 30, 25), (1, 2048, 30, 25), (1, 64, 583, 400), (1, 64, 292, 200), (1, 256, 292, 200), (1, 128, 292, 200), (1, 128, 146, 100), (1, 512, 146, 100), (1, 256, 146, 100), (1, 64, 400, 562), (1, 64, 200, 281), (1, 256, 200, 281), (1, 128, 200, 281), (1, 64, 667, 394), (1, 64, 334, 197), (1, 256, 334, 197), (1, 128, 334, 197), (1, 128, 167, 99), (1, 512, 167, 99), (1, 256, 167, 99), (1, 64, 637, 400), (1, 64, 319, 200), (1, 256, 319, 200), (1, 128, 319, 200), (1, 128, 160, 100), (1, 512, 160, 100), (1, 256, 160, 100), (1, 64, 614, 400), (1, 64, 565, 400), (1, 64, 283, 200), (1, 256, 283, 200), (1, 128, 283, 200), (1, 64, 482, 400), (1, 64, 241, 200), (1, 256, 241, 200), (1, 128, 241, 200), (1, 128, 121, 100), (1, 512, 121, 100), (1, 256, 121, 100), (1, 64, 412, 400), (1, 64, 206, 200), (1, 256, 206, 200), (1, 128, 206, 200), (1, 128, 103, 100), (1, 512, 103, 100), (1, 256, 103, 100), (1, 256, 52, 50), (1, 1024, 52, 50), (1, 512, 52, 50), (1, 64, 400, 585), (1, 64, 200, 293), (1, 256, 200, 293), (1, 128, 200, 293), (1, 64, 405, 400), (1, 64, 203, 200), (1, 256, 203, 200), (1, 128, 203, 200), (1, 128, 102, 100), (1, 512, 102, 100), (1, 256, 102, 100), (1, 64, 400, 619), (1, 64, 400, 513), (1, 64, 200, 257), (1, 256, 200, 257), (1, 128, 200, 257), (1, 64, 400, 428), (1, 64, 200, 214), (1, 256, 200, 214), (1, 128, 200, 214), (1, 128, 100, 107), (1, 512, 100, 107), (1, 256, 100, 107), (1, 64, 521, 400), (1, 64, 261, 200), (1, 256, 261, 200), (1, 128, 261, 200), (1, 128, 131, 100), (1, 512, 131, 100), (1, 256, 131, 100), (1, 64, 400, 667), (1, 64, 386, 667), (1, 64, 193, 334), (1, 256, 193, 334), (1, 128, 193, 334), (1, 64, 400, 586), (1, 64, 400, 574), (1, 64, 400, 515), (1, 64, 400, 508), (1, 64, 400, 579), (1, 64, 200, 290), (1, 256, 200, 290), (1, 128, 200, 290), (1, 64, 400, 552), (1, 64, 200, 276), (1, 256, 200, 276), (1, 128, 200, 276), (1, 128, 100, 138), (1, 512, 100, 138), (1, 256, 100, 138), (1, 64, 400, 488), (1, 64, 200, 244), (1, 256, 200, 244), (1, 128, 200, 244), (1, 64, 546, 400), (1, 64, 273, 200), (1, 256, 273, 200), (1, 128, 273, 200), (1, 128, 137, 100), (1, 512, 137, 100), (1, 256, 137, 100), (1, 64, 367, 667), (1, 64, 184, 334), (1, 256, 184, 334), (1, 128, 184, 334), (1, 128, 92, 167), (1, 512, 92, 167), (1, 256, 92, 167), (1, 256, 46, 84), (1, 1024, 46, 84), (1, 512, 46, 84), (1, 64, 409, 400), (1, 64, 205, 200), (1, 256, 205, 200), (1, 128, 205, 200), (1, 64, 400, 548), (1, 64, 402, 400), (1, 64, 201, 200), (1, 256, 201, 200), (1, 128, 201, 200), (1, 64, 400, 553), (1, 64, 400, 623), (1, 64, 200, 312), (1, 256, 200, 312), (1, 128, 200, 312), (1, 64, 351, 667), (1, 64, 176, 334), (1, 256, 176, 334), (1, 128, 176, 334), (1, 64, 400, 569), (1, 64, 531, 400), (1, 64, 610, 400), (1, 64, 305, 200), (1, 256, 305, 200), (1, 128, 305, 200), (1, 128, 153, 100), (1, 512, 153, 100), (1, 256, 153, 100), (1, 64, 325, 667), (1, 64, 163, 334), (1, 256, 163, 334), (1, 128, 163, 334), (1, 64, 400, 546), (1, 64, 629, 400), (1, 64, 315, 200), (1, 256, 315, 200), (1, 128, 315, 200), (1, 128, 158, 100), (1, 512, 158, 100), (1, 256, 158, 100), (1, 256, 79, 50), (1, 1024, 79, 50), (1, 512, 79, 50), (1, 64, 400, 596), (1, 64, 395, 667), (1, 64, 198, 334), (1, 256, 198, 334), (1, 128, 198, 334), (1, 128, 99, 167), (1, 512, 99, 167), (1, 256, 99, 167), (1, 64, 340, 667), (1, 64, 170, 334), (1, 256, 170, 334), (1, 128, 170, 334), (1, 128, 85, 167), (1, 512, 85, 167), (1, 256, 85, 167), (1, 256, 43, 84), (1, 1024, 43, 84), (1, 512, 43, 84), (1, 64, 400, 423), (1, 64, 200, 212), (1, 256, 200, 212), (1, 128, 200, 212), (1, 128, 100, 106), (1, 512, 100, 106), (1, 256, 100, 106), (1, 64, 554, 400), (1, 64, 277, 200), (1, 256, 277, 200), (1, 128, 277, 200), (1, 64, 481, 400), (1, 64, 176, 667), (1, 64, 88, 334), (1, 256, 88, 334), (1, 128, 88, 334), (1, 128, 44, 167), (1, 512, 44, 167), (1, 256, 44, 167), (1, 256, 22, 84), (1, 1024, 22, 84), (1, 512, 22, 84), (1, 512, 11, 42), (1, 2048, 11, 42), (462, 1, 2048), (1, 64, 400, 482), (1, 64, 200, 241), (1, 256, 200, 241), (1, 128, 200, 241), (1, 64, 400, 523), (1, 64, 200, 262), (1, 256, 200, 262), (1, 128, 200, 262), (1, 128, 100, 131), (1, 512, 100, 131), (1, 256, 100, 131), (1, 64, 400, 537), (1, 64, 400, 450), (1, 64, 200, 225), (1, 256, 200, 225), (1, 128, 200, 225), (1, 128, 100, 113), (1, 512, 100, 113), (1, 256, 100, 113), (1, 64, 400, 492), (1, 64, 200, 246), (1, 256, 200, 246), (1, 128, 200, 246), (1, 128, 100, 123), (1, 512, 100, 123), (1, 256, 100, 123), (1, 64, 558, 400), (1, 64, 279, 200), (1, 256, 279, 200), (1, 128, 279, 200), (1, 64, 397, 667), (1, 64, 199, 334), (1, 256, 199, 334), (1, 128, 199, 334), (1, 64, 539, 400), (1, 64, 400, 421), (1, 64, 200, 211), (1, 256, 200, 211), (1, 128, 200, 211), (1, 64, 400, 491), (1, 64, 400, 458), (1, 64, 200, 229), (1, 256, 200, 229), (1, 128, 200, 229), (1, 128, 100, 115), (1, 512, 100, 115), (1, 256, 100, 115), (1, 64, 400, 527), (1, 64, 200, 264), (1, 256, 200, 264), (1, 128, 200, 264), (1, 64, 400, 504), (1, 64, 200, 252), (1, 256, 200, 252), (1, 128, 200, 252), (1, 64, 400, 551), (1, 64, 197, 667), (1, 64, 99, 334), (1, 256, 99, 334), (1, 128, 99, 334), (1, 128, 50, 167), (1, 512, 50, 167), (1, 256, 50, 167), (1, 256, 25, 84), (1, 1024, 25, 84), (1, 512, 25, 84), (1, 512, 13, 42), (1, 2048, 13, 42), (546, 1, 2048), (1, 64, 530, 400), (1, 64, 265, 200), (1, 256, 265, 200), (1, 128, 265, 200), (1, 64, 667, 309), (1, 64, 334, 155), (1, 256, 334, 155), (1, 128, 334, 155), (1, 128, 167, 78), (1, 512, 167, 78), (1, 256, 167, 78), (1, 256, 84, 39), (1, 1024, 84, 39), (1, 512, 84, 39), (1, 64, 582, 400), (1, 64, 291, 200), (1, 256, 291, 200), (1, 128, 291, 200), (1, 64, 596, 400), (1, 64, 226, 667), (1, 64, 113, 334), (1, 256, 113, 334), (1, 128, 113, 334), (1, 128, 57, 167), (1, 512, 57, 167), (1, 256, 57, 167), (1, 256, 29, 84), (1, 1024, 29, 84), (1, 512, 29, 84), (1, 512, 15, 42), (1, 2048, 15, 42), (630, 1, 2048), (1, 64, 364, 667), (1, 64, 182, 334), (1, 256, 182, 334), (1, 128, 182, 334), (1, 128, 91, 167), (1, 512, 91, 167), (1, 256, 91, 167), (1, 64, 667, 387), (1, 64, 334, 194), (1, 256, 334, 194), (1, 128, 334, 194), (1, 128, 167, 97), (1, 512, 167, 97), (1, 256, 167, 97), (1, 256, 84, 49), (1, 1024, 84, 49), (1, 512, 84, 49), (1, 64, 400, 434), (1, 64, 200, 217), (1, 256, 200, 217), (1, 128, 200, 217), (1, 128, 100, 109), (1, 512, 100, 109), (1, 256, 100, 109), (1, 256, 50, 55), (1, 1024, 50, 55), (1, 512, 50, 55), (1, 64, 314, 667), (1, 64, 157, 334), (1, 256, 157, 334), (1, 128, 157, 334), (1, 128, 79, 167), (1, 512, 79, 167), (1, 256, 79, 167), (1, 256, 40, 84), (1, 1024, 40, 84), (1, 512, 40, 84), (1, 64, 301, 667), (1, 64, 400, 655), (1, 64, 200, 328), (1, 256, 200, 328), (1, 128, 200, 328), (1, 64, 607, 400), (1, 64, 304, 200), (1, 256, 304, 200), (1, 128, 304, 200), (1, 64, 553, 400), (1, 64, 407, 400), (1, 64, 204, 200), (1, 256, 204, 200), (1, 128, 204, 200), (1, 64, 474, 400), (1, 64, 237, 200), (1, 256, 237, 200), (1, 128, 237, 200), (1, 128, 119, 100), (1, 512, 119, 100), (1, 256, 119, 100), (1, 64, 383, 667), (1, 64, 192, 334), (1, 256, 192, 334), (1, 128, 192, 334), (1, 64, 547, 400), (1, 64, 274, 200), (1, 256, 274, 200), (1, 128, 274, 200), (1, 64, 379, 667), (1, 64, 190, 334), (1, 256, 190, 334), (1, 128, 190, 334), (1, 128, 95, 167), (1, 512, 95, 167), (1, 256, 95, 167), (1, 64, 608, 400), (1, 64, 628, 400), (1, 64, 314, 200), (1, 256, 314, 200), (1, 128, 314, 200), (1, 128, 157, 100), (1, 512, 157, 100), (1, 256, 157, 100), (1, 64, 400, 610), (1, 64, 200, 305), (1, 256, 200, 305), (1, 128, 200, 305), (1, 64, 557, 400), (1, 64, 400, 489), (1, 64, 200, 245), (1, 256, 200, 245), (1, 128, 200, 245), (1, 64, 507, 400), (1, 64, 254, 200), (1, 256, 254, 200), (1, 128, 254, 200), (1, 128, 127, 100), (1, 512, 127, 100), (1, 256, 127, 100), (1, 256, 64, 50), (1, 1024, 64, 50), (1, 512, 64, 50), (1, 64, 400, 539), (1, 64, 400, 563), (1, 64, 400, 521), (1, 64, 200, 261), (1, 256, 200, 261), (1, 128, 200, 261), (1, 64, 394, 667), (1, 64, 197, 334), (1, 256, 197, 334), (1, 128, 197, 334), (1, 64, 526, 400), (1, 64, 400, 510), (1, 64, 200, 255), (1, 256, 200, 255), (1, 128, 200, 255), (1, 64, 400, 522), (1, 64, 400, 481), (1, 64, 400, 486), (1, 64, 389, 667), (1, 64, 195, 334), (1, 256, 195, 334), (1, 128, 195, 334), (1, 128, 98, 167), (1, 512, 98, 167), (1, 256, 98, 167), (1, 64, 400, 437), (1, 64, 200, 219), (1, 256, 200, 219), (1, 128, 200, 219), (1, 128, 100, 110), (1, 512, 100, 110), (1, 256, 100, 110), (1, 64, 529, 400), (1, 64, 400, 426), (1, 64, 200, 213), (1, 256, 200, 213), (1, 128, 200, 213), (1, 64, 626, 400), (1, 64, 313, 200), (1, 256, 313, 200), (1, 128, 313, 200), (1, 64, 316, 667), (1, 64, 158, 334), (1, 256, 158, 334), (1, 128, 158, 334), (1, 64, 400, 613), (1, 64, 200, 307), (1, 256, 200, 307), (1, 128, 200, 307), (1, 64, 591, 400), (1, 64, 296, 200), (1, 256, 296, 200), (1, 128, 296, 200), (1, 128, 148, 100), (1, 512, 148, 100), (1, 256, 148, 100), (1, 64, 346, 667), (1, 64, 400, 457), (1, 64, 548, 400), (1, 64, 400, 577), (1, 64, 393, 667), (1, 64, 450, 400), (1, 64, 225, 200), (1, 256, 225, 200), (1, 128, 225, 200), (1, 128, 113, 100), (1, 512, 113, 100), (1, 256, 113, 100), (1, 256, 57, 50), (1, 1024, 57, 50), (1, 512, 57, 50), (1, 512, 29, 25), (1, 2048, 29, 25), (1, 64, 665, 400), (1, 64, 333, 200), (1, 256, 333, 200), (1, 128, 333, 200), (1, 64, 475, 400), (1, 64, 238, 200), (1, 256, 238, 200), (1, 128, 238, 200), (1, 64, 400, 567), (1, 64, 400, 528), (1, 64, 400, 524), (1, 64, 424, 400), (1, 64, 212, 200), (1, 256, 212, 200), (1, 128, 212, 200), (1, 128, 106, 100), (1, 512, 106, 100), (1, 256, 106, 100), (1, 256, 53, 50), (1, 1024, 53, 50), (1, 512, 53, 50), (1, 64, 667, 319), (1, 64, 334, 160), (1, 256, 334, 160), (1, 128, 334, 160), (1, 64, 465, 400), (1, 64, 233, 200), (1, 256, 233, 200), (1, 128, 233, 200), (1, 128, 117, 100), (1, 512, 117, 100), (1, 256, 117, 100), (1, 256, 59, 50), (1, 1024, 59, 50), (1, 512, 59, 50), (1, 64, 410, 400), (1, 64, 468, 400), (1, 64, 234, 200), (1, 256, 234, 200), (1, 128, 234, 200), (1, 64, 544, 400), (1, 64, 272, 200), (1, 256, 272, 200), (1, 128, 272, 200), (1, 128, 136, 100), (1, 512, 136, 100), (1, 256, 136, 100), (1, 64, 343, 667), (1, 64, 172, 334), (1, 256, 172, 334), (1, 128, 172, 334), (1, 128, 86, 167), (1, 512, 86, 167), (1, 256, 86, 167), (1, 64, 171, 667), (1, 64, 86, 334), (1, 256, 86, 334), (1, 128, 86, 334), (1, 128, 43, 167), (1, 512, 43, 167), (1, 256, 43, 167), (1, 64, 577, 400), (1, 64, 440, 400), (1, 64, 377, 667), (1, 64, 189, 334), (1, 256, 189, 334), (1, 128, 189, 334), (1, 64, 400, 476), (1, 64, 200, 238), (1, 256, 200, 238), (1, 128, 200, 238), (1, 64, 400, 557), (1, 64, 667, 348), (1, 64, 334, 174), (1, 256, 334, 174), (1, 128, 334, 174), (1, 128, 167, 87), (1, 512, 167, 87), (1, 256, 167, 87), (1, 256, 84, 44), (1, 1024, 84, 44), (1, 512, 84, 44), (1, 512, 42, 22), (1, 2048, 42, 22), (1, 64, 459, 400), (1, 64, 230, 200), (1, 256, 230, 200), (1, 128, 230, 200), (1, 128, 115, 100), (1, 512, 115, 100), (1, 256, 115, 100), (1, 256, 58, 50), (1, 1024, 58, 50), (1, 512, 58, 50), (1, 64, 312, 667), (1, 64, 156, 334), (1, 256, 156, 334), (1, 128, 156, 334), (1, 128, 78, 167), (1, 512, 78, 167), (1, 256, 78, 167), (1, 64, 545, 400), (1, 64, 303, 667), (1, 64, 152, 334), (1, 256, 152, 334), (1, 128, 152, 334), (1, 64, 400, 424), (1, 64, 400, 602), (1, 64, 248, 667), (1, 64, 124, 334), (1, 256, 124, 334), (1, 128, 124, 334), (1, 128, 62, 167), (1, 512, 62, 167), (1, 256, 62, 167), (1, 256, 31, 84), (1, 1024, 31, 84), (1, 512, 31, 84), (1, 512, 16, 42), (1, 2048, 16, 42), (672, 1, 2048), (1, 64, 517, 400), (1, 64, 327, 667), (1, 64, 451, 400), (1, 64, 226, 200), (1, 256, 226, 200), (1, 128, 226, 200), (1, 64, 400, 662), (1, 64, 200, 331), (1, 256, 200, 331), (1, 128, 200, 331), (1, 64, 447, 400), (1, 64, 224, 200), (1, 256, 224, 200), (1, 128, 224, 200), (1, 128, 112, 100), (1, 512, 112, 100), (1, 256, 112, 100), (1, 64, 166, 667), (1, 64, 83, 334), (1, 256, 83, 334), (1, 128, 83, 334), (1, 128, 42, 167), (1, 512, 42, 167), (1, 256, 42, 167), (1, 256, 21, 84), (1, 1024, 21, 84), (1, 512, 21, 84), (1, 64, 400, 511), (1, 64, 317, 667), (1, 64, 159, 334), (1, 256, 159, 334), (1, 128, 159, 334), (1, 128, 80, 167), (1, 512, 80, 167), (1, 256, 80, 167), (1, 64, 332, 667), (1, 64, 400, 436), (1, 64, 200, 218), (1, 256, 200, 218), (1, 128, 200, 218), (1, 64, 466, 400), (1, 64, 400, 607), (1, 64, 494, 400), (1, 64, 247, 200), (1, 256, 247, 200), (1, 128, 247, 200), (1, 128, 124, 100), (1, 512, 124, 100), (1, 256, 124, 100), (1, 64, 667, 373), (1, 64, 502, 400), (1, 64, 400, 514), (1, 64, 457, 400), (1, 64, 229, 200), (1, 256, 229, 200), (1, 128, 229, 200), (1, 64, 400, 550), (1, 64, 200, 275), (1, 256, 200, 275), (1, 128, 200, 275), (1, 64, 400, 665), (1, 64, 200, 333), (1, 256, 200, 333), (1, 128, 200, 333), (1, 64, 667, 388), (1, 64, 400, 648), (1, 64, 366, 667), (1, 64, 183, 334), (1, 256, 183, 334), (1, 128, 183, 334), (1, 64, 322, 667), (1, 64, 161, 334), (1, 256, 161, 334), (1, 128, 161, 334), (1, 128, 81, 167), (1, 512, 81, 167), (1, 256, 81, 167), (1, 64, 400, 467), (1, 64, 200, 234), (1, 256, 200, 234), (1, 128, 200, 234), (1, 64, 400, 447), (1, 64, 200, 224), (1, 256, 200, 224), (1, 128, 200, 224), (1, 64, 400, 641), (1, 64, 667, 343), (1, 64, 334, 172), (1, 256, 334, 172), (1, 128, 334, 172), (1, 128, 167, 86), (1, 512, 167, 86), (1, 256, 167, 86), (1, 256, 84, 43), (1, 1024, 84, 43), (1, 512, 84, 43), (1, 64, 293, 667), (1, 64, 147, 334), (1, 256, 147, 334), (1, 128, 147, 334), (1, 128, 74, 167), (1, 512, 74, 167), (1, 256, 74, 167), (1, 256, 37, 84), (1, 1024, 37, 84), (1, 512, 37, 84), (1, 64, 400, 440), (1, 64, 200, 220), (1, 256, 200, 220), (1, 128, 200, 220), (1, 64, 619, 400), (1, 64, 310, 200), (1, 256, 310, 200), (1, 128, 310, 200), (1, 128, 155, 100), (1, 512, 155, 100), (1, 256, 155, 100), (1, 64, 400, 592), (1, 64, 392, 667), (1, 64, 196, 334), (1, 256, 196, 334), (1, 128, 196, 334), (1, 64, 403, 400), (1, 64, 189, 667), (1, 64, 95, 334), (1, 256, 95, 334), (1, 128, 95, 334), (1, 128, 48, 167), (1, 512, 48, 167), (1, 256, 48, 167), (1, 256, 24, 84), (1, 1024, 24, 84), (1, 512, 24, 84), (1, 512, 12, 42), (1, 2048, 12, 42), (504, 1, 2048), (1, 64, 522, 400), (1, 64, 400, 658), (1, 64, 640, 400), (1, 64, 320, 200), (1, 256, 320, 200), (1, 128, 320, 200), (1, 64, 400, 617), (1, 64, 200, 309), (1, 256, 200, 309), (1, 128, 200, 309), (1, 64, 400, 463), (1, 64, 200, 232), (1, 256, 200, 232), (1, 128, 200, 232), (1, 64, 506, 400), (1, 64, 253, 200), (1, 256, 253, 200), (1, 128, 253, 200), (1, 64, 369, 667), (1, 64, 185, 334), (1, 256, 185, 334), (1, 128, 185, 334), (1, 64, 400, 499), (1, 64, 330, 667), (1, 64, 400, 505), (1, 64, 200, 253), (1, 256, 200, 253), (1, 128, 200, 253), (1, 64, 378, 667), (1, 64, 497, 400), (1, 64, 249, 200), (1, 256, 249, 200), (1, 128, 249, 200), (1, 64, 462, 400), (1, 64, 231, 200), (1, 256, 231, 200), (1, 128, 231, 200), (1, 128, 116, 100), (1, 512, 116, 100), (1, 256, 116, 100), (1, 64, 574, 400), (1, 64, 400, 427), (1, 64, 400, 475), (1, 64, 256, 667), (1, 64, 128, 334), (1, 256, 128, 334), (1, 128, 128, 334), (1, 128, 64, 167), (1, 512, 64, 167), (1, 256, 64, 167), (1, 256, 32, 84), (1, 1024, 32, 84), (1, 512, 32, 84), (1, 64, 437, 400), (1, 64, 219, 200), (1, 256, 219, 200), (1, 128, 219, 200), (1, 64, 398, 667), (1, 64, 667, 395), (1, 64, 334, 198), (1, 256, 334, 198), (1, 128, 334, 198), (1, 64, 400, 412), (1, 64, 200, 206), (1, 256, 200, 206), (1, 128, 200, 206), (1, 128, 100, 103), (1, 512, 100, 103), (1, 256, 100, 103), (1, 256, 50, 52), (1, 1024, 50, 52), (1, 512, 50, 52), (1, 64, 400, 518), (1, 64, 200, 259), (1, 256, 200, 259), (1, 128, 200, 259), (1, 64, 400, 614), (1, 64, 581, 400), (1, 64, 401, 400), (1, 64, 543, 400), (1, 64, 650, 400), (1, 64, 325, 200), (1, 256, 325, 200), (1, 128, 325, 200), (1, 128, 163, 100), (1, 512, 163, 100), (1, 256, 163, 100), (1, 256, 82, 50), (1, 1024, 82, 50), (1, 512, 82, 50), (1, 64, 508, 400), (1, 64, 667, 256), (1, 64, 334, 128), (1, 256, 334, 128), (1, 128, 334, 128), (1, 128, 167, 64), (1, 512, 167, 64), (1, 256, 167, 64), (1, 256, 84, 32), (1, 1024, 84, 32), (1, 512, 84, 32), (1, 512, 42, 16), (1, 2048, 42, 16), (1, 64, 400, 459), (1, 64, 200, 230), (1, 256, 200, 230), (1, 128, 200, 230), (1, 64, 653, 400), (1, 64, 327, 200), (1, 256, 327, 200), (1, 128, 327, 200), (1, 128, 164, 100), (1, 512, 164, 100), (1, 256, 164, 100), (1, 64, 648, 400), (1, 64, 324, 200), (1, 256, 324, 200), (1, 128, 324, 200), (1, 128, 162, 100), (1, 512, 162, 100), (1, 256, 162, 100), (1, 64, 400, 606), (1, 64, 400, 503), (1, 64, 400, 517), (1, 64, 326, 667), (1, 64, 385, 667), (1, 64, 400, 444), (1, 64, 200, 222), (1, 256, 200, 222), (1, 128, 200, 222), (1, 128, 100, 111), (1, 512, 100, 111), (1, 256, 100, 111), (1, 64, 400, 430), (1, 64, 200, 215), (1, 256, 200, 215), (1, 128, 200, 215), (1, 64, 400, 443), (1, 64, 449, 400), (1, 64, 400, 484), (1, 64, 471, 400), (1, 64, 236, 200), (1, 256, 236, 200), (1, 128, 236, 200), (1, 128, 118, 100), (1, 512, 118, 100), (1, 256, 118, 100), (1, 64, 484, 400), (1, 64, 242, 200), (1, 256, 242, 200), (1, 128, 242, 200), (1, 64, 512, 400), (1, 64, 256, 200), (1, 256, 256, 200), (1, 128, 256, 200), (1, 128, 128, 100), (1, 512, 128, 100), (1, 256, 128, 100), (1, 64, 202, 667), (1, 64, 101, 334), (1, 256, 101, 334), (1, 128, 101, 334), (1, 128, 51, 167), (1, 512, 51, 167), (1, 256, 51, 167), (1, 256, 26, 84), (1, 1024, 26, 84), (1, 512, 26, 84), (1, 64, 370, 667), (1, 64, 400, 497), (1, 64, 509, 400), (1, 64, 255, 200), (1, 256, 255, 200), (1, 128, 255, 200), (1, 64, 181, 667), (1, 64, 91, 334), (1, 256, 91, 334), (1, 128, 91, 334), (1, 128, 46, 167), (1, 512, 46, 167), (1, 256, 46, 167), (1, 256, 23, 84), (1, 1024, 23, 84), (1, 512, 23, 84), (1, 64, 253, 667), (1, 64, 127, 334), (1, 256, 127, 334), (1, 128, 127, 334), (1, 64, 223, 667), (1, 64, 112, 334), (1, 256, 112, 334), (1, 128, 112, 334), (1, 128, 56, 167), (1, 512, 56, 167), (1, 256, 56, 167), (1, 256, 28, 84), (1, 1024, 28, 84), (1, 512, 28, 84), (1, 512, 14, 42), (1, 2048, 14, 42), (588, 1, 2048), (1, 64, 438, 400), (1, 64, 528, 400), (1, 64, 425, 400), (1, 64, 213, 200), (1, 256, 213, 200), (1, 128, 213, 200), (1, 64, 306, 667), (1, 64, 592, 400), (1, 64, 400, 509), (1, 64, 647, 400), (1, 64, 473, 400), (1, 64, 363, 667), (1, 64, 239, 667), (1, 64, 120, 334), (1, 256, 120, 334), (1, 128, 120, 334), (1, 128, 60, 167), (1, 512, 60, 167), (1, 256, 60, 167), (1, 256, 30, 84), (1, 1024, 30, 84), (1, 512, 30, 84), (1, 64, 400, 556), (1, 64, 200, 278), (1, 256, 200, 278), (1, 128, 200, 278), (1, 64, 352, 667), (1, 64, 611, 400), (1, 64, 306, 200), (1, 256, 306, 200), (1, 128, 306, 200), (1, 64, 400, 502), (1, 64, 486, 400), (1, 64, 467, 400), (1, 64, 359, 667), (1, 64, 180, 334), (1, 256, 180, 334), (1, 128, 180, 334), (1, 64, 411, 400), (1, 64, 427, 400), (1, 64, 400, 408), (1, 64, 200, 204), (1, 256, 200, 204), (1, 128, 200, 204), (1, 64, 324, 667), (1, 64, 162, 334), (1, 256, 162, 334), (1, 128, 162, 334), (1, 64, 606, 400), (1, 64, 667, 337), (1, 64, 334, 169), (1, 256, 334, 169), (1, 128, 334, 169), (1, 128, 167, 85), (1, 512, 167, 85), (1, 256, 167, 85), (1, 64, 436, 400), (1, 64, 278, 667), (1, 64, 139, 334), (1, 256, 139, 334), (1, 128, 139, 334), (1, 128, 70, 167), (1, 512, 70, 167), (1, 256, 70, 167), (1, 64, 421, 400), (1, 64, 211, 200), (1, 256, 211, 200), (1, 128, 211, 200), (1, 64, 454, 400), (1, 64, 227, 200), (1, 256, 227, 200), (1, 128, 227, 200), (1, 128, 114, 100), (1, 512, 114, 100), (1, 256, 114, 100), (1, 64, 667, 351), (1, 64, 334, 176), (1, 256, 334, 176), (1, 128, 334, 176), (1, 128, 167, 88), (1, 512, 167, 88), (1, 256, 167, 88), (1, 64, 222, 667), (1, 64, 111, 334), (1, 256, 111, 334), (1, 128, 111, 334), (1, 64, 461, 400), (1, 64, 400, 461), (1, 64, 400, 496), (1, 64, 400, 543), (1, 64, 651, 400), (1, 64, 326, 200), (1, 256, 326, 200), (1, 128, 326, 200), (1, 64, 472, 400), (1, 64, 400, 445), (1, 64, 400, 627), (1, 64, 400, 454), (1, 64, 541, 400), (1, 64, 271, 200), (1, 256, 271, 200), (1, 128, 271, 200), (1, 64, 634, 400), (1, 64, 317, 200), (1, 256, 317, 200), (1, 128, 317, 200), (1, 64, 564, 400), (1, 64, 282, 200), (1, 256, 282, 200), (1, 128, 282, 200), (1, 128, 141, 100), (1, 512, 141, 100), (1, 256, 141, 100), (1, 64, 593, 400), (1, 64, 264, 667), (1, 64, 132, 334), (1, 256, 132, 334), (1, 128, 132, 334), (1, 128, 66, 167), (1, 512, 66, 167), (1, 256, 66, 167), (1, 256, 33, 84), (1, 1024, 33, 84), (1, 512, 33, 84), (1, 512, 17, 42), (1, 2048, 17, 42), (714, 1, 2048), (1, 64, 511, 400), (1, 64, 587, 400), (1, 64, 294, 200), (1, 256, 294, 200), (1, 128, 294, 200), (1, 64, 667, 368), (1, 64, 334, 184), (1, 256, 334, 184), (1, 128, 334, 184), (1, 128, 167, 92), (1, 512, 167, 92), (1, 256, 167, 92), (1, 256, 84, 46), (1, 1024, 84, 46), (1, 512, 84, 46), (1, 512, 42, 23), (1, 2048, 42, 23), (1, 64, 391, 667), (1, 64, 617, 400), (1, 64, 309, 200), (1, 256, 309, 200), (1, 128, 309, 200)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'max_pool2d': dict(
        name=["max_pool2d"],
        para=dict(
            kernel_size=[3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
            stride=[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
            padding=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            dilation=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            ceil_mode=[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False],
            return_indices=[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "requires_grad": [True],
                    "shape": [(2, 64, 560, 400), (1, 64, 400, 600), (1, 64, 400, 612), (1, 64, 400, 598), (1, 64, 400, 534), (1, 64, 400, 660), (1, 64, 400, 501), (1, 64, 600, 400), (1, 64, 534, 400), (1, 64, 400, 601), (1, 64, 570, 400), (1, 64, 400, 473), (1, 64, 400, 512), (1, 64, 400, 554), (1, 64, 400, 603), (1, 64, 434, 400), (1, 64, 404, 400), (1, 64, 400, 640), (1, 64, 400, 593), (1, 64, 387, 667), (1, 64, 400, 570), (1, 64, 603, 400), (1, 64, 441, 400), (1, 64, 375, 667), (1, 64, 400, 400), (1, 64, 642, 400), (1, 64, 400, 604), (1, 64, 400, 564), (1, 64, 400, 582), (1, 64, 400, 565), (1, 64, 400, 599), (1, 64, 382, 667), (1, 64, 597, 400), (1, 64, 601, 400), (1, 64, 400, 583), (1, 64, 532, 400), (1, 64, 400, 650), (1, 64, 302, 667), (1, 64, 400, 639), (1, 64, 602, 400), (1, 64, 400, 657), (1, 64, 400, 536), (1, 64, 616, 400), (1, 64, 598, 400), (1, 64, 400, 578), (1, 64, 560, 400), (1, 64, 400, 597), (1, 64, 400, 533), (1, 64, 400, 530), (1, 64, 400, 405), (1, 64, 400, 526), (1, 64, 400, 535), (1, 64, 381, 667), (1, 64, 604, 400), (1, 64, 400, 500), (1, 64, 400, 568), (1, 64, 400, 634), (1, 64, 400, 620), (1, 64, 400, 560), (1, 64, 400, 472), (1, 64, 490, 400), (1, 64, 400, 540), (1, 64, 376, 667), (1, 64, 667, 376), (1, 64, 536, 400), (1, 64, 400, 587), (1, 64, 578, 400), (1, 64, 400, 645), (1, 64, 400, 621), (1, 64, 371, 667), (1, 64, 400, 647), (1, 64, 400, 605), (1, 64, 400, 485), (1, 64, 400, 498), (1, 64, 635, 400), (1, 64, 400, 652), (1, 64, 345, 667), (1, 64, 428, 400), (1, 64, 400, 626), (1, 64, 400, 547), (1, 64, 400, 532), (1, 64, 623, 400), (1, 64, 400, 420), (1, 64, 485, 400), (1, 64, 513, 400), (1, 64, 667, 374), (1, 64, 400, 538), (1, 64, 573, 400), (1, 64, 559, 400), (1, 64, 305, 667), (1, 64, 667, 399), (1, 64, 538, 400), (1, 64, 430, 400), (1, 64, 400, 531), (1, 64, 400, 635), (1, 64, 358, 667), (1, 64, 400, 544), (1, 64, 400, 529), (1, 64, 328, 667), (1, 64, 613, 400), (1, 64, 400, 401), (1, 64, 501, 400), (1, 64, 400, 642), (1, 64, 400, 625), (1, 64, 400, 541), (1, 64, 400, 590), (1, 64, 400, 520), (1, 64, 572, 400), (1, 64, 400, 462), (1, 64, 400, 455), (1, 64, 400, 545), (1, 64, 400, 495), (1, 64, 435, 400), (1, 64, 667, 299), (1, 64, 400, 608), (1, 64, 555, 400), (1, 64, 400, 653), (1, 64, 660, 400), (1, 64, 500, 400), (1, 64, 595, 400), (1, 64, 585, 400), (1, 64, 400, 446), (1, 64, 400, 453), (1, 64, 400, 559), (1, 64, 331, 667), (1, 64, 567, 400), (1, 64, 525, 400), (1, 64, 400, 595), (1, 64, 400, 589), (1, 64, 274, 667), (1, 64, 400, 663), (1, 64, 400, 478), (1, 64, 518, 400), (1, 64, 349, 667), (1, 64, 667, 400), (1, 64, 334, 667), (1, 64, 400, 466), (1, 64, 400, 628), (1, 64, 400, 573), (1, 64, 400, 493), (1, 64, 400, 483), (1, 64, 540, 400), (1, 64, 605, 400), (1, 64, 667, 375), (1, 64, 399, 667), (1, 64, 400, 516), (1, 64, 400, 581), (1, 64, 374, 667), (1, 64, 599, 400), (1, 64, 329, 667), (1, 64, 400, 643), (1, 64, 373, 667), (1, 64, 400, 631), (1, 64, 400, 611), (1, 64, 442, 400), (1, 64, 439, 400), (1, 64, 400, 431), (1, 64, 400, 558), (1, 64, 400, 616), (1, 64, 400, 622), (1, 64, 357, 667), (1, 64, 489, 400), (1, 64, 594, 400), (1, 64, 492, 400), (1, 64, 432, 400), (1, 64, 400, 572), (1, 64, 537, 400), (1, 64, 527, 400), (1, 64, 504, 400), (1, 64, 503, 400), (1, 64, 400, 576), (1, 64, 443, 400), (1, 64, 667, 317), (1, 64, 400, 402), (1, 64, 535, 400), (1, 64, 400, 525), (1, 64, 400, 594), (1, 64, 552, 400), (1, 64, 275, 667), (1, 64, 400, 591), (1, 64, 400, 469), (1, 64, 400, 507), (1, 64, 478, 400), (1, 64, 583, 400), (1, 64, 400, 562), (1, 64, 667, 394), (1, 64, 637, 400), (1, 64, 614, 400), (1, 64, 565, 400), (1, 64, 482, 400), (1, 64, 412, 400), (1, 64, 400, 585), (1, 64, 405, 400), (1, 64, 400, 619), (1, 64, 400, 513), (1, 64, 400, 428), (1, 64, 521, 400), (1, 64, 400, 667), (1, 64, 386, 667), (1, 64, 400, 586), (1, 64, 400, 574), (1, 64, 400, 515), (1, 64, 400, 508), (1, 64, 400, 579), (1, 64, 400, 552), (1, 64, 400, 488), (1, 64, 546, 400), (1, 64, 367, 667), (1, 64, 409, 400), (1, 64, 400, 548), (1, 64, 402, 400), (1, 64, 400, 553), (1, 64, 400, 623), (1, 64, 351, 667), (1, 64, 400, 569), (1, 64, 531, 400), (1, 64, 610, 400), (1, 64, 325, 667), (1, 64, 400, 546), (1, 64, 629, 400), (1, 64, 400, 596), (1, 64, 395, 667), (1, 64, 340, 667), (1, 64, 400, 423), (1, 64, 554, 400), (1, 64, 481, 400), (1, 64, 176, 667), (1, 64, 400, 482), (1, 64, 400, 523), (1, 64, 400, 537), (1, 64, 400, 450), (1, 64, 400, 492), (1, 64, 558, 400), (1, 64, 397, 667), (1, 64, 539, 400), (1, 64, 400, 421), (1, 64, 400, 491), (1, 64, 400, 458), (1, 64, 400, 527), (1, 64, 400, 504), (1, 64, 400, 551), (1, 64, 197, 667), (1, 64, 530, 400), (1, 64, 667, 309), (1, 64, 582, 400), (1, 64, 596, 400), (1, 64, 226, 667), (1, 64, 364, 667), (1, 64, 667, 387), (1, 64, 400, 434), (1, 64, 314, 667), (1, 64, 301, 667), (1, 64, 400, 655), (1, 64, 607, 400), (1, 64, 553, 400), (1, 64, 407, 400), (1, 64, 474, 400), (1, 64, 383, 667), (1, 64, 547, 400), (1, 64, 379, 667), (1, 64, 608, 400), (1, 64, 628, 400), (1, 64, 400, 610), (1, 64, 557, 400), (1, 64, 400, 489), (1, 64, 507, 400), (1, 64, 400, 539), (1, 64, 400, 563), (1, 64, 400, 521), (1, 64, 394, 667), (1, 64, 526, 400), (1, 64, 400, 510), (1, 64, 400, 522), (1, 64, 400, 481), (1, 64, 400, 486), (1, 64, 389, 667), (1, 64, 400, 437), (1, 64, 529, 400), (1, 64, 400, 426), (1, 64, 626, 400), (1, 64, 316, 667), (1, 64, 400, 613), (1, 64, 591, 400), (1, 64, 346, 667), (1, 64, 400, 457), (1, 64, 548, 400), (1, 64, 400, 577), (1, 64, 393, 667), (1, 64, 450, 400), (1, 64, 665, 400), (1, 64, 475, 400), (1, 64, 400, 567), (1, 64, 400, 528), (1, 64, 400, 524), (1, 64, 424, 400), (1, 64, 667, 319), (1, 64, 465, 400), (1, 64, 410, 400), (1, 64, 468, 400), (1, 64, 544, 400), (1, 64, 343, 667), (1, 64, 171, 667), (1, 64, 577, 400), (1, 64, 440, 400), (1, 64, 377, 667), (1, 64, 400, 476), (1, 64, 400, 557), (1, 64, 667, 348), (1, 64, 459, 400), (1, 64, 312, 667), (1, 64, 545, 400), (1, 64, 303, 667), (1, 64, 400, 424), (1, 64, 400, 602), (1, 64, 248, 667), (1, 64, 517, 400), (1, 64, 327, 667), (1, 64, 451, 400), (1, 64, 400, 662), (1, 64, 447, 400), (1, 64, 166, 667), (1, 64, 400, 511), (1, 64, 317, 667), (1, 64, 332, 667), (1, 64, 400, 436), (1, 64, 466, 400), (1, 64, 400, 607), (1, 64, 494, 400), (1, 64, 667, 373), (1, 64, 502, 400), (1, 64, 400, 514), (1, 64, 457, 400), (1, 64, 400, 550), (1, 64, 400, 665), (1, 64, 667, 388), (1, 64, 400, 648), (1, 64, 366, 667), (1, 64, 322, 667), (1, 64, 400, 467), (1, 64, 400, 447), (1, 64, 400, 641), (1, 64, 667, 343), (1, 64, 293, 667), (1, 64, 400, 440), (1, 64, 619, 400), (1, 64, 400, 592), (1, 64, 392, 667), (1, 64, 403, 400), (1, 64, 189, 667), (1, 64, 522, 400), (1, 64, 400, 658), (1, 64, 640, 400), (1, 64, 400, 617), (1, 64, 400, 463), (1, 64, 506, 400), (1, 64, 369, 667), (1, 64, 400, 499), (1, 64, 330, 667), (1, 64, 400, 505), (1, 64, 378, 667), (1, 64, 497, 400), (1, 64, 462, 400), (1, 64, 574, 400), (1, 64, 400, 427), (1, 64, 400, 475), (1, 64, 256, 667), (1, 64, 437, 400), (1, 64, 398, 667), (1, 64, 667, 395), (1, 64, 400, 412), (1, 64, 400, 518), (1, 64, 400, 614), (1, 64, 581, 400), (1, 64, 401, 400), (1, 64, 543, 400), (1, 64, 650, 400), (1, 64, 508, 400), (1, 64, 667, 256), (1, 64, 400, 459), (1, 64, 653, 400), (1, 64, 648, 400), (1, 64, 400, 606), (1, 64, 400, 503), (1, 64, 400, 517), (1, 64, 326, 667), (1, 64, 385, 667), (1, 64, 400, 444), (1, 64, 400, 430), (1, 64, 400, 443), (1, 64, 449, 400), (1, 64, 400, 484), (1, 64, 471, 400), (1, 64, 484, 400), (1, 64, 512, 400), (1, 64, 202, 667), (1, 64, 370, 667), (1, 64, 400, 497), (1, 64, 509, 400), (1, 64, 181, 667), (1, 64, 253, 667), (1, 64, 223, 667), (1, 64, 438, 400), (1, 64, 528, 400), (1, 64, 425, 400), (1, 64, 306, 667), (1, 64, 592, 400), (1, 64, 400, 509), (1, 64, 647, 400), (1, 64, 473, 400), (1, 64, 363, 667), (1, 64, 239, 667), (1, 64, 400, 556), (1, 64, 352, 667), (1, 64, 611, 400), (1, 64, 400, 502), (1, 64, 486, 400), (1, 64, 467, 400), (1, 64, 359, 667), (1, 64, 411, 400), (1, 64, 427, 400), (1, 64, 400, 408), (1, 64, 324, 667), (1, 64, 606, 400), (1, 64, 667, 337), (1, 64, 436, 400), (1, 64, 278, 667), (1, 64, 421, 400), (1, 64, 454, 400), (1, 64, 667, 351), (1, 64, 222, 667), (1, 64, 461, 400), (1, 64, 400, 461), (1, 64, 400, 496), (1, 64, 400, 543), (1, 64, 651, 400), (1, 64, 472, 400), (1, 64, 400, 445), (1, 64, 400, 627), (1, 64, 400, 454), (1, 64, 541, 400), (1, 64, 634, 400), (1, 64, 564, 400), (1, 64, 593, 400), (1, 64, 264, 667), (1, 64, 511, 400), (1, 64, 587, 400), (1, 64, 667, 368), (1, 64, 391, 667), (1, 64, 617, 400)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'add': dict(
        name=["add"],
        is_inplace=[True],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 256, 280, 200), (2, 512, 140, 100), (2, 1024, 70, 50), (2, 2048, 35, 25), (16, 875, 875), (16, 100, 875), (1, 256, 200, 300), (1, 512, 100, 150), (1, 1024, 50, 75), (1, 2048, 25, 38), (8, 950, 950), (8, 100, 950), (1, 256, 200, 306), (1, 512, 100, 153), (1, 1024, 50, 77), (1, 2048, 25, 39), (8, 975, 975), (8, 100, 975), (1, 256, 200, 299), (1, 256, 200, 267), (1, 512, 100, 134), (1, 1024, 50, 67), (1, 2048, 25, 34), (8, 850, 850), (8, 100, 850), (1, 256, 200, 330), (1, 512, 100, 165), (1, 1024, 50, 83), (1, 2048, 25, 42), (8, 1050, 1050), (8, 100, 1050), (1, 256, 200, 251), (1, 512, 100, 126), (1, 1024, 50, 63), (1, 2048, 25, 32), (8, 800, 800), (8, 100, 800), (1, 256, 300, 200), (1, 512, 150, 100), (1, 1024, 75, 50), (1, 2048, 38, 25), (1, 256, 267, 200), (1, 512, 134, 100), (1, 1024, 67, 50), (1, 2048, 34, 25), (1, 256, 200, 301), (1, 512, 100, 151), (1, 1024, 50, 76), (1, 256, 285, 200), (1, 512, 143, 100), (1, 1024, 72, 50), (1, 2048, 36, 25), (8, 900, 900), (8, 100, 900), (1, 256, 200, 237), (1, 512, 100, 119), (1, 1024, 50, 60), (1, 2048, 25, 30), (8, 750, 750), (8, 100, 750), (1, 256, 200, 256), (1, 512, 100, 128), (1, 1024, 50, 64), (1, 256, 200, 277), (1, 512, 100, 139), (1, 1024, 50, 70), (1, 2048, 25, 35), (8, 875, 875), (8, 100, 875), (1, 256, 200, 302), (1, 256, 217, 200), (1, 512, 109, 100), (1, 1024, 55, 50), (1, 2048, 28, 25), (8, 700, 700), (8, 100, 700), (1, 256, 202, 200), (1, 512, 101, 100), (1, 1024, 51, 50), (1, 2048, 26, 25), (8, 650, 650), (8, 100, 650), (1, 256, 200, 320), (1, 512, 100, 160), (1, 1024, 50, 80), (1, 2048, 25, 40), (8, 1000, 1000), (8, 100, 1000), (1, 256, 200, 297), (1, 512, 100, 149), (1, 256, 194, 334), (1, 512, 97, 167), (1, 1024, 49, 84), (1, 256, 200, 285), (1, 512, 100, 143), (1, 1024, 50, 72), (1, 2048, 25, 36), (1, 256, 302, 200), (1, 512, 151, 100), (1, 1024, 76, 50), (1, 256, 221, 200), (1, 512, 111, 100), (1, 1024, 56, 50), (1, 256, 188, 334), (1, 512, 94, 167), (1, 1024, 47, 84), (1, 2048, 24, 42), (8, 1008, 1008), (8, 100, 1008), (1, 256, 200, 200), (1, 512, 100, 100), (1, 1024, 50, 50), (1, 2048, 25, 25), (8, 625, 625), (8, 100, 625), (1, 256, 321, 200), (1, 512, 161, 100), (1, 1024, 81, 50), (1, 2048, 41, 25), (8, 1025, 1025), (8, 100, 1025), (1, 256, 200, 282), (1, 512, 100, 141), (1, 1024, 50, 71), (1, 256, 200, 291), (1, 512, 100, 146), (1, 1024, 50, 73), (1, 2048, 25, 37), (8, 925, 925), (8, 100, 925), (1, 256, 200, 283), (1, 512, 100, 142), (1, 256, 191, 334), (1, 512, 96, 167), (1, 1024, 48, 84), (1, 256, 299, 200), (1, 256, 301, 200), (1, 256, 200, 292), (1, 256, 266, 200), (1, 512, 133, 100), (1, 256, 200, 325), (1, 512, 100, 163), (1, 1024, 50, 82), (1, 2048, 25, 41), (1, 256, 151, 334), (1, 512, 76, 167), (1, 1024, 38, 84), (1, 2048, 19, 42), (8, 798, 798), (8, 100, 798), (1, 256, 200, 329), (1, 256, 200, 268), (1, 256, 308, 200), (1, 512, 154, 100), (1, 1024, 77, 50), (1, 2048, 39, 25), (1, 256, 200, 289), (1, 512, 100, 145), (1, 256, 280, 200), (1, 512, 140, 100), (1, 1024, 70, 50), (1, 2048, 35, 25), (1, 256, 200, 265), (1, 512, 100, 133), (1, 256, 200, 203), (1, 512, 100, 102), (1, 1024, 50, 51), (1, 2048, 25, 26), (1, 256, 200, 263), (1, 512, 100, 132), (1, 1024, 50, 66), (1, 2048, 25, 33), (8, 825, 825), (8, 100, 825), (1, 256, 200, 250), (1, 512, 100, 125), (1, 256, 200, 284), (1, 256, 200, 317), (1, 512, 100, 159), (1, 256, 200, 310), (1, 512, 100, 155), (1, 1024, 50, 78), (1, 256, 200, 280), (1, 512, 100, 140), (1, 256, 200, 236), (1, 512, 100, 118), (1, 1024, 50, 59), (1, 256, 245, 200), (1, 512, 123, 100), (1, 1024, 62, 50), (1, 2048, 31, 25), (8, 775, 775), (8, 100, 775), (1, 256, 200, 270), (1, 512, 100, 135), (1, 1024, 50, 68), (1, 256, 334, 188), (1, 512, 167, 94), (1, 1024, 84, 47), (1, 2048, 42, 24), (1, 256, 268, 200), (1, 256, 200, 294), (1, 512, 100, 147), (1, 1024, 50, 74), (1, 256, 289, 200), (1, 512, 145, 100), (1, 1024, 73, 50), (1, 2048, 37, 25), (1, 256, 200, 323), (1, 512, 100, 162), (1, 1024, 50, 81), (1, 256, 200, 311), (1, 512, 100, 156), (1, 256, 186, 334), (1, 512, 93, 167), (1, 256, 200, 324), (1, 256, 200, 303), (1, 512, 100, 152), (1, 256, 200, 243), (1, 512, 100, 122), (1, 1024, 50, 61), (1, 2048, 25, 31), (1, 256, 200, 249), (1, 256, 318, 200), (1, 512, 159, 100), (1, 1024, 80, 50), (1, 2048, 40, 25), (1, 256, 200, 326), (1, 256, 173, 334), (1, 512, 87, 167), (1, 1024, 44, 84), (1, 2048, 22, 42), (8, 924, 924), (8, 100, 924), (1, 256, 214, 200), (1, 512, 107, 100), (1, 1024, 54, 50), (1, 2048, 27, 25), (8, 675, 675), (8, 100, 675), (1, 256, 200, 313), (1, 512, 100, 157), (1, 1024, 50, 79), (1, 256, 200, 274), (1, 512, 100, 137), (1, 1024, 50, 69), (1, 256, 200, 266), (1, 256, 312, 200), (1, 512, 156, 100), (1, 1024, 78, 50), (1, 256, 200, 210), (1, 512, 100, 105), (1, 1024, 50, 53), (1, 2048, 25, 27), (1, 256, 243, 200), (1, 512, 122, 100), (1, 1024, 61, 50), (1, 256, 257, 200), (1, 512, 129, 100), (1, 1024, 65, 50), (1, 2048, 33, 25), (1, 256, 334, 187), (1, 256, 200, 269), (1, 256, 287, 200), (1, 512, 144, 100), (1, 256, 153, 334), (1, 512, 77, 167), (1, 1024, 39, 84), (1, 2048, 20, 42), (8, 840, 840), (8, 100, 840), (1, 256, 334, 200), (1, 512, 167, 100), (1, 1024, 84, 50), (1, 2048, 42, 25), (1, 256, 269, 200), (1, 512, 135, 100), (1, 1024, 68, 50), (1, 256, 215, 200), (1, 512, 108, 100), (1, 256, 200, 318), (1, 256, 179, 334), (1, 512, 90, 167), (1, 1024, 45, 84), (1, 2048, 23, 42), (8, 966, 966), (8, 100, 966), (1, 256, 200, 272), (1, 512, 100, 136), (1, 256, 164, 334), (1, 512, 82, 167), (1, 1024, 41, 84), (1, 2048, 21, 42), (8, 882, 882), (8, 100, 882), (1, 256, 307, 200), (1, 256, 200, 201), (1, 512, 100, 101), (1, 256, 251, 200), (1, 512, 126, 100), (1, 1024, 63, 50), (1, 2048, 32, 25), (1, 256, 200, 321), (1, 512, 100, 161), (1, 256, 200, 271), (1, 256, 200, 295), (1, 512, 100, 148), (1, 256, 200, 260), (1, 512, 100, 130), (1, 1024, 50, 65), (1, 256, 286, 200), (1, 256, 200, 231), (1, 512, 100, 116), (1, 1024, 50, 58), (1, 2048, 25, 29), (8, 725, 725), (8, 100, 725), (1, 256, 200, 228), (1, 512, 100, 114), (1, 1024, 50, 57), (1, 256, 200, 273), (1, 256, 200, 248), (1, 512, 100, 124), (1, 1024, 50, 62), (1, 256, 218, 200), (1, 256, 334, 150), (1, 512, 167, 75), (1, 1024, 84, 38), (1, 2048, 42, 19), (1, 256, 200, 304), (1, 256, 278, 200), (1, 512, 139, 100), (1, 256, 200, 327), (1, 512, 100, 164), (1, 256, 330, 200), (1, 512, 165, 100), (1, 1024, 83, 50), (1, 256, 250, 200), (1, 512, 125, 100), (1, 256, 298, 200), (1, 512, 149, 100), (1, 256, 293, 200), (1, 512, 147, 100), (1, 1024, 74, 50), (1, 256, 200, 223), (1, 512, 100, 112), (1, 1024, 50, 56), (1, 2048, 25, 28), (1, 256, 200, 227), (1, 256, 166, 334), (1, 512, 83, 167), (1, 1024, 42, 84), (1, 256, 284, 200), (1, 512, 142, 100), (1, 1024, 71, 50), (1, 256, 263, 200), (1, 512, 132, 100), (1, 1024, 66, 50), (1, 256, 200, 298), (1, 256, 137, 334), (1, 512, 69, 167), (1, 1024, 35, 84), (1, 2048, 18, 42), (8, 756, 756), (8, 100, 756), (1, 256, 200, 332), (1, 512, 100, 166), (1, 256, 200, 239), (1, 512, 100, 120), (1, 256, 259, 200), (1, 512, 130, 100), (1, 256, 175, 334), (1, 512, 88, 167), (1, 256, 167, 334), (1, 512, 84, 167), (1, 256, 200, 233), (1, 512, 100, 117), (1, 256, 200, 314), (1, 256, 200, 287), (1, 512, 100, 144), (1, 256, 200, 247), (1, 256, 200, 242), (1, 512, 100, 121), (1, 256, 270, 200), (1, 256, 303, 200), (1, 512, 152, 100), (1, 256, 200, 334), (1, 512, 100, 167), (1, 1024, 50, 84), (1, 256, 200, 258), (1, 512, 100, 129), (1, 256, 187, 334), (1, 256, 165, 334), (1, 256, 200, 322), (1, 256, 200, 316), (1, 512, 100, 158), (1, 256, 220, 200), (1, 512, 110, 100), (1, 256, 200, 216), (1, 512, 100, 108), (1, 1024, 50, 54), (1, 256, 200, 279), (1, 256, 200, 308), (1, 512, 100, 154), (1, 256, 297, 200), (1, 256, 246, 200), (1, 256, 216, 200), (1, 256, 200, 286), (1, 256, 264, 200), (1, 256, 252, 200), (1, 256, 200, 288), (1, 256, 222, 200), (1, 256, 334, 159), (1, 512, 167, 80), (1, 1024, 84, 40), (1, 2048, 42, 20), (1, 256, 276, 200), (1, 512, 138, 100), (1, 1024, 69, 50), (1, 256, 138, 334), (1, 256, 200, 296), (1, 256, 200, 235), (1, 256, 200, 254), (1, 512, 100, 127), (1, 256, 239, 200), (1, 512, 120, 100), (1, 1024, 60, 50), (1, 2048, 30, 25), (1, 256, 292, 200), (1, 512, 146, 100), (1, 256, 200, 281), (1, 256, 334, 197), (1, 512, 167, 99), (1, 256, 319, 200), (1, 512, 160, 100), (1, 256, 283, 200), (1, 256, 241, 200), (1, 512, 121, 100), (1, 256, 206, 200), (1, 512, 103, 100), (1, 1024, 52, 50), (1, 256, 200, 293), (1, 256, 203, 200), (1, 512, 102, 100), (1, 256, 200, 257), (1, 256, 200, 214), (1, 512, 100, 107), (1, 256, 261, 200), (1, 512, 131, 100), (1, 256, 193, 334), (1, 256, 200, 290), (1, 256, 200, 276), (1, 512, 100, 138), (1, 256, 200, 244), (1, 256, 273, 200), (1, 512, 137, 100), (1, 256, 184, 334), (1, 512, 92, 167), (1, 1024, 46, 84), (1, 256, 205, 200), (1, 256, 201, 200), (1, 256, 200, 312), (1, 256, 176, 334), (1, 256, 305, 200), (1, 512, 153, 100), (1, 256, 163, 334), (1, 256, 315, 200), (1, 512, 158, 100), (1, 1024, 79, 50), (1, 256, 198, 334), (1, 512, 99, 167), (1, 256, 170, 334), (1, 512, 85, 167), (1, 1024, 43, 84), (1, 256, 200, 212), (1, 512, 100, 106), (1, 256, 277, 200), (1, 256, 88, 334), (1, 512, 44, 167), (1, 1024, 22, 84), (1, 2048, 11, 42), (8, 462, 462), (8, 100, 462), (1, 256, 200, 241), (1, 256, 200, 262), (1, 512, 100, 131), (1, 256, 200, 225), (1, 512, 100, 113), (1, 256, 200, 246), (1, 512, 100, 123), (1, 256, 279, 200), (1, 256, 199, 334), (1, 256, 200, 211), (1, 256, 200, 229), (1, 512, 100, 115), (1, 256, 200, 264), (1, 256, 200, 252), (1, 256, 99, 334), (1, 512, 50, 167), (1, 1024, 25, 84), (1, 2048, 13, 42), (8, 546, 546), (8, 100, 546), (1, 256, 265, 200), (1, 256, 334, 155), (1, 512, 167, 78), (1, 1024, 84, 39), (1, 256, 291, 200), (1, 256, 113, 334), (1, 512, 57, 167), (1, 1024, 29, 84), (1, 2048, 15, 42), (8, 630, 630), (8, 100, 630), (1, 256, 182, 334), (1, 512, 91, 167), (1, 256, 334, 194), (1, 512, 167, 97), (1, 1024, 84, 49), (1, 256, 200, 217), (1, 512, 100, 109), (1, 1024, 50, 55), (1, 256, 157, 334), (1, 512, 79, 167), (1, 1024, 40, 84), (1, 256, 200, 328), (1, 256, 304, 200), (1, 256, 204, 200), (1, 256, 237, 200), (1, 512, 119, 100), (1, 256, 192, 334), (1, 256, 274, 200), (1, 256, 190, 334), (1, 512, 95, 167), (1, 256, 314, 200), (1, 512, 157, 100), (1, 256, 200, 305), (1, 256, 200, 245), (1, 256, 254, 200), (1, 512, 127, 100), (1, 1024, 64, 50), (1, 256, 200, 261), (1, 256, 197, 334), (1, 256, 200, 255), (1, 256, 195, 334), (1, 512, 98, 167), (1, 256, 200, 219), (1, 512, 100, 110), (1, 256, 200, 213), (1, 256, 313, 200), (1, 256, 158, 334), (1, 256, 200, 307), (1, 256, 296, 200), (1, 512, 148, 100), (1, 256, 225, 200), (1, 512, 113, 100), (1, 1024, 57, 50), (1, 2048, 29, 25), (1, 256, 333, 200), (1, 256, 238, 200), (1, 256, 212, 200), (1, 512, 106, 100), (1, 1024, 53, 50), (1, 256, 334, 160), (1, 256, 233, 200), (1, 512, 117, 100), (1, 1024, 59, 50), (1, 256, 234, 200), (1, 256, 272, 200), (1, 512, 136, 100), (1, 256, 172, 334), (1, 512, 86, 167), (1, 256, 86, 334), (1, 512, 43, 167), (1, 256, 189, 334), (1, 256, 200, 238), (1, 256, 334, 174), (1, 512, 167, 87), (1, 1024, 84, 44), (1, 2048, 42, 22), (1, 256, 230, 200), (1, 512, 115, 100), (1, 1024, 58, 50), (1, 256, 156, 334), (1, 512, 78, 167), (1, 256, 152, 334), (1, 256, 124, 334), (1, 512, 62, 167), (1, 1024, 31, 84), (1, 2048, 16, 42), (8, 672, 672), (8, 100, 672), (1, 256, 226, 200), (1, 256, 200, 331), (1, 256, 224, 200), (1, 512, 112, 100), (1, 256, 83, 334), (1, 512, 42, 167), (1, 1024, 21, 84), (1, 256, 159, 334), (1, 512, 80, 167), (1, 256, 200, 218), (1, 256, 247, 200), (1, 512, 124, 100), (1, 256, 229, 200), (1, 256, 200, 275), (1, 256, 200, 333), (1, 256, 183, 334), (1, 256, 161, 334), (1, 512, 81, 167), (1, 256, 200, 234), (1, 256, 200, 224), (1, 256, 334, 172), (1, 512, 167, 86), (1, 1024, 84, 43), (1, 256, 147, 334), (1, 512, 74, 167), (1, 1024, 37, 84), (1, 256, 200, 220), (1, 256, 310, 200), (1, 512, 155, 100), (1, 256, 196, 334), (1, 256, 95, 334), (1, 512, 48, 167), (1, 1024, 24, 84), (1, 2048, 12, 42), (8, 504, 504), (8, 100, 504), (1, 256, 320, 200), (1, 256, 200, 309), (1, 256, 200, 232), (1, 256, 253, 200), (1, 256, 185, 334), (1, 256, 200, 253), (1, 256, 249, 200), (1, 256, 231, 200), (1, 512, 116, 100), (1, 256, 128, 334), (1, 512, 64, 167), (1, 1024, 32, 84), (1, 256, 219, 200), (1, 256, 334, 198), (1, 256, 200, 206), (1, 512, 100, 103), (1, 1024, 50, 52), (1, 256, 200, 259), (1, 256, 325, 200), (1, 512, 163, 100), (1, 1024, 82, 50), (1, 256, 334, 128), (1, 512, 167, 64), (1, 1024, 84, 32), (1, 2048, 42, 16), (1, 256, 200, 230), (1, 256, 327, 200), (1, 512, 164, 100), (1, 256, 324, 200), (1, 512, 162, 100), (1, 256, 200, 222), (1, 512, 100, 111), (1, 256, 200, 215), (1, 256, 236, 200), (1, 512, 118, 100), (1, 256, 242, 200), (1, 256, 256, 200), (1, 512, 128, 100), (1, 256, 101, 334), (1, 512, 51, 167), (1, 1024, 26, 84), (1, 256, 255, 200), (1, 256, 91, 334), (1, 512, 46, 167), (1, 1024, 23, 84), (1, 256, 127, 334), (1, 256, 112, 334), (1, 512, 56, 167), (1, 1024, 28, 84), (1, 2048, 14, 42), (8, 588, 588), (8, 100, 588), (1, 256, 213, 200), (1, 256, 120, 334), (1, 512, 60, 167), (1, 1024, 30, 84), (1, 256, 200, 278), (1, 256, 306, 200), (1, 256, 180, 334), (1, 256, 200, 204), (1, 256, 162, 334), (1, 256, 334, 169), (1, 512, 167, 85), (1, 256, 139, 334), (1, 512, 70, 167), (1, 256, 211, 200), (1, 256, 227, 200), (1, 512, 114, 100), (1, 256, 334, 176), (1, 512, 167, 88), (1, 256, 111, 334), (1, 256, 326, 200), (1, 256, 271, 200), (1, 256, 317, 200), (1, 256, 282, 200), (1, 512, 141, 100), (1, 256, 132, 334), (1, 512, 66, 167), (1, 1024, 33, 84), (1, 2048, 17, 42), (8, 714, 714), (8, 100, 714), (1, 256, 294, 200), (1, 256, 334, 184), (1, 512, 167, 92), (1, 1024, 84, 46), (1, 2048, 42, 23), (1, 256, 309, 200)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["other"],
                    "shape": [(2, 256, 280, 200), (2, 512, 140, 100), (2, 1024, 70, 50), (2, 2048, 35, 25), (16, 1, 875), (16, 1, 875), (1, 256, 200, 300), (1, 512, 100, 150), (1, 1024, 50, 75), (1, 2048, 25, 38), (8, 1, 950), (8, 1, 950), (1, 256, 200, 306), (1, 512, 100, 153), (1, 1024, 50, 77), (1, 2048, 25, 39), (8, 1, 975), (8, 1, 975), (1, 256, 200, 299), (1, 256, 200, 267), (1, 512, 100, 134), (1, 1024, 50, 67), (1, 2048, 25, 34), (8, 1, 850), (8, 1, 850), (1, 256, 200, 330), (1, 512, 100, 165), (1, 1024, 50, 83), (1, 2048, 25, 42), (8, 1, 1050), (8, 1, 1050), (1, 256, 200, 251), (1, 512, 100, 126), (1, 1024, 50, 63), (1, 2048, 25, 32), (8, 1, 800), (8, 1, 800), (1, 256, 300, 200), (1, 512, 150, 100), (1, 1024, 75, 50), (1, 2048, 38, 25), (1, 256, 267, 200), (1, 512, 134, 100), (1, 1024, 67, 50), (1, 2048, 34, 25), (1, 256, 200, 301), (1, 512, 100, 151), (1, 1024, 50, 76), (1, 256, 285, 200), (1, 512, 143, 100), (1, 1024, 72, 50), (1, 2048, 36, 25), (8, 1, 900), (8, 1, 900), (1, 256, 200, 237), (1, 512, 100, 119), (1, 1024, 50, 60), (1, 2048, 25, 30), (8, 1, 750), (8, 1, 750), (1, 256, 200, 256), (1, 512, 100, 128), (1, 1024, 50, 64), (1, 256, 200, 277), (1, 512, 100, 139), (1, 1024, 50, 70), (1, 2048, 25, 35), (8, 1, 875), (8, 1, 875), (1, 256, 200, 302), (1, 256, 217, 200), (1, 512, 109, 100), (1, 1024, 55, 50), (1, 2048, 28, 25), (8, 1, 700), (8, 1, 700), (1, 256, 202, 200), (1, 512, 101, 100), (1, 1024, 51, 50), (1, 2048, 26, 25), (8, 1, 650), (8, 1, 650), (1, 256, 200, 320), (1, 512, 100, 160), (1, 1024, 50, 80), (1, 2048, 25, 40), (8, 1, 1000), (8, 1, 1000), (1, 256, 200, 297), (1, 512, 100, 149), (1, 256, 194, 334), (1, 512, 97, 167), (1, 1024, 49, 84), (1, 256, 200, 285), (1, 512, 100, 143), (1, 1024, 50, 72), (1, 2048, 25, 36), (1, 256, 302, 200), (1, 512, 151, 100), (1, 1024, 76, 50), (1, 256, 221, 200), (1, 512, 111, 100), (1, 1024, 56, 50), (1, 256, 188, 334), (1, 512, 94, 167), (1, 1024, 47, 84), (1, 2048, 24, 42), (8, 1, 1008), (8, 1, 1008), (1, 256, 200, 200), (1, 512, 100, 100), (1, 1024, 50, 50), (1, 2048, 25, 25), (8, 1, 625), (8, 1, 625), (1, 256, 321, 200), (1, 512, 161, 100), (1, 1024, 81, 50), (1, 2048, 41, 25), (8, 1, 1025), (8, 1, 1025), (1, 256, 200, 282), (1, 512, 100, 141), (1, 1024, 50, 71), (1, 256, 200, 291), (1, 512, 100, 146), (1, 1024, 50, 73), (1, 2048, 25, 37), (8, 1, 925), (8, 1, 925), (1, 256, 200, 283), (1, 512, 100, 142), (1, 256, 191, 334), (1, 512, 96, 167), (1, 1024, 48, 84), (1, 256, 299, 200), (1, 256, 301, 200), (1, 256, 200, 292), (1, 256, 266, 200), (1, 512, 133, 100), (1, 256, 200, 325), (1, 512, 100, 163), (1, 1024, 50, 82), (1, 2048, 25, 41), (1, 256, 151, 334), (1, 512, 76, 167), (1, 1024, 38, 84), (1, 2048, 19, 42), (8, 1, 798), (8, 1, 798), (1, 256, 200, 329), (1, 256, 200, 268), (1, 256, 308, 200), (1, 512, 154, 100), (1, 1024, 77, 50), (1, 2048, 39, 25), (1, 256, 200, 289), (1, 512, 100, 145), (1, 256, 280, 200), (1, 512, 140, 100), (1, 1024, 70, 50), (1, 2048, 35, 25), (1, 256, 200, 265), (1, 512, 100, 133), (1, 256, 200, 203), (1, 512, 100, 102), (1, 1024, 50, 51), (1, 2048, 25, 26), (1, 256, 200, 263), (1, 512, 100, 132), (1, 1024, 50, 66), (1, 2048, 25, 33), (8, 1, 825), (8, 1, 825), (1, 256, 200, 250), (1, 512, 100, 125), (1, 256, 200, 284), (1, 256, 200, 317), (1, 512, 100, 159), (1, 256, 200, 310), (1, 512, 100, 155), (1, 1024, 50, 78), (1, 256, 200, 280), (1, 512, 100, 140), (1, 256, 200, 236), (1, 512, 100, 118), (1, 1024, 50, 59), (1, 256, 245, 200), (1, 512, 123, 100), (1, 1024, 62, 50), (1, 2048, 31, 25), (8, 1, 775), (8, 1, 775), (1, 256, 200, 270), (1, 512, 100, 135), (1, 1024, 50, 68), (1, 256, 334, 188), (1, 512, 167, 94), (1, 1024, 84, 47), (1, 2048, 42, 24), (1, 256, 268, 200), (1, 256, 200, 294), (1, 512, 100, 147), (1, 1024, 50, 74), (1, 256, 289, 200), (1, 512, 145, 100), (1, 1024, 73, 50), (1, 2048, 37, 25), (1, 256, 200, 323), (1, 512, 100, 162), (1, 1024, 50, 81), (1, 256, 200, 311), (1, 512, 100, 156), (1, 256, 186, 334), (1, 512, 93, 167), (1, 256, 200, 324), (1, 256, 200, 303), (1, 512, 100, 152), (1, 256, 200, 243), (1, 512, 100, 122), (1, 1024, 50, 61), (1, 2048, 25, 31), (1, 256, 200, 249), (1, 256, 318, 200), (1, 512, 159, 100), (1, 1024, 80, 50), (1, 2048, 40, 25), (1, 256, 200, 326), (1, 256, 173, 334), (1, 512, 87, 167), (1, 1024, 44, 84), (1, 2048, 22, 42), (8, 1, 924), (8, 1, 924), (1, 256, 214, 200), (1, 512, 107, 100), (1, 1024, 54, 50), (1, 2048, 27, 25), (8, 1, 675), (8, 1, 675), (1, 256, 200, 313), (1, 512, 100, 157), (1, 1024, 50, 79), (1, 256, 200, 274), (1, 512, 100, 137), (1, 1024, 50, 69), (1, 256, 200, 266), (1, 256, 312, 200), (1, 512, 156, 100), (1, 1024, 78, 50), (1, 256, 200, 210), (1, 512, 100, 105), (1, 1024, 50, 53), (1, 2048, 25, 27), (1, 256, 243, 200), (1, 512, 122, 100), (1, 1024, 61, 50), (1, 256, 257, 200), (1, 512, 129, 100), (1, 1024, 65, 50), (1, 2048, 33, 25), (1, 256, 334, 187), (1, 256, 200, 269), (1, 256, 287, 200), (1, 512, 144, 100), (1, 256, 153, 334), (1, 512, 77, 167), (1, 1024, 39, 84), (1, 2048, 20, 42), (8, 1, 840), (8, 1, 840), (1, 256, 334, 200), (1, 512, 167, 100), (1, 1024, 84, 50), (1, 2048, 42, 25), (1, 256, 269, 200), (1, 512, 135, 100), (1, 1024, 68, 50), (1, 256, 215, 200), (1, 512, 108, 100), (1, 256, 200, 318), (1, 256, 179, 334), (1, 512, 90, 167), (1, 1024, 45, 84), (1, 2048, 23, 42), (8, 1, 966), (8, 1, 966), (1, 256, 200, 272), (1, 512, 100, 136), (1, 256, 164, 334), (1, 512, 82, 167), (1, 1024, 41, 84), (1, 2048, 21, 42), (8, 1, 882), (8, 1, 882), (1, 256, 307, 200), (1, 256, 200, 201), (1, 512, 100, 101), (1, 256, 251, 200), (1, 512, 126, 100), (1, 1024, 63, 50), (1, 2048, 32, 25), (1, 256, 200, 321), (1, 512, 100, 161), (1, 256, 200, 271), (1, 256, 200, 295), (1, 512, 100, 148), (1, 256, 200, 260), (1, 512, 100, 130), (1, 1024, 50, 65), (1, 256, 286, 200), (1, 256, 200, 231), (1, 512, 100, 116), (1, 1024, 50, 58), (1, 2048, 25, 29), (8, 1, 725), (8, 1, 725), (1, 256, 200, 228), (1, 512, 100, 114), (1, 1024, 50, 57), (1, 256, 200, 273), (1, 256, 200, 248), (1, 512, 100, 124), (1, 1024, 50, 62), (1, 256, 218, 200), (1, 256, 334, 150), (1, 512, 167, 75), (1, 1024, 84, 38), (1, 2048, 42, 19), (1, 256, 200, 304), (1, 256, 278, 200), (1, 512, 139, 100), (1, 256, 200, 327), (1, 512, 100, 164), (1, 256, 330, 200), (1, 512, 165, 100), (1, 1024, 83, 50), (1, 256, 250, 200), (1, 512, 125, 100), (1, 256, 298, 200), (1, 512, 149, 100), (1, 256, 293, 200), (1, 512, 147, 100), (1, 1024, 74, 50), (1, 256, 200, 223), (1, 512, 100, 112), (1, 1024, 50, 56), (1, 2048, 25, 28), (1, 256, 200, 227), (1, 256, 166, 334), (1, 512, 83, 167), (1, 1024, 42, 84), (1, 256, 284, 200), (1, 512, 142, 100), (1, 1024, 71, 50), (1, 256, 263, 200), (1, 512, 132, 100), (1, 1024, 66, 50), (1, 256, 200, 298), (1, 256, 137, 334), (1, 512, 69, 167), (1, 1024, 35, 84), (1, 2048, 18, 42), (8, 1, 756), (8, 1, 756), (1, 256, 200, 332), (1, 512, 100, 166), (1, 256, 200, 239), (1, 512, 100, 120), (1, 256, 259, 200), (1, 512, 130, 100), (1, 256, 175, 334), (1, 512, 88, 167), (1, 256, 167, 334), (1, 512, 84, 167), (1, 256, 200, 233), (1, 512, 100, 117), (1, 256, 200, 314), (1, 256, 200, 287), (1, 512, 100, 144), (1, 256, 200, 247), (1, 256, 200, 242), (1, 512, 100, 121), (1, 256, 270, 200), (1, 256, 303, 200), (1, 512, 152, 100), (1, 256, 200, 334), (1, 512, 100, 167), (1, 1024, 50, 84), (1, 256, 200, 258), (1, 512, 100, 129), (1, 256, 187, 334), (1, 256, 165, 334), (1, 256, 200, 322), (1, 256, 200, 316), (1, 512, 100, 158), (1, 256, 220, 200), (1, 512, 110, 100), (1, 256, 200, 216), (1, 512, 100, 108), (1, 1024, 50, 54), (1, 256, 200, 279), (1, 256, 200, 308), (1, 512, 100, 154), (1, 256, 297, 200), (1, 256, 246, 200), (1, 256, 216, 200), (1, 256, 200, 286), (1, 256, 264, 200), (1, 256, 252, 200), (1, 256, 200, 288), (1, 256, 222, 200), (1, 256, 334, 159), (1, 512, 167, 80), (1, 1024, 84, 40), (1, 2048, 42, 20), (1, 256, 276, 200), (1, 512, 138, 100), (1, 1024, 69, 50), (1, 256, 138, 334), (1, 256, 200, 296), (1, 256, 200, 235), (1, 256, 200, 254), (1, 512, 100, 127), (1, 256, 239, 200), (1, 512, 120, 100), (1, 1024, 60, 50), (1, 2048, 30, 25), (1, 256, 292, 200), (1, 512, 146, 100), (1, 256, 200, 281), (1, 256, 334, 197), (1, 512, 167, 99), (1, 256, 319, 200), (1, 512, 160, 100), (1, 256, 283, 200), (1, 256, 241, 200), (1, 512, 121, 100), (1, 256, 206, 200), (1, 512, 103, 100), (1, 1024, 52, 50), (1, 256, 200, 293), (1, 256, 203, 200), (1, 512, 102, 100), (1, 256, 200, 257), (1, 256, 200, 214), (1, 512, 100, 107), (1, 256, 261, 200), (1, 512, 131, 100), (1, 256, 193, 334), (1, 256, 200, 290), (1, 256, 200, 276), (1, 512, 100, 138), (1, 256, 200, 244), (1, 256, 273, 200), (1, 512, 137, 100), (1, 256, 184, 334), (1, 512, 92, 167), (1, 1024, 46, 84), (1, 256, 205, 200), (1, 256, 201, 200), (1, 256, 200, 312), (1, 256, 176, 334), (1, 256, 305, 200), (1, 512, 153, 100), (1, 256, 163, 334), (1, 256, 315, 200), (1, 512, 158, 100), (1, 1024, 79, 50), (1, 256, 198, 334), (1, 512, 99, 167), (1, 256, 170, 334), (1, 512, 85, 167), (1, 1024, 43, 84), (1, 256, 200, 212), (1, 512, 100, 106), (1, 256, 277, 200), (1, 256, 88, 334), (1, 512, 44, 167), (1, 1024, 22, 84), (1, 2048, 11, 42), (8, 1, 462), (8, 1, 462), (1, 256, 200, 241), (1, 256, 200, 262), (1, 512, 100, 131), (1, 256, 200, 225), (1, 512, 100, 113), (1, 256, 200, 246), (1, 512, 100, 123), (1, 256, 279, 200), (1, 256, 199, 334), (1, 256, 200, 211), (1, 256, 200, 229), (1, 512, 100, 115), (1, 256, 200, 264), (1, 256, 200, 252), (1, 256, 99, 334), (1, 512, 50, 167), (1, 1024, 25, 84), (1, 2048, 13, 42), (8, 1, 546), (8, 1, 546), (1, 256, 265, 200), (1, 256, 334, 155), (1, 512, 167, 78), (1, 1024, 84, 39), (1, 256, 291, 200), (1, 256, 113, 334), (1, 512, 57, 167), (1, 1024, 29, 84), (1, 2048, 15, 42), (8, 1, 630), (8, 1, 630), (1, 256, 182, 334), (1, 512, 91, 167), (1, 256, 334, 194), (1, 512, 167, 97), (1, 1024, 84, 49), (1, 256, 200, 217), (1, 512, 100, 109), (1, 1024, 50, 55), (1, 256, 157, 334), (1, 512, 79, 167), (1, 1024, 40, 84), (1, 256, 200, 328), (1, 256, 304, 200), (1, 256, 204, 200), (1, 256, 237, 200), (1, 512, 119, 100), (1, 256, 192, 334), (1, 256, 274, 200), (1, 256, 190, 334), (1, 512, 95, 167), (1, 256, 314, 200), (1, 512, 157, 100), (1, 256, 200, 305), (1, 256, 200, 245), (1, 256, 254, 200), (1, 512, 127, 100), (1, 1024, 64, 50), (1, 256, 200, 261), (1, 256, 197, 334), (1, 256, 200, 255), (1, 256, 195, 334), (1, 512, 98, 167), (1, 256, 200, 219), (1, 512, 100, 110), (1, 256, 200, 213), (1, 256, 313, 200), (1, 256, 158, 334), (1, 256, 200, 307), (1, 256, 296, 200), (1, 512, 148, 100), (1, 256, 225, 200), (1, 512, 113, 100), (1, 1024, 57, 50), (1, 2048, 29, 25), (1, 256, 333, 200), (1, 256, 238, 200), (1, 256, 212, 200), (1, 512, 106, 100), (1, 1024, 53, 50), (1, 256, 334, 160), (1, 256, 233, 200), (1, 512, 117, 100), (1, 1024, 59, 50), (1, 256, 234, 200), (1, 256, 272, 200), (1, 512, 136, 100), (1, 256, 172, 334), (1, 512, 86, 167), (1, 256, 86, 334), (1, 512, 43, 167), (1, 256, 189, 334), (1, 256, 200, 238), (1, 256, 334, 174), (1, 512, 167, 87), (1, 1024, 84, 44), (1, 2048, 42, 22), (1, 256, 230, 200), (1, 512, 115, 100), (1, 1024, 58, 50), (1, 256, 156, 334), (1, 512, 78, 167), (1, 256, 152, 334), (1, 256, 124, 334), (1, 512, 62, 167), (1, 1024, 31, 84), (1, 2048, 16, 42), (8, 1, 672), (8, 1, 672), (1, 256, 226, 200), (1, 256, 200, 331), (1, 256, 224, 200), (1, 512, 112, 100), (1, 256, 83, 334), (1, 512, 42, 167), (1, 1024, 21, 84), (1, 256, 159, 334), (1, 512, 80, 167), (1, 256, 200, 218), (1, 256, 247, 200), (1, 512, 124, 100), (1, 256, 229, 200), (1, 256, 200, 275), (1, 256, 200, 333), (1, 256, 183, 334), (1, 256, 161, 334), (1, 512, 81, 167), (1, 256, 200, 234), (1, 256, 200, 224), (1, 256, 334, 172), (1, 512, 167, 86), (1, 1024, 84, 43), (1, 256, 147, 334), (1, 512, 74, 167), (1, 1024, 37, 84), (1, 256, 200, 220), (1, 256, 310, 200), (1, 512, 155, 100), (1, 256, 196, 334), (1, 256, 95, 334), (1, 512, 48, 167), (1, 1024, 24, 84), (1, 2048, 12, 42), (8, 1, 504), (8, 1, 504), (1, 256, 320, 200), (1, 256, 200, 309), (1, 256, 200, 232), (1, 256, 253, 200), (1, 256, 185, 334), (1, 256, 200, 253), (1, 256, 249, 200), (1, 256, 231, 200), (1, 512, 116, 100), (1, 256, 128, 334), (1, 512, 64, 167), (1, 1024, 32, 84), (1, 256, 219, 200), (1, 256, 334, 198), (1, 256, 200, 206), (1, 512, 100, 103), (1, 1024, 50, 52), (1, 256, 200, 259), (1, 256, 325, 200), (1, 512, 163, 100), (1, 1024, 82, 50), (1, 256, 334, 128), (1, 512, 167, 64), (1, 1024, 84, 32), (1, 2048, 42, 16), (1, 256, 200, 230), (1, 256, 327, 200), (1, 512, 164, 100), (1, 256, 324, 200), (1, 512, 162, 100), (1, 256, 200, 222), (1, 512, 100, 111), (1, 256, 200, 215), (1, 256, 236, 200), (1, 512, 118, 100), (1, 256, 242, 200), (1, 256, 256, 200), (1, 512, 128, 100), (1, 256, 101, 334), (1, 512, 51, 167), (1, 1024, 26, 84), (1, 256, 255, 200), (1, 256, 91, 334), (1, 512, 46, 167), (1, 1024, 23, 84), (1, 256, 127, 334), (1, 256, 112, 334), (1, 512, 56, 167), (1, 1024, 28, 84), (1, 2048, 14, 42), (8, 1, 588), (8, 1, 588), (1, 256, 213, 200), (1, 256, 120, 334), (1, 512, 60, 167), (1, 1024, 30, 84), (1, 256, 200, 278), (1, 256, 306, 200), (1, 256, 180, 334), (1, 256, 200, 204), (1, 256, 162, 334), (1, 256, 334, 169), (1, 512, 167, 85), (1, 256, 139, 334), (1, 512, 70, 167), (1, 256, 211, 200), (1, 256, 227, 200), (1, 512, 114, 100), (1, 256, 334, 176), (1, 512, 167, 88), (1, 256, 111, 334), (1, 256, 326, 200), (1, 256, 271, 200), (1, 256, 317, 200), (1, 256, 282, 200), (1, 512, 141, 100), (1, 256, 132, 334), (1, 512, 66, 167), (1, 1024, 33, 84), (1, 2048, 17, 42), (8, 1, 714), (8, 1, 714), (1, 256, 294, 200), (1, 256, 334, 184), (1, 512, 167, 92), (1, 1024, 84, 46), (1, 2048, 42, 23), (1, 256, 309, 200)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'conv2d_1': dict(
        name=["conv2d"],
        para=dict(
            stride=[(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)],
            padding=[(0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0), (0, 0)],
            dilation=[(1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1)],
            groups=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "requires_grad": [True],
                    "shape": [(2, 2048, 35, 25), (1, 2048, 25, 38), (1, 2048, 25, 39), (1, 2048, 25, 34), (1, 2048, 25, 42), (1, 2048, 25, 32), (1, 2048, 38, 25), (1, 2048, 34, 25), (1, 2048, 36, 25), (1, 2048, 25, 30), (1, 2048, 25, 35), (1, 2048, 28, 25), (1, 2048, 26, 25), (1, 2048, 25, 40), (1, 2048, 25, 36), (1, 2048, 24, 42), (1, 2048, 25, 25), (1, 2048, 41, 25), (1, 2048, 25, 37), (1, 2048, 25, 41), (1, 2048, 19, 42), (1, 2048, 39, 25), (1, 2048, 35, 25), (1, 2048, 25, 26), (1, 2048, 25, 33), (1, 2048, 31, 25), (1, 2048, 42, 24), (1, 2048, 37, 25), (1, 2048, 25, 31), (1, 2048, 40, 25), (1, 2048, 22, 42), (1, 2048, 27, 25), (1, 2048, 25, 27), (1, 2048, 33, 25), (1, 2048, 20, 42), (1, 2048, 42, 25), (1, 2048, 23, 42), (1, 2048, 21, 42), (1, 2048, 32, 25), (1, 2048, 25, 29), (1, 2048, 42, 19), (1, 2048, 25, 28), (1, 2048, 18, 42), (1, 2048, 42, 20), (1, 2048, 30, 25), (1, 2048, 11, 42), (1, 2048, 13, 42), (1, 2048, 15, 42), (1, 2048, 29, 25), (1, 2048, 42, 22), (1, 2048, 16, 42), (1, 2048, 12, 42), (1, 2048, 42, 16), (1, 2048, 14, 42), (1, 2048, 17, 42), (1, 2048, 42, 23)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["weight"],
                    "requires_grad": [True],
                    "shape": [(256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1), (256, 2048, 1, 1)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["bias"],
                    "requires_grad": [True],
                    "shape": [(256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'interpolate': dict(
        name=["interpolate"],
        para=dict(
            size=[(35, 25), (25, 38), (25, 39), (25, 38), (25, 34), (25, 42), (25, 32), (38, 25), (34, 25), (25, 38), (36, 25), (25, 30), (25, 32), (25, 35), (25, 38), (28, 25), (26, 25), (25, 40), (25, 38), (25, 42), (25, 36), (38, 25), (28, 25), (24, 42), (25, 25), (41, 25), (25, 38), (25, 36), (25, 37), (25, 36), (25, 38), (24, 42), (38, 25), (38, 25), (25, 38), (25, 37), (34, 25), (38, 25), (25, 41), (19, 42), (25, 40), (38, 25), (25, 42), (25, 34), (39, 25), (38, 25), (25, 37), (35, 25), (25, 38), (25, 34), (25, 34), (25, 26), (25, 33), (25, 34), (24, 42), (38, 25), (25, 32), (25, 36), (25, 40), (25, 39), (25, 35), (38, 25), (25, 30), (31, 25), (25, 38), (25, 34), (24, 42), (42, 24), (34, 25), (25, 37), (37, 25), (25, 41), (25, 39), (24, 42), (25, 41), (25, 38), (25, 31), (25, 32), (40, 25), (25, 41), (22, 42), (25, 34), (27, 25), (25, 40), (25, 35), (25, 34), (39, 25), (25, 27), (31, 25), (33, 25), (42, 24), (25, 34), (36, 25), (35, 25), (20, 42), (42, 25), (34, 25), (27, 25), (25, 34), (25, 40), (23, 42), (25, 34), (25, 34), (21, 42), (39, 25), (31, 25), (25, 26), (32, 25), (25, 41), (25, 40), (25, 34), (24, 42), (25, 37), (25, 40), (42, 25), (25, 33), (36, 25), (25, 29), (25, 29), (25, 35), (25, 31), (28, 25), (42, 19), (25, 38), (35, 25), (25, 41), (42, 25), (32, 25), (38, 25), (37, 25), (25, 28), (25, 29), (25, 35), (21, 42), (36, 25), (33, 25), (25, 38), (25, 37), (18, 42), (25, 42), (25, 30), (33, 25), (22, 42), (42, 25), (21, 42), (25, 30), (25, 40), (25, 36), (25, 31), (25, 31), (34, 25), (38, 25), (42, 24), (25, 42), (25, 33), (25, 37), (24, 42), (38, 25), (21, 42), (25, 41), (24, 42), (25, 40), (25, 39), (28, 25), (28, 25), (25, 27), (25, 35), (25, 39), (25, 39), (23, 42), (31, 25), (38, 25), (31, 25), (25, 38), (27, 25), (25, 36), (34, 25), (33, 25), (25, 39), (32, 25), (32, 25), (25, 36), (28, 25), (42, 20), (25, 30), (25, 26), (34, 25), (25, 33), (25, 38), (25, 35), (35, 25), (18, 42), (25, 37), (25, 30), (25, 32), (30, 25), (37, 25), (25, 36), (42, 25), (40, 25), (25, 40), (39, 25), (36, 25), (31, 25), (26, 25), (25, 37), (26, 25), (25, 39), (25, 36), (25, 33), (25, 27), (33, 25), (25, 42), (25, 42), (25, 37), (25, 36), (25, 33), (25, 32), (25, 35), (25, 37), (38, 25), (25, 35), (25, 31), (35, 25), (23, 42), (26, 25), (25, 35), (26, 25), (25, 35), (25, 39), (22, 42), (27, 25), (25, 36), (34, 25), (39, 25), (25, 34), (21, 42), (25, 35), (40, 25), (25, 38), (25, 42), (22, 42), (25, 27), (38, 25), (35, 25), (31, 25), (11, 42), (25, 31), (25, 33), (25, 34), (25, 29), (34, 25), (25, 31), (35, 25), (25, 42), (34, 25), (25, 27), (25, 31), (25, 29), (25, 33), (25, 32), (25, 35), (13, 42), (34, 25), (25, 27), (22, 42), (42, 20), (37, 25), (38, 25), (15, 42), (23, 42), (42, 25), (25, 28), (20, 42), (25, 29), (19, 42), (25, 41), (38, 25), (35, 25), (26, 25), (30, 25), (24, 42), (35, 25), (24, 42), (38, 25), (40, 25), (25, 39), (35, 25), (25, 31), (32, 25), (25, 34), (35, 25), (25, 36), (25, 33), (25, 41), (25, 42), (33, 25), (25, 32), (25, 33), (25, 31), (25, 31), (25, 42), (25, 28), (34, 25), (25, 27), (40, 25), (20, 42), (25, 39), (37, 25), (22, 42), (25, 29), (35, 25), (25, 37), (25, 42), (34, 25), (29, 25), (42, 25), (30, 25), (25, 36), (25, 34), (25, 33), (25, 33), (25, 33), (27, 25), (42, 20), (30, 25), (26, 25), (25, 37), (30, 25), (34, 25), (39, 25), (25, 34), (22, 42), (11, 42), (37, 25), (28, 25), (24, 42), (25, 30), (26, 25), (25, 35), (42, 22), (29, 25), (20, 42), (35, 25), (19, 42), (25, 27), (25, 38), (16, 42), (33, 25), (21, 42), (29, 25), (25, 42), (28, 25), (11, 42), (25, 32), (20, 42), (21, 42), (25, 28), (30, 25), (25, 38), (31, 25), (42, 24), (32, 25), (25, 33), (29, 25), (25, 35), (25, 42), (42, 25), (25, 41), (23, 42), (21, 42), (25, 30), (25, 28), (25, 41), (42, 22), (19, 42), (25, 28), (39, 25), (25, 26), (25, 37), (25, 42), (26, 25), (12, 42), (33, 25), (25, 42), (25, 38), (40, 25), (25, 39), (39, 25), (25, 29), (34, 25), (32, 25), (24, 42), (25, 32), (21, 42), (25, 32), (24, 42), (32, 25), (29, 25), (36, 25), (25, 27), (25, 30), (16, 42), (25, 33), (28, 25), (25, 42), (42, 25), (25, 26), (31, 25), (25, 33), (25, 39), (37, 25), (26, 25), (42, 19), (25, 34), (34, 25), (31, 25), (41, 25), (32, 25), (42, 16), (25, 29), (28, 25), (26, 25), (41, 25), (41, 25), (25, 38), (25, 32), (25, 33), (21, 42), (25, 42), (25, 28), (25, 27), (25, 37), (25, 28), (29, 25), (25, 31), (30, 25), (25, 42), (31, 25), (32, 25), (25, 39), (13, 42), (24, 42), (25, 32), (32, 25), (12, 42), (16, 42), (14, 42), (28, 25), (33, 25), (27, 25), (20, 42), (37, 25), (25, 32), (25, 41), (41, 25), (30, 25), (23, 42), (20, 42), (31, 25), (15, 42), (25, 35), (22, 42), (39, 25), (25, 32), (31, 25), (30, 25), (25, 37), (25, 29), (23, 42), (26, 25), (27, 25), (25, 26), (35, 25), (21, 42), (38, 25), (33, 25), (42, 22), (28, 25), (18, 42), (27, 25), (29, 25), (42, 22), (14, 42), (29, 25), (25, 29), (25, 31), (25, 34), (41, 25), (25, 32), (30, 25), (25, 28), (25, 39), (25, 40), (25, 35), (25, 33), (25, 35), (25, 29), (30, 25), (30, 25), (28, 25), (19, 42), (34, 25), (40, 25), (36, 25), (25, 27), (38, 25), (17, 42), (40, 25), (32, 25), (26, 25), (37, 25), (36, 25), (42, 23), (25, 42), (39, 25)],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 1, 1120, 800), (1, 1, 800, 1199), (1, 1, 800, 1224), (1, 1, 800, 1196), (1, 1, 800, 1067), (1, 1, 800, 1320), (1, 1, 800, 1002), (1, 1, 1199, 800), (1, 1, 1067, 800), (1, 1, 800, 1202), (1, 1, 1140, 800), (1, 1, 800, 946), (1, 1, 800, 1024), (1, 1, 800, 1108), (1, 1, 800, 1205), (1, 1, 868, 800), (1, 1, 808, 800), (1, 1, 800, 1280), (1, 1, 800, 1185), (1, 1, 773, 1333), (1, 1, 800, 1140), (1, 1, 1205, 800), (1, 1, 881, 800), (1, 1, 750, 1333), (1, 1, 800, 800), (1, 1, 1283, 800), (1, 1, 800, 1208), (1, 1, 800, 1128), (1, 1, 800, 1164), (1, 1, 800, 1129), (1, 1, 800, 1198), (1, 1, 764, 1333), (1, 1, 1193, 800), (1, 1, 1201, 800), (1, 1, 800, 1201), (1, 1, 800, 1166), (1, 1, 1064, 800), (1, 1, 1202, 800), (1, 1, 800, 1299), (1, 1, 604, 1333), (1, 1, 800, 1278), (1, 1, 1203, 800), (1, 1, 800, 1313), (1, 1, 800, 1071), (1, 1, 1231, 800), (1, 1, 1196, 800), (1, 1, 800, 1156), (1, 1, 1120, 800), (1, 1, 800, 1194), (1, 1, 800, 1065), (1, 1, 800, 1060), (1, 1, 800, 809), (1, 1, 800, 1051), (1, 1, 800, 1069), (1, 1, 762, 1333), (1, 1, 1208, 800), (1, 1, 800, 1000), (1, 1, 800, 1135), (1, 1, 800, 1267), (1, 1, 800, 1240), (1, 1, 800, 1120), (1, 1, 1194, 800), (1, 1, 800, 943), (1, 1, 979, 800), (1, 1, 800, 1193), (1, 1, 800, 1080), (1, 1, 752, 1333), (1, 1, 1333, 752), (1, 1, 1071, 800), (1, 1, 800, 1174), (1, 1, 1156, 800), (1, 1, 800, 1290), (1, 1, 800, 1242), (1, 1, 741, 1333), (1, 1, 800, 1293), (1, 1, 800, 1210), (1, 1, 800, 970), (1, 1, 800, 996), (1, 1, 1270, 800), (1, 1, 800, 1303), (1, 1, 689, 1333), (1, 1, 800, 1072), (1, 1, 856, 800), (1, 1, 800, 1252), (1, 1, 800, 1094), (1, 1, 800, 1064), (1, 1, 1246, 800), (1, 1, 800, 839), (1, 1, 969, 800), (1, 1, 1026, 800), (1, 1, 1333, 748), (1, 1, 800, 1076), (1, 1, 1145, 800), (1, 1, 1118, 800), (1, 1, 610, 1333), (1, 1, 1333, 798), (1, 1, 1075, 800), (1, 1, 859, 800), (1, 1, 800, 1062), (1, 1, 800, 1270), (1, 1, 716, 1333), (1, 1, 800, 1087), (1, 1, 800, 1058), (1, 1, 656, 1333), (1, 1, 1225, 800), (1, 1, 970, 800), (1, 1, 800, 801), (1, 1, 1002, 800), (1, 1, 800, 1283), (1, 1, 800, 1250), (1, 1, 800, 1081), (1, 1, 749, 1333), (1, 1, 800, 1180), (1, 1, 800, 1277), (1, 1, 1333, 797), (1, 1, 800, 1039), (1, 1, 1143, 800), (1, 1, 800, 923), (1, 1, 800, 909), (1, 1, 800, 1089), (1, 1, 800, 990), (1, 1, 869, 800), (1, 1, 1333, 598), (1, 1, 800, 1216), (1, 1, 1109, 800), (1, 1, 800, 1306), (1, 1, 1320, 800), (1, 1, 1000, 800), (1, 1, 1190, 800), (1, 1, 1169, 800), (1, 1, 800, 892), (1, 1, 800, 905), (1, 1, 800, 1118), (1, 1, 662, 1333), (1, 1, 1133, 800), (1, 1, 1049, 800), (1, 1, 800, 1190), (1, 1, 800, 1177), (1, 1, 548, 1333), (1, 1, 800, 1325), (1, 1, 800, 955), (1, 1, 1036, 800), (1, 1, 698, 1333), (1, 1, 1333, 800), (1, 1, 667, 1333), (1, 1, 800, 931), (1, 1, 800, 1255), (1, 1, 800, 1145), (1, 1, 800, 985), (1, 1, 800, 966), (1, 1, 1080, 800), (1, 1, 1210, 800), (1, 1, 1333, 750), (1, 1, 798, 1333), (1, 1, 800, 1032), (1, 1, 800, 1161), (1, 1, 748, 1333), (1, 1, 1198, 800), (1, 1, 658, 1333), (1, 1, 800, 1286), (1, 1, 746, 1333), (1, 1, 800, 1261), (1, 1, 800, 1222), (1, 1, 883, 800), (1, 1, 877, 800), (1, 1, 800, 862), (1, 1, 800, 1115), (1, 1, 800, 1231), (1, 1, 800, 1243), (1, 1, 714, 1333), (1, 1, 978, 800), (1, 1, 1188, 800), (1, 1, 983, 800), (1, 1, 800, 1200), (1, 1, 863, 800), (1, 1, 800, 1143), (1, 1, 1073, 800), (1, 1, 1053, 800), (1, 1, 800, 1223), (1, 1, 1008, 800), (1, 1, 1006, 800), (1, 1, 800, 1151), (1, 1, 885, 800), (1, 1, 1333, 633), (1, 1, 800, 932), (1, 1, 800, 803), (1, 1, 1069, 800), (1, 1, 800, 1050), (1, 1, 800, 1188), (1, 1, 800, 1117), (1, 1, 1103, 800), (1, 1, 550, 1333), (1, 1, 800, 1182), (1, 1, 800, 938), (1, 1, 800, 1014), (1, 1, 955, 800), (1, 1, 1166, 800), (1, 1, 800, 1124), (1, 1, 1333, 787), (1, 1, 1274, 800), (1, 1, 800, 1249), (1, 1, 1228, 800), (1, 1, 1130, 800), (1, 1, 964, 800), (1, 1, 824, 800), (1, 1, 800, 1169), (1, 1, 809, 800), (1, 1, 800, 1237), (1, 1, 800, 1130), (1, 1, 800, 1026), (1, 1, 800, 856), (1, 1, 1041, 800), (1, 1, 800, 1333), (1, 1, 771, 1333), (1, 1, 800, 1172), (1, 1, 800, 1148), (1, 1, 800, 1029), (1, 1, 800, 1016), (1, 1, 800, 1090), (1, 1, 800, 1158), (1, 1, 1200, 800), (1, 1, 800, 1103), (1, 1, 800, 976), (1, 1, 1092, 800), (1, 1, 733, 1333), (1, 1, 818, 800), (1, 1, 800, 1096), (1, 1, 803, 800), (1, 1, 800, 1106), (1, 1, 800, 1246), (1, 1, 702, 1333), (1, 1, 855, 800), (1, 1, 800, 1138), (1, 1, 1061, 800), (1, 1, 1220, 800), (1, 1, 800, 1070), (1, 1, 650, 1333), (1, 1, 800, 1092), (1, 1, 1258, 800), (1, 1, 800, 1191), (1, 1, 789, 1333), (1, 1, 679, 1333), (1, 1, 800, 846), (1, 1, 1187, 800), (1, 1, 1108, 800), (1, 1, 961, 800), (1, 1, 352, 1333), (1, 1, 800, 964), (1, 1, 800, 1045), (1, 1, 800, 1073), (1, 1, 800, 900), (1, 1, 1070, 800), (1, 1, 800, 983), (1, 1, 1115, 800), (1, 1, 794, 1333), (1, 1, 1078, 800), (1, 1, 800, 842), (1, 1, 800, 981), (1, 1, 800, 916), (1, 1, 800, 1053), (1, 1, 800, 1008), (1, 1, 800, 1101), (1, 1, 394, 1333), (1, 1, 1060, 800), (1, 1, 800, 841), (1, 1, 690, 1333), (1, 1, 1333, 617), (1, 1, 1163, 800), (1, 1, 1191, 800), (1, 1, 451, 1333), (1, 1, 727, 1333), (1, 1, 1333, 773), (1, 1, 800, 868), (1, 1, 627, 1333), (1, 1, 800, 899), (1, 1, 602, 1333), (1, 1, 800, 1309), (1, 1, 1213, 800), (1, 1, 1105, 800), (1, 1, 813, 800), (1, 1, 948, 800), (1, 1, 766, 1333), (1, 1, 1094, 800), (1, 1, 758, 1333), (1, 1, 1216, 800), (1, 1, 1255, 800), (1, 1, 800, 1219), (1, 1, 1113, 800), (1, 1, 800, 977), (1, 1, 1014, 800), (1, 1, 800, 1078), (1, 1, 1106, 800), (1, 1, 800, 1125), (1, 1, 800, 1042), (1, 1, 800, 1294), (1, 1, 787, 1333), (1, 1, 1051, 800), (1, 1, 800, 1020), (1, 1, 800, 1044), (1, 1, 800, 961), (1, 1, 800, 971), (1, 1, 777, 1333), (1, 1, 800, 874), (1, 1, 1058, 800), (1, 1, 800, 852), (1, 1, 1251, 800), (1, 1, 631, 1333), (1, 1, 800, 1225), (1, 1, 1182, 800), (1, 1, 691, 1333), (1, 1, 800, 913), (1, 1, 1096, 800), (1, 1, 800, 1154), (1, 1, 786, 1333), (1, 1, 1062, 800), (1, 1, 899, 800), (1, 1, 1330, 800), (1, 1, 950, 800), (1, 1, 800, 1133), (1, 1, 800, 1082), (1, 1, 800, 1043), (1, 1, 800, 1056), (1, 1, 800, 1047), (1, 1, 848, 800), (1, 1, 1333, 637), (1, 1, 929, 800), (1, 1, 820, 800), (1, 1, 800, 1153), (1, 1, 935, 800), (1, 1, 1087, 800), (1, 1, 1227, 800), (1, 1, 800, 1061), (1, 1, 685, 1333), (1, 1, 342, 1333), (1, 1, 1153, 800), (1, 1, 880, 800), (1, 1, 754, 1333), (1, 1, 800, 952), (1, 1, 810, 800), (1, 1, 800, 1114), (1, 1, 1333, 696), (1, 1, 918, 800), (1, 1, 623, 1333), (1, 1, 1089, 800), (1, 1, 605, 1333), (1, 1, 800, 848), (1, 1, 800, 1203), (1, 1, 496, 1333), (1, 1, 1034, 800), (1, 1, 654, 1333), (1, 1, 901, 800), (1, 1, 800, 1323), (1, 1, 894, 800), (1, 1, 331, 1333), (1, 1, 800, 1022), (1, 1, 633, 1333), (1, 1, 664, 1333), (1, 1, 800, 871), (1, 1, 931, 800), (1, 1, 800, 1213), (1, 1, 988, 800), (1, 1, 1333, 746), (1, 1, 1003, 800), (1, 1, 800, 1028), (1, 1, 913, 800), (1, 1, 800, 1099), (1, 1, 800, 1330), (1, 1, 1333, 775), (1, 1, 800, 1296), (1, 1, 731, 1333), (1, 1, 644, 1333), (1, 1, 800, 933), (1, 1, 800, 894), (1, 1, 800, 1282), (1, 1, 1333, 685), (1, 1, 585, 1333), (1, 1, 800, 879), (1, 1, 1237, 800), (1, 1, 800, 804), (1, 1, 800, 1183), (1, 1, 784, 1333), (1, 1, 806, 800), (1, 1, 377, 1333), (1, 1, 1043, 800), (1, 1, 800, 1316), (1, 1, 800, 1206), (1, 1, 1280, 800), (1, 1, 800, 1234), (1, 1, 1219, 800), (1, 1, 800, 926), (1, 1, 1076, 800), (1, 1, 1012, 800), (1, 1, 737, 1333), (1, 1, 800, 998), (1, 1, 660, 1333), (1, 1, 800, 1010), (1, 1, 756, 1333), (1, 1, 994, 800), (1, 1, 924, 800), (1, 1, 1148, 800), (1, 1, 800, 853), (1, 1, 800, 950), (1, 1, 512, 1333), (1, 1, 800, 1049), (1, 1, 873, 800), (1, 1, 796, 1333), (1, 1, 1333, 789), (1, 1, 800, 823), (1, 1, 980, 800), (1, 1, 800, 1036), (1, 1, 800, 1228), (1, 1, 1161, 800), (1, 1, 802, 800), (1, 1, 1333, 597), (1, 1, 800, 1066), (1, 1, 1085, 800), (1, 1, 987, 800), (1, 1, 1299, 800), (1, 1, 1015, 800), (1, 1, 1333, 512), (1, 1, 800, 918), (1, 1, 874, 800), (1, 1, 801, 800), (1, 1, 1306, 800), (1, 1, 1296, 800), (1, 1, 800, 1212), (1, 1, 800, 1005), (1, 1, 800, 1034), (1, 1, 652, 1333), (1, 1, 769, 1333), (1, 1, 800, 887), (1, 1, 800, 859), (1, 1, 800, 1163), (1, 1, 800, 886), (1, 1, 897, 800), (1, 1, 800, 968), (1, 1, 941, 800), (1, 1, 797, 1333), (1, 1, 968, 800), (1, 1, 1024, 800), (1, 1, 800, 1220), (1, 1, 404, 1333), (1, 1, 739, 1333), (1, 1, 800, 994), (1, 1, 1018, 800), (1, 1, 362, 1333), (1, 1, 506, 1333), (1, 1, 446, 1333), (1, 1, 875, 800), (1, 1, 1055, 800), (1, 1, 849, 800), (1, 1, 612, 1333), (1, 1, 1183, 800), (1, 1, 800, 1018), (1, 1, 800, 1295), (1, 1, 1293, 800), (1, 1, 946, 800), (1, 1, 725, 1333), (1, 1, 624, 1333), (1, 1, 962, 800), (1, 1, 477, 1333), (1, 1, 800, 1111), (1, 1, 704, 1333), (1, 1, 1222, 800), (1, 1, 800, 1003), (1, 1, 972, 800), (1, 1, 934, 800), (1, 1, 800, 1173), (1, 1, 800, 924), (1, 1, 717, 1333), (1, 1, 821, 800), (1, 1, 853, 800), (1, 1, 800, 816), (1, 1, 1093, 800), (1, 1, 648, 1333), (1, 1, 1212, 800), (1, 1, 1056, 800), (1, 1, 1333, 673), (1, 1, 871, 800), (1, 1, 555, 1333), (1, 1, 842, 800), (1, 1, 908, 800), (1, 1, 1333, 702), (1, 1, 444, 1333), (1, 1, 921, 800), (1, 1, 800, 921), (1, 1, 800, 992), (1, 1, 800, 1085), (1, 1, 1302, 800), (1, 1, 800, 1004), (1, 1, 943, 800), (1, 1, 800, 889), (1, 1, 800, 1238), (1, 1, 800, 1254), (1, 1, 800, 1113), (1, 1, 800, 1041), (1, 1, 800, 1093), (1, 1, 800, 908), (1, 1, 933, 800), (1, 1, 936, 800), (1, 1, 872, 800), (1, 1, 606, 1333), (1, 1, 1082, 800), (1, 1, 1267, 800), (1, 1, 1127, 800), (1, 1, 800, 845), (1, 1, 1185, 800), (1, 1, 527, 1333), (1, 1, 1252, 800), (1, 1, 1022, 800), (1, 1, 823, 800), (1, 1, 1174, 800), (1, 1, 1146, 800), (1, 1, 1333, 736), (1, 1, 781, 1333), (1, 1, 1234, 800)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'sub': dict(
        name=["sub"],
        interface=["torch.Tensor"],
        para=dict(
            other=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 35, 25), (1, 25, 38), (1, 25, 39), (1, 25, 34), (1, 25, 42), (1, 25, 32), (1, 38, 25), (1, 34, 25), (1, 36, 25), (1, 25, 30), (1, 25, 35), (1, 28, 25), (1, 26, 25), (1, 25, 40), (1, 25, 36), (1, 24, 42), (1, 25, 25), (1, 41, 25), (1, 25, 37), (1, 25, 41), (1, 19, 42), (1, 39, 25), (1, 35, 25), (1, 25, 26), (1, 25, 33), (1, 31, 25), (1, 42, 24), (1, 37, 25), (1, 25, 31), (1, 40, 25), (1, 22, 42), (1, 27, 25), (1, 25, 27), (1, 33, 25), (1, 20, 42), (1, 42, 25), (1, 23, 42), (1, 21, 42), (1, 32, 25), (1, 25, 29), (1, 42, 19), (1, 25, 28), (1, 18, 42), (1, 42, 20), (1, 30, 25), (1, 11, 42), (1, 13, 42), (1, 15, 42), (1, 29, 25), (1, 42, 22), (1, 16, 42), (1, 12, 42), (1, 42, 16), (1, 14, 42), (1, 17, 42), (1, 42, 23)],
                    "dtype": [Dtype.int32],
                    "gen_fn": Genfunc.randint,
                },
            ],
        ),
    ),

    'cumsum': dict(
        name=["cumsum"],
        interface=["torch.Tensor"],
        para=dict(
            dim=[1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2],
            dtype=['Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32', 'Dtype.float32'],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 35, 25), (2, 35, 25), (1, 25, 38), (1, 25, 38), (1, 25, 39), (1, 25, 39), (1, 25, 34), (1, 25, 34), (1, 25, 42), (1, 25, 42), (1, 25, 32), (1, 25, 32), (1, 38, 25), (1, 38, 25), (1, 34, 25), (1, 34, 25), (1, 36, 25), (1, 36, 25), (1, 25, 30), (1, 25, 30), (1, 25, 35), (1, 25, 35), (1, 28, 25), (1, 28, 25), (1, 26, 25), (1, 26, 25), (1, 25, 40), (1, 25, 40), (1, 25, 36), (1, 25, 36), (1, 24, 42), (1, 24, 42), (1, 25, 25), (1, 25, 25), (1, 41, 25), (1, 41, 25), (1, 25, 37), (1, 25, 37), (1, 25, 41), (1, 25, 41), (1, 19, 42), (1, 19, 42), (1, 39, 25), (1, 39, 25), (1, 35, 25), (1, 35, 25), (1, 25, 26), (1, 25, 26), (1, 25, 33), (1, 25, 33), (1, 31, 25), (1, 31, 25), (1, 42, 24), (1, 42, 24), (1, 37, 25), (1, 37, 25), (1, 25, 31), (1, 25, 31), (1, 40, 25), (1, 40, 25), (1, 22, 42), (1, 22, 42), (1, 27, 25), (1, 27, 25), (1, 25, 27), (1, 25, 27), (1, 33, 25), (1, 33, 25), (1, 20, 42), (1, 20, 42), (1, 42, 25), (1, 42, 25), (1, 23, 42), (1, 23, 42), (1, 21, 42), (1, 21, 42), (1, 32, 25), (1, 32, 25), (1, 25, 29), (1, 25, 29), (1, 42, 19), (1, 42, 19), (1, 25, 28), (1, 25, 28), (1, 18, 42), (1, 18, 42), (1, 42, 20), (1, 42, 20), (1, 30, 25), (1, 30, 25), (1, 11, 42), (1, 11, 42), (1, 13, 42), (1, 13, 42), (1, 15, 42), (1, 15, 42), (1, 29, 25), (1, 29, 25), (1, 42, 22), (1, 42, 22), (1, 16, 42), (1, 16, 42), (1, 12, 42), (1, 12, 42), (1, 42, 16), (1, 42, 16), (1, 14, 42), (1, 14, 42), (1, 17, 42), (1, 17, 42), (1, 42, 23), (1, 42, 23)],
                    "dtype": [Dtype.int32],
                    "gen_fn": Genfunc.randint,
                },
            ],
        ),
    ),

    'add_1': dict(
        name=["add"],
        interface=["torch.Tensor"],
        para=dict(
            other=[0.0, 1e-06, 1e-06, 1e-06, 0.0, 1e-06, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06, 0.0, 1e-06],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 35, 25), (2, 1, 25), (2, 35, 1), (), (1, 25, 38), (1, 1, 38), (1, 25, 1), (1, 25, 39), (1, 1, 39), (1, 25, 34), (1, 1, 34), (1, 25, 42), (1, 1, 42), (1, 25, 32), (1, 1, 32), (1, 38, 25), (1, 1, 25), (1, 38, 1), (1, 34, 25), (1, 34, 1), (1, 36, 25), (1, 36, 1), (1, 25, 30), (1, 1, 30), (1, 25, 35), (1, 1, 35), (1, 28, 25), (1, 28, 1), (1, 26, 25), (1, 26, 1), (1, 25, 40), (1, 1, 40), (1, 25, 36), (1, 1, 36), (1, 24, 42), (1, 24, 1), (1, 25, 25), (1, 41, 25), (1, 41, 1), (1, 25, 37), (1, 1, 37), (1, 25, 41), (1, 1, 41), (1, 19, 42), (1, 19, 1), (1, 39, 25), (1, 39, 1), (1, 35, 25), (1, 35, 1), (1, 25, 26), (1, 1, 26), (1, 25, 33), (1, 1, 33), (1, 31, 25), (1, 31, 1), (1, 42, 24), (1, 1, 24), (1, 42, 1), (1, 37, 25), (1, 37, 1), (1, 25, 31), (1, 1, 31), (1, 40, 25), (1, 40, 1), (1, 22, 42), (1, 22, 1), (1, 27, 25), (1, 27, 1), (1, 25, 27), (1, 1, 27), (1, 33, 25), (1, 33, 1), (1, 20, 42), (1, 20, 1), (1, 42, 25), (1, 23, 42), (1, 23, 1), (1, 21, 42), (1, 21, 1), (1, 32, 25), (1, 32, 1), (1, 25, 29), (1, 1, 29), (1, 42, 19), (1, 1, 19), (1, 25, 28), (1, 1, 28), (1, 18, 42), (1, 18, 1), (1, 42, 20), (1, 1, 20), (1, 30, 25), (1, 30, 1), (1, 11, 42), (1, 11, 1), (1, 13, 42), (1, 13, 1), (1, 15, 42), (1, 15, 1), (1, 29, 25), (1, 29, 1), (1, 42, 22), (1, 1, 22), (1, 16, 42), (1, 16, 1), (1, 12, 42), (1, 12, 1), (1, 42, 16), (1, 1, 16), (1, 14, 42), (1, 14, 1), (1, 17, 42), (1, 17, 1), (1, 42, 23), (1, 1, 23)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'div': dict(
        name=["div"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 35, 25), (2, 35, 25), (2, 35, 25, 1), (1, 4), (100, 1), (11, 4), (100, 11), (200,), (1, 25, 38), (1, 25, 38), (1, 25, 38, 1), (1, 25, 39), (1, 25, 39), (1, 25, 39, 1), (1, 25, 34), (1, 25, 34), (1, 25, 34, 1), (1, 25, 42), (1, 25, 42), (1, 25, 42, 1), (1, 25, 32), (1, 25, 32), (1, 25, 32, 1), (1, 38, 25), (1, 38, 25), (1, 38, 25, 1), (1, 34, 25), (1, 34, 25), (1, 34, 25, 1), (1, 36, 25), (1, 36, 25), (1, 36, 25, 1), (1, 25, 30), (1, 25, 30), (1, 25, 30, 1), (1, 25, 35), (1, 25, 35), (1, 25, 35, 1), (1, 28, 25), (1, 28, 25), (1, 28, 25, 1), (1, 26, 25), (1, 26, 25), (1, 26, 25, 1), (1, 25, 40), (1, 25, 40), (1, 25, 40, 1), (1, 25, 36), (1, 25, 36), (1, 25, 36, 1), (1, 24, 42), (1, 24, 42), (1, 24, 42, 1), (1, 25, 25), (1, 25, 25), (1, 25, 25, 1), (1, 41, 25), (1, 41, 25), (1, 41, 25, 1), (1, 25, 37), (1, 25, 37), (1, 25, 37, 1), (1, 25, 41), (1, 25, 41), (1, 25, 41, 1), (1, 19, 42), (1, 19, 42), (1, 19, 42, 1), (1, 39, 25), (1, 39, 25), (1, 39, 25, 1), (1, 35, 25), (1, 35, 25), (1, 35, 25, 1), (1, 25, 26), (1, 25, 26), (1, 25, 26, 1), (1, 25, 33), (1, 25, 33), (1, 25, 33, 1), (1, 31, 25), (1, 31, 25), (1, 31, 25, 1), (1, 42, 24), (1, 42, 24), (1, 42, 24, 1), (1, 37, 25), (1, 37, 25), (1, 37, 25, 1), (1, 25, 31), (1, 25, 31), (1, 25, 31, 1), (1, 40, 25), (1, 40, 25), (1, 40, 25, 1), (1, 22, 42), (1, 22, 42), (1, 22, 42, 1), (1, 27, 25), (1, 27, 25), (1, 27, 25, 1), (1, 25, 27), (1, 25, 27), (1, 25, 27, 1), (1, 33, 25), (1, 33, 25), (1, 33, 25, 1), (1, 20, 42), (1, 20, 42), (1, 20, 42, 1), (1, 42, 25), (1, 42, 25), (1, 42, 25, 1), (1, 23, 42), (1, 23, 42), (1, 23, 42, 1), (1, 21, 42), (1, 21, 42), (1, 21, 42, 1), (1, 32, 25), (1, 32, 25), (1, 32, 25, 1), (1, 25, 29), (1, 25, 29), (1, 25, 29, 1), (1, 42, 19), (1, 42, 19), (1, 42, 19, 1), (1, 25, 28), (1, 25, 28), (1, 25, 28, 1), (1, 18, 42), (1, 18, 42), (1, 18, 42, 1), (1, 42, 20), (1, 42, 20), (1, 42, 20, 1), (1, 30, 25), (1, 30, 25), (1, 30, 25, 1), (1, 11, 42), (1, 11, 42), (1, 11, 42, 1), (1, 13, 42), (1, 13, 42), (1, 13, 42, 1), (1, 15, 42), (1, 15, 42), (1, 15, 42, 1), (1, 29, 25), (1, 29, 25), (1, 29, 25, 1), (1, 42, 22), (1, 42, 22), (1, 42, 22, 1), (1, 16, 42), (1, 16, 42), (1, 16, 42, 1), (1, 12, 42), (1, 12, 42), (1, 12, 42, 1), (1, 42, 16), (1, 42, 16), (1, 42, 16, 1), (1, 14, 42), (1, 14, 42), (1, 14, 42, 1), (1, 17, 42), (1, 17, 42), (1, 17, 42, 1), (1, 42, 23), (1, 42, 23), (1, 42, 23, 1)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["other"],
                    "shape": [(2, 1, 25), (2, 35, 1), (128,), (1, 4), (100, 1), (1, 4), (100, 11), (200,), (1, 1, 38), (1, 25, 1), (128,), (1, 1, 39), (1, 25, 1), (128,), (1, 1, 34), (1, 25, 1), (128,), (1, 1, 42), (1, 25, 1), (128,), (1, 1, 32), (1, 25, 1), (128,), (1, 1, 25), (1, 38, 1), (128,), (1, 1, 25), (1, 34, 1), (128,), (1, 1, 25), (1, 36, 1), (128,), (1, 1, 30), (1, 25, 1), (128,), (1, 1, 35), (1, 25, 1), (128,), (1, 1, 25), (1, 28, 1), (128,), (1, 1, 25), (1, 26, 1), (128,), (1, 1, 40), (1, 25, 1), (128,), (1, 1, 36), (1, 25, 1), (128,), (1, 1, 42), (1, 24, 1), (128,), (1, 1, 25), (1, 25, 1), (128,), (1, 1, 25), (1, 41, 1), (128,), (1, 1, 37), (1, 25, 1), (128,), (1, 1, 41), (1, 25, 1), (128,), (1, 1, 42), (1, 19, 1), (128,), (1, 1, 25), (1, 39, 1), (128,), (1, 1, 25), (1, 35, 1), (128,), (1, 1, 26), (1, 25, 1), (128,), (1, 1, 33), (1, 25, 1), (128,), (1, 1, 25), (1, 31, 1), (128,), (1, 1, 24), (1, 42, 1), (128,), (1, 1, 25), (1, 37, 1), (128,), (1, 1, 31), (1, 25, 1), (128,), (1, 1, 25), (1, 40, 1), (128,), (1, 1, 42), (1, 22, 1), (128,), (1, 1, 25), (1, 27, 1), (128,), (1, 1, 27), (1, 25, 1), (128,), (1, 1, 25), (1, 33, 1), (128,), (1, 1, 42), (1, 20, 1), (128,), (1, 1, 25), (1, 42, 1), (128,), (1, 1, 42), (1, 23, 1), (128,), (1, 1, 42), (1, 21, 1), (128,), (1, 1, 25), (1, 32, 1), (128,), (1, 1, 29), (1, 25, 1), (128,), (1, 1, 19), (1, 42, 1), (128,), (1, 1, 28), (1, 25, 1), (128,), (1, 1, 42), (1, 18, 1), (128,), (1, 1, 20), (1, 42, 1), (128,), (1, 1, 25), (1, 30, 1), (128,), (1, 1, 42), (1, 11, 1), (128,), (1, 1, 42), (1, 13, 1), (128,), (1, 1, 42), (1, 15, 1), (128,), (1, 1, 25), (1, 29, 1), (128,), (1, 1, 22), (1, 42, 1), (128,), (1, 1, 42), (1, 16, 1), (128,), (1, 1, 42), (1, 12, 1), (128,), (1, 1, 16), (1, 42, 1), (128,), (1, 1, 42), (1, 14, 1), (128,), (1, 1, 42), (1, 17, 1), (128,), (1, 1, 23), (1, 42, 1), (128,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'mul': dict(
        name=["mul"],
        interface=["torch.Tensor"],
        para=dict(
            other=[6.283185307179586, 1.0, 5.0, 2.0, 1.0, 5.0, 2.0, 0.1, 6.283185307179586, 1199, 800, 6.283185307179586, 1224, 1196, 6.283185307179586, 1067, 6.283185307179586, 1320, 6.283185307179586, 1002, 6.283185307179586, 6.283185307179586, 1202, 6.283185307179586, 1140, 6.283185307179586, 946, 1024, 6.283185307179586, 1108, 1205, 6.283185307179586, 868, 6.283185307179586, 808, 6.283185307179586, 1280, 1185, 1333, 773, 6.283185307179586, 881, 6.283185307179586, 750, 6.283185307179586, 6.283185307179586, 1283, 1208, 1128, 6.283185307179586, 1164, 1129, 1198, 764, 1193, 1201, 1166, 1064, 6.283185307179586, 1299, 6.283185307179586, 604, 1278, 1203, 1313, 1071, 6.283185307179586, 1231, 1156, 6.283185307179586, 1120, 1194, 1065, 1060, 6.283185307179586, 809, 6.283185307179586, 1051, 1069, 762, 1000, 1135, 1267, 1240, 943, 6.283185307179586, 979, 1080, 752, 6.283185307179586, 1174, 6.283185307179586, 1290, 1242, 741, 1293, 1210, 6.283185307179586, 970, 996, 6.283185307179586, 1270, 1303, 6.283185307179586, 689, 1072, 6.283185307179586, 856, 1252, 1094, 1246, 6.283185307179586, 839, 969, 6.283185307179586, 1026, 748, 1076, 1145, 1118, 6.283185307179586, 610, 6.283185307179586, 798, 1075, 859, 1062, 6.283185307179586, 716, 1087, 1058, 6.283185307179586, 656, 1225, 801, 6.283185307179586, 1250, 1081, 749, 1180, 1277, 797, 1039, 1143, 6.283185307179586, 923, 909, 1089, 990, 869, 6.283185307179586, 598, 1216, 1109, 1306, 1190, 1169, 6.283185307179586, 892, 905, 662, 1133, 1049, 1177, 6.283185307179586, 548, 1325, 955, 1036, 698, 667, 931, 1255, 985, 966, 1032, 1161, 658, 1286, 746, 1261, 1222, 883, 877, 862, 1115, 1243, 714, 978, 1188, 983, 1200, 863, 1073, 1053, 1223, 1008, 1006, 1151, 885, 6.283185307179586, 633, 932, 803, 1050, 1117, 1103, 550, 1182, 938, 1014, 6.283185307179586, 1124, 787, 1274, 1249, 1228, 1130, 964, 824, 1237, 1041, 771, 1172, 1148, 1029, 1016, 1090, 1158, 976, 1092, 733, 818, 1096, 1106, 702, 855, 1138, 1061, 1220, 1070, 650, 1258, 1191, 789, 679, 846, 1187, 961, 6.283185307179586, 352, 1045, 900, 794, 1078, 842, 981, 916, 1101, 6.283185307179586, 394, 841, 690, 617, 1163, 6.283185307179586, 451, 727, 627, 899, 602, 1309, 1213, 1105, 813, 948, 766, 758, 1219, 1113, 977, 1125, 1042, 1294, 1020, 1044, 971, 777, 874, 852, 1251, 631, 691, 913, 1154, 786, 6.283185307179586, 1330, 950, 1082, 1043, 1056, 1047, 848, 637, 929, 820, 1153, 935, 1227, 685, 342, 880, 754, 952, 810, 1114, 6.283185307179586, 696, 918, 623, 605, 6.283185307179586, 496, 1034, 654, 901, 1323, 894, 331, 1022, 664, 871, 988, 1003, 1028, 1099, 775, 1296, 731, 644, 933, 1282, 585, 879, 804, 1183, 784, 806, 6.283185307179586, 377, 1316, 1206, 1234, 926, 1012, 737, 998, 660, 1010, 756, 994, 924, 853, 512, 873, 796, 823, 980, 802, 597, 1066, 1085, 987, 1015, 6.283185307179586, 1212, 1005, 652, 769, 887, 886, 897, 968, 941, 404, 739, 1018, 362, 506, 6.283185307179586, 446, 875, 1055, 849, 612, 1295, 725, 624, 962, 477, 1111, 704, 972, 934, 1173, 717, 821, 816, 1093, 648, 673, 555, 908, 444, 921, 992, 1302, 1004, 889, 1238, 1254, 936, 872, 606, 1127, 845, 6.283185307179586, 527, 1146, 6.283185307179586, 736, 781],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 35, 25), (100, 1), (100, 1), (100, 1), (100, 11), (100, 11), (100, 11), (), (1, 25, 38), (100, 2), (100, 2), (1, 25, 39), (100, 2), (100, 2), (1, 25, 34), (100, 2), (1, 25, 42), (100, 2), (1, 25, 32), (100, 2), (1, 38, 25), (1, 34, 25), (100, 2), (1, 36, 25), (100, 2), (1, 25, 30), (100, 2), (100, 2), (1, 25, 35), (100, 2), (100, 2), (1, 28, 25), (100, 2), (1, 26, 25), (100, 2), (1, 25, 40), (100, 2), (100, 2), (100, 2), (100, 2), (1, 25, 36), (100, 2), (1, 24, 42), (100, 2), (1, 25, 25), (1, 41, 25), (100, 2), (100, 2), (100, 2), (1, 25, 37), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 25, 41), (100, 2), (1, 19, 42), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 39, 25), (100, 2), (100, 2), (1, 35, 25), (100, 2), (100, 2), (100, 2), (100, 2), (1, 25, 26), (100, 2), (1, 25, 33), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 31, 25), (100, 2), (100, 2), (100, 2), (1, 42, 24), (100, 2), (1, 37, 25), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 25, 31), (100, 2), (100, 2), (1, 40, 25), (100, 2), (100, 2), (1, 22, 42), (100, 2), (100, 2), (1, 27, 25), (100, 2), (100, 2), (100, 2), (100, 2), (1, 25, 27), (100, 2), (100, 2), (1, 33, 25), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 20, 42), (100, 2), (1, 42, 25), (100, 2), (100, 2), (100, 2), (100, 2), (1, 23, 42), (100, 2), (100, 2), (100, 2), (1, 21, 42), (100, 2), (100, 2), (100, 2), (1, 32, 25), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 25, 29), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 42, 19), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 25, 28), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 18, 42), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 42, 20), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 30, 25), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 11, 42), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 13, 42), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 15, 42), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 29, 25), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 42, 22), (100, 2), (100, 2), (100, 2), (100, 2), (1, 16, 42), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 12, 42), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 42, 16), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 14, 42), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (1, 17, 42), (100, 2), (100, 2), (1, 42, 23), (100, 2), (100, 2)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'arange': dict(
        name=["arange"],
        interface=["torch"],
        para=dict(
            end=[128],
            dtype=['Dtype.float32'],
        ),
    ),

    'div_1': dict(
        name=["div"],
        interface=["torch.Tensor"],
        para=dict(
            other=[2],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(128,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'div_2': dict(
        name=["div"],
        interface=["torch"],
        para=dict(
            other=[2],
            rounding_mode=['trunc'],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(128,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'mul_1': dict(
        name=["mul"],
        interface=["torch.Tensor"],
        para=dict(
            other=[2, 0.5, 1.0, 0.5, 2.0, 5.0],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(128,), (100, 1), (), (200, 1), (), ()],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'div_3': dict(
        name=["div"],
        interface=["torch.Tensor"],
        para=dict(
            other=[128, 5.656854249492381, 8, 5.656854249492381, 8, 8, 2, 2, 30.80000011920929, 12.00000011920929, 5.656854249492381, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8, 5.656854249492381, 8, 8],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(128,), (16, 875, 32), (2, 875, 875), (16, 100, 32), (2, 100, 100), (2, 100, 875), (1, 1), (11, 1), (), (), (8, 950, 32), (1, 950, 950), (8, 100, 32), (1, 100, 100), (1, 100, 950), (8, 975, 32), (1, 975, 975), (1, 100, 975), (8, 850, 32), (1, 850, 850), (1, 100, 850), (8, 1050, 32), (1, 1050, 1050), (1, 100, 1050), (8, 800, 32), (1, 800, 800), (1, 100, 800), (8, 900, 32), (1, 900, 900), (1, 100, 900), (8, 750, 32), (1, 750, 750), (1, 100, 750), (8, 875, 32), (1, 875, 875), (1, 100, 875), (8, 700, 32), (1, 700, 700), (1, 100, 700), (8, 650, 32), (1, 650, 650), (1, 100, 650), (8, 1000, 32), (1, 1000, 1000), (1, 100, 1000), (8, 1008, 32), (1, 1008, 1008), (1, 100, 1008), (8, 625, 32), (1, 625, 625), (1, 100, 625), (8, 1025, 32), (1, 1025, 1025), (1, 100, 1025), (8, 925, 32), (1, 925, 925), (1, 100, 925), (8, 798, 32), (1, 798, 798), (1, 100, 798), (8, 825, 32), (1, 825, 825), (1, 100, 825), (8, 775, 32), (1, 775, 775), (1, 100, 775), (8, 924, 32), (1, 924, 924), (1, 100, 924), (8, 675, 32), (1, 675, 675), (1, 100, 675), (8, 840, 32), (1, 840, 840), (1, 100, 840), (8, 966, 32), (1, 966, 966), (1, 100, 966), (8, 882, 32), (1, 882, 882), (1, 100, 882), (8, 725, 32), (1, 725, 725), (1, 100, 725), (8, 756, 32), (1, 756, 756), (1, 100, 756), (8, 462, 32), (1, 462, 462), (1, 100, 462), (8, 546, 32), (1, 546, 546), (1, 100, 546), (8, 630, 32), (1, 630, 630), (1, 100, 630), (8, 672, 32), (1, 672, 672), (1, 100, 672), (8, 504, 32), (1, 504, 504), (1, 100, 504), (8, 588, 32), (1, 588, 588), (1, 100, 588), (8, 714, 32), (1, 714, 714), (1, 100, 714)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'pow': dict(
        name=["pow"],
        interface=["torch.Tensor"],
        para=dict(
            exponent=[10000],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(128,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'pow_1': dict(
        name=["pow"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [()],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["exponent"],
                    "shape": [(128,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'sin': dict(
        name=["sin"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 35, 25, 64), (1, 25, 38, 64), (1, 25, 39, 64), (1, 25, 34, 64), (1, 25, 42, 64), (1, 25, 32, 64), (1, 38, 25, 64), (1, 34, 25, 64), (1, 36, 25, 64), (1, 25, 30, 64), (1, 25, 35, 64), (1, 28, 25, 64), (1, 26, 25, 64), (1, 25, 40, 64), (1, 25, 36, 64), (1, 24, 42, 64), (1, 25, 25, 64), (1, 41, 25, 64), (1, 25, 37, 64), (1, 25, 41, 64), (1, 19, 42, 64), (1, 39, 25, 64), (1, 35, 25, 64), (1, 25, 26, 64), (1, 25, 33, 64), (1, 31, 25, 64), (1, 42, 24, 64), (1, 37, 25, 64), (1, 25, 31, 64), (1, 40, 25, 64), (1, 22, 42, 64), (1, 27, 25, 64), (1, 25, 27, 64), (1, 33, 25, 64), (1, 20, 42, 64), (1, 42, 25, 64), (1, 23, 42, 64), (1, 21, 42, 64), (1, 32, 25, 64), (1, 25, 29, 64), (1, 42, 19, 64), (1, 25, 28, 64), (1, 18, 42, 64), (1, 42, 20, 64), (1, 30, 25, 64), (1, 11, 42, 64), (1, 13, 42, 64), (1, 15, 42, 64), (1, 29, 25, 64), (1, 42, 22, 64), (1, 16, 42, 64), (1, 12, 42, 64), (1, 42, 16, 64), (1, 14, 42, 64), (1, 17, 42, 64), (1, 42, 23, 64)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'cos': dict(
        name=["cos"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 35, 25, 64), (1, 25, 38, 64), (1, 25, 39, 64), (1, 25, 34, 64), (1, 25, 42, 64), (1, 25, 32, 64), (1, 38, 25, 64), (1, 34, 25, 64), (1, 36, 25, 64), (1, 25, 30, 64), (1, 25, 35, 64), (1, 28, 25, 64), (1, 26, 25, 64), (1, 25, 40, 64), (1, 25, 36, 64), (1, 24, 42, 64), (1, 25, 25, 64), (1, 41, 25, 64), (1, 25, 37, 64), (1, 25, 41, 64), (1, 19, 42, 64), (1, 39, 25, 64), (1, 35, 25, 64), (1, 25, 26, 64), (1, 25, 33, 64), (1, 31, 25, 64), (1, 42, 24, 64), (1, 37, 25, 64), (1, 25, 31, 64), (1, 40, 25, 64), (1, 22, 42, 64), (1, 27, 25, 64), (1, 25, 27, 64), (1, 33, 25, 64), (1, 20, 42, 64), (1, 42, 25, 64), (1, 23, 42, 64), (1, 21, 42, 64), (1, 32, 25, 64), (1, 25, 29, 64), (1, 42, 19, 64), (1, 25, 28, 64), (1, 18, 42, 64), (1, 42, 20, 64), (1, 30, 25, 64), (1, 11, 42, 64), (1, 13, 42, 64), (1, 15, 42, 64), (1, 29, 25, 64), (1, 42, 22, 64), (1, 16, 42, 64), (1, 12, 42, 64), (1, 42, 16, 64), (1, 14, 42, 64), (1, 17, 42, 64), (1, 42, 23, 64)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'stack': dict(
        name=["stack"],
        interface=["torch"],
        para=dict(
            dim=[4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["tensors"],
                    "shape": [((2, 35, 25, 64), (2, 35, 25, 64)), ((1, 25, 38, 64), (1, 25, 38, 64)), ((1, 25, 39, 64), (1, 25, 39, 64)), ((1, 25, 34, 64), (1, 25, 34, 64)), ((1, 25, 42, 64), (1, 25, 42, 64)), ((1, 25, 32, 64), (1, 25, 32, 64)), ((1, 38, 25, 64), (1, 38, 25, 64)), ((1, 34, 25, 64), (1, 34, 25, 64)), ((1, 36, 25, 64), (1, 36, 25, 64)), ((1, 25, 30, 64), (1, 25, 30, 64)), ((1, 25, 35, 64), (1, 25, 35, 64)), ((1, 28, 25, 64), (1, 28, 25, 64)), ((1, 26, 25, 64), (1, 26, 25, 64)), ((1, 25, 40, 64), (1, 25, 40, 64)), ((1, 25, 36, 64), (1, 25, 36, 64)), ((1, 24, 42, 64), (1, 24, 42, 64)), ((1, 25, 25, 64), (1, 25, 25, 64)), ((1, 41, 25, 64), (1, 41, 25, 64)), ((1, 25, 37, 64), (1, 25, 37, 64)), ((1, 25, 41, 64), (1, 25, 41, 64)), ((1, 19, 42, 64), (1, 19, 42, 64)), ((1, 39, 25, 64), (1, 39, 25, 64)), ((1, 35, 25, 64), (1, 35, 25, 64)), ((1, 25, 26, 64), (1, 25, 26, 64)), ((1, 25, 33, 64), (1, 25, 33, 64)), ((1, 31, 25, 64), (1, 31, 25, 64)), ((1, 42, 24, 64), (1, 42, 24, 64)), ((1, 37, 25, 64), (1, 37, 25, 64)), ((1, 25, 31, 64), (1, 25, 31, 64)), ((1, 40, 25, 64), (1, 40, 25, 64)), ((1, 22, 42, 64), (1, 22, 42, 64)), ((1, 27, 25, 64), (1, 27, 25, 64)), ((1, 25, 27, 64), (1, 25, 27, 64)), ((1, 33, 25, 64), (1, 33, 25, 64)), ((1, 20, 42, 64), (1, 20, 42, 64)), ((1, 42, 25, 64), (1, 42, 25, 64)), ((1, 23, 42, 64), (1, 23, 42, 64)), ((1, 21, 42, 64), (1, 21, 42, 64)), ((1, 32, 25, 64), (1, 32, 25, 64)), ((1, 25, 29, 64), (1, 25, 29, 64)), ((1, 42, 19, 64), (1, 42, 19, 64)), ((1, 25, 28, 64), (1, 25, 28, 64)), ((1, 18, 42, 64), (1, 18, 42, 64)), ((1, 42, 20, 64), (1, 42, 20, 64)), ((1, 30, 25, 64), (1, 30, 25, 64)), ((1, 11, 42, 64), (1, 11, 42, 64)), ((1, 13, 42, 64), (1, 13, 42, 64)), ((1, 15, 42, 64), (1, 15, 42, 64)), ((1, 29, 25, 64), (1, 29, 25, 64)), ((1, 42, 22, 64), (1, 42, 22, 64)), ((1, 16, 42, 64), (1, 16, 42, 64)), ((1, 12, 42, 64), (1, 12, 42, 64)), ((1, 42, 16, 64), (1, 42, 16, 64)), ((1, 14, 42, 64), (1, 14, 42, 64)), ((1, 17, 42, 64), (1, 17, 42, 64)), ((1, 42, 23, 64), (1, 42, 23, 64))],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
            seq_name='tensors',
        ),
    ),

    'cat': dict(
        name=["cat"],
        interface=["torch"],
        para=dict(
            dim=[3, -1, -1, -1, -1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["tensors"],
                    "shape": [((2, 35, 25, 128), (2, 35, 25, 128)), ((1, 1), (1, 1), (1, 1), (1, 1)), ((100, 1), (100, 1), (100, 1), (100, 1)), ((11, 1), (11, 1), (11, 1), (11, 1)), ((200, 1), (200, 1), (200, 1), (200, 1)), ((1, 25, 38, 128), (1, 25, 38, 128)), ((1, 25, 39, 128), (1, 25, 39, 128)), ((1, 25, 34, 128), (1, 25, 34, 128)), ((1, 25, 42, 128), (1, 25, 42, 128)), ((1, 25, 32, 128), (1, 25, 32, 128)), ((1, 38, 25, 128), (1, 38, 25, 128)), ((1, 34, 25, 128), (1, 34, 25, 128)), ((1, 36, 25, 128), (1, 36, 25, 128)), ((1, 25, 30, 128), (1, 25, 30, 128)), ((1, 25, 35, 128), (1, 25, 35, 128)), ((1, 28, 25, 128), (1, 28, 25, 128)), ((1, 26, 25, 128), (1, 26, 25, 128)), ((1, 25, 40, 128), (1, 25, 40, 128)), ((1, 25, 36, 128), (1, 25, 36, 128)), ((1, 24, 42, 128), (1, 24, 42, 128)), ((1, 25, 25, 128), (1, 25, 25, 128)), ((1, 41, 25, 128), (1, 41, 25, 128)), ((1, 25, 37, 128), (1, 25, 37, 128)), ((1, 25, 41, 128), (1, 25, 41, 128)), ((1, 19, 42, 128), (1, 19, 42, 128)), ((1, 39, 25, 128), (1, 39, 25, 128)), ((1, 35, 25, 128), (1, 35, 25, 128)), ((1, 25, 26, 128), (1, 25, 26, 128)), ((1, 25, 33, 128), (1, 25, 33, 128)), ((1, 31, 25, 128), (1, 31, 25, 128)), ((1, 42, 24, 128), (1, 42, 24, 128)), ((1, 37, 25, 128), (1, 37, 25, 128)), ((1, 25, 31, 128), (1, 25, 31, 128)), ((1, 40, 25, 128), (1, 40, 25, 128)), ((1, 22, 42, 128), (1, 22, 42, 128)), ((1, 27, 25, 128), (1, 27, 25, 128)), ((1, 25, 27, 128), (1, 25, 27, 128)), ((1, 33, 25, 128), (1, 33, 25, 128)), ((1, 20, 42, 128), (1, 20, 42, 128)), ((1, 42, 25, 128), (1, 42, 25, 128)), ((1, 23, 42, 128), (1, 23, 42, 128)), ((1, 21, 42, 128), (1, 21, 42, 128)), ((1, 32, 25, 128), (1, 32, 25, 128)), ((1, 25, 29, 128), (1, 25, 29, 128)), ((1, 42, 19, 128), (1, 42, 19, 128)), ((1, 25, 28, 128), (1, 25, 28, 128)), ((1, 18, 42, 128), (1, 18, 42, 128)), ((1, 42, 20, 128), (1, 42, 20, 128)), ((1, 30, 25, 128), (1, 30, 25, 128)), ((1, 11, 42, 128), (1, 11, 42, 128)), ((1, 13, 42, 128), (1, 13, 42, 128)), ((1, 15, 42, 128), (1, 15, 42, 128)), ((1, 29, 25, 128), (1, 29, 25, 128)), ((1, 42, 22, 128), (1, 42, 22, 128)), ((1, 16, 42, 128), (1, 16, 42, 128)), ((1, 12, 42, 128), (1, 12, 42, 128)), ((1, 42, 16, 128), (1, 42, 16, 128)), ((1, 14, 42, 128), (1, 14, 42, 128)), ((1, 17, 42, 128), (1, 17, 42, 128)), ((1, 42, 23, 128), (1, 42, 23, 128))],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
            seq_name='tensors',
        ),
    ),

    'permute': dict(
        name=["permute"],
        interface=["torch.Tensor"],
        para=dict(
            dims=[(0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2), (0, 3, 1, 2)],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 35, 25, 256), (1, 25, 38, 256), (1, 25, 39, 256), (1, 25, 34, 256), (1, 25, 42, 256), (1, 25, 32, 256), (1, 38, 25, 256), (1, 34, 25, 256), (1, 36, 25, 256), (1, 25, 30, 256), (1, 25, 35, 256), (1, 28, 25, 256), (1, 26, 25, 256), (1, 25, 40, 256), (1, 25, 36, 256), (1, 24, 42, 256), (1, 25, 25, 256), (1, 41, 25, 256), (1, 25, 37, 256), (1, 25, 41, 256), (1, 19, 42, 256), (1, 39, 25, 256), (1, 35, 25, 256), (1, 25, 26, 256), (1, 25, 33, 256), (1, 31, 25, 256), (1, 42, 24, 256), (1, 37, 25, 256), (1, 25, 31, 256), (1, 40, 25, 256), (1, 22, 42, 256), (1, 27, 25, 256), (1, 25, 27, 256), (1, 33, 25, 256), (1, 20, 42, 256), (1, 42, 25, 256), (1, 23, 42, 256), (1, 21, 42, 256), (1, 32, 25, 256), (1, 25, 29, 256), (1, 42, 19, 256), (1, 25, 28, 256), (1, 18, 42, 256), (1, 42, 20, 256), (1, 30, 25, 256), (1, 11, 42, 256), (1, 13, 42, 256), (1, 15, 42, 256), (1, 29, 25, 256), (1, 42, 22, 256), (1, 16, 42, 256), (1, 12, 42, 256), (1, 42, 16, 256), (1, 14, 42, 256), (1, 17, 42, 256), (1, 42, 23, 256)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'permute_1': dict(
        name=["permute"],
        interface=["torch.Tensor"],
        para=dict(
            dims=[(2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0), (2, 0, 1), (1, 2, 0)],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 256, 875), (875, 2, 256), (1, 256, 950), (950, 1, 256), (1, 256, 975), (975, 1, 256), (1, 256, 850), (850, 1, 256), (1, 256, 1050), (1050, 1, 256), (1, 256, 800), (800, 1, 256), (1, 256, 900), (900, 1, 256), (1, 256, 750), (750, 1, 256), (1, 256, 875), (875, 1, 256), (1, 256, 700), (700, 1, 256), (1, 256, 650), (650, 1, 256), (1, 256, 1000), (1000, 1, 256), (1, 256, 1008), (1008, 1, 256), (1, 256, 625), (625, 1, 256), (1, 256, 1025), (1025, 1, 256), (1, 256, 925), (925, 1, 256), (1, 256, 798), (798, 1, 256), (1, 256, 825), (825, 1, 256), (1, 256, 775), (775, 1, 256), (1, 256, 924), (924, 1, 256), (1, 256, 675), (675, 1, 256), (1, 256, 840), (840, 1, 256), (1, 256, 966), (966, 1, 256), (1, 256, 882), (882, 1, 256), (1, 256, 725), (725, 1, 256), (1, 256, 756), (756, 1, 256), (1, 256, 462), (462, 1, 256), (1, 256, 546), (546, 1, 256), (1, 256, 630), (630, 1, 256), (1, 256, 672), (672, 1, 256), (1, 256, 504), (504, 1, 256), (1, 256, 588), (588, 1, 256), (1, 256, 714), (714, 1, 256)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'add_2': dict(
        name=["add"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(875, 2, 256), (100, 2, 256), (1, 1), (100, 1), (100, 1), (11, 1), (100, 1), (100, 11), (200, 1), (200,), (), (950, 1, 256), (100, 1, 256), (975, 1, 256), (850, 1, 256), (1050, 1, 256), (800, 1, 256), (900, 1, 256), (750, 1, 256), (875, 1, 256), (700, 1, 256), (650, 1, 256), (1000, 1, 256), (1008, 1, 256), (625, 1, 256), (1025, 1, 256), (925, 1, 256), (798, 1, 256), (825, 1, 256), (775, 1, 256), (924, 1, 256), (675, 1, 256), (840, 1, 256), (966, 1, 256), (882, 1, 256), (725, 1, 256), (756, 1, 256), (462, 1, 256), (546, 1, 256), (630, 1, 256), (672, 1, 256), (504, 1, 256), (588, 1, 256), (714, 1, 256)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["other"],
                    "shape": [(875, 2, 256), (100, 2, 256), (1, 1), (100, 1), (1, 1), (11, 1), (1, 11), (100, 11), (200, 1), (200,), (), (950, 1, 256), (100, 1, 256), (975, 1, 256), (850, 1, 256), (1050, 1, 256), (800, 1, 256), (900, 1, 256), (750, 1, 256), (875, 1, 256), (700, 1, 256), (650, 1, 256), (1000, 1, 256), (1008, 1, 256), (625, 1, 256), (1025, 1, 256), (925, 1, 256), (798, 1, 256), (825, 1, 256), (775, 1, 256), (924, 1, 256), (675, 1, 256), (840, 1, 256), (966, 1, 256), (882, 1, 256), (725, 1, 256), (756, 1, 256), (462, 1, 256), (546, 1, 256), (630, 1, 256), (672, 1, 256), (504, 1, 256), (588, 1, 256), (714, 1, 256)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'linear': dict(
        name=["linear"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "requires_grad": [True],
                    "shape": [(875, 2, 256), (875, 2, 256), (875, 2, 2048), (100, 2, 256), (100, 2, 256), (100, 2, 2048), (6, 2, 100, 256), (6, 2, 100, 256), (6, 2, 100, 256), (950, 1, 256), (950, 1, 256), (950, 1, 2048), (100, 1, 256), (100, 1, 256), (100, 1, 2048), (6, 1, 100, 256), (6, 1, 100, 256), (6, 1, 100, 256), (975, 1, 256), (975, 1, 256), (975, 1, 2048), (850, 1, 256), (850, 1, 256), (850, 1, 2048), (1050, 1, 256), (1050, 1, 256), (1050, 1, 2048), (800, 1, 256), (800, 1, 256), (800, 1, 2048), (900, 1, 256), (900, 1, 256), (900, 1, 2048), (750, 1, 256), (750, 1, 256), (750, 1, 2048), (875, 1, 256), (875, 1, 256), (875, 1, 2048), (700, 1, 256), (700, 1, 256), (700, 1, 2048), (650, 1, 256), (650, 1, 256), (650, 1, 2048), (1000, 1, 256), (1000, 1, 256), (1000, 1, 2048), (1008, 1, 256), (1008, 1, 256), (1008, 1, 2048), (625, 1, 256), (625, 1, 256), (625, 1, 2048), (1025, 1, 256), (1025, 1, 256), (1025, 1, 2048), (925, 1, 256), (925, 1, 256), (925, 1, 2048), (798, 1, 256), (798, 1, 256), (798, 1, 2048), (825, 1, 256), (825, 1, 256), (825, 1, 2048), (775, 1, 256), (775, 1, 256), (775, 1, 2048), (924, 1, 256), (924, 1, 256), (924, 1, 2048), (675, 1, 256), (675, 1, 256), (675, 1, 2048), (840, 1, 256), (840, 1, 256), (840, 1, 2048), (966, 1, 256), (966, 1, 256), (966, 1, 2048), (882, 1, 256), (882, 1, 256), (882, 1, 2048), (725, 1, 256), (725, 1, 256), (725, 1, 2048), (756, 1, 256), (756, 1, 256), (756, 1, 2048), (462, 1, 256), (462, 1, 256), (462, 1, 2048), (546, 1, 256), (546, 1, 256), (546, 1, 2048), (630, 1, 256), (630, 1, 256), (630, 1, 2048), (672, 1, 256), (672, 1, 256), (672, 1, 2048), (504, 1, 256), (504, 1, 256), (504, 1, 2048), (588, 1, 256), (588, 1, 256), (588, 1, 2048), (714, 1, 256), (714, 1, 256), (714, 1, 2048)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["weight"],
                    "requires_grad": [True],
                    "shape": [(256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (81, 256), (256, 256), (4, 256), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (81, 256), (256, 256), (4, 256), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048), (256, 256), (2048, 256), (256, 2048)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["bias"],
                    "requires_grad": [True],
                    "shape": [(256,), (2048,), (256,), (256,), (2048,), (256,), (81,), (256,), (4,), (256,), (2048,), (256,), (256,), (2048,), (256,), (81,), (256,), (4,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,), (256,), (2048,), (256,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'transpose': dict(
        name=["transpose"],
        interface=["torch.Tensor"],
        para=dict(
            dim0=[0, -2, 0, 0, -2, 0, 1, 0, -2, 0, 0, -2, 0, 1, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0, 0, -2, 0],
            dim1=[1, -1, 1, 1, -1, 1, 2, 1, -1, 1, 1, -1, 1, 2, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1, 1, -1, 1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(875, 16, 32), (16, 875, 32), (16, 875, 32), (100, 16, 32), (16, 100, 32), (16, 100, 32), (6, 100, 2, 256), (950, 8, 32), (8, 950, 32), (8, 950, 32), (100, 8, 32), (8, 100, 32), (8, 100, 32), (6, 100, 1, 256), (975, 8, 32), (8, 975, 32), (8, 975, 32), (850, 8, 32), (8, 850, 32), (8, 850, 32), (1050, 8, 32), (8, 1050, 32), (8, 1050, 32), (800, 8, 32), (8, 800, 32), (8, 800, 32), (900, 8, 32), (8, 900, 32), (8, 900, 32), (750, 8, 32), (8, 750, 32), (8, 750, 32), (875, 8, 32), (8, 875, 32), (8, 875, 32), (700, 8, 32), (8, 700, 32), (8, 700, 32), (650, 8, 32), (8, 650, 32), (8, 650, 32), (1000, 8, 32), (8, 1000, 32), (8, 1000, 32), (1008, 8, 32), (8, 1008, 32), (8, 1008, 32), (625, 8, 32), (8, 625, 32), (8, 625, 32), (1025, 8, 32), (8, 1025, 32), (8, 1025, 32), (925, 8, 32), (8, 925, 32), (8, 925, 32), (798, 8, 32), (8, 798, 32), (8, 798, 32), (825, 8, 32), (8, 825, 32), (8, 825, 32), (775, 8, 32), (8, 775, 32), (8, 775, 32), (924, 8, 32), (8, 924, 32), (8, 924, 32), (675, 8, 32), (8, 675, 32), (8, 675, 32), (840, 8, 32), (8, 840, 32), (8, 840, 32), (966, 8, 32), (8, 966, 32), (8, 966, 32), (882, 8, 32), (8, 882, 32), (8, 882, 32), (725, 8, 32), (8, 725, 32), (8, 725, 32), (756, 8, 32), (8, 756, 32), (8, 756, 32), (462, 8, 32), (8, 462, 32), (8, 462, 32), (546, 8, 32), (8, 546, 32), (8, 546, 32), (630, 8, 32), (8, 630, 32), (8, 630, 32), (672, 8, 32), (8, 672, 32), (8, 672, 32), (504, 8, 32), (8, 504, 32), (8, 504, 32), (588, 8, 32), (8, 588, 32), (8, 588, 32), (714, 8, 32), (8, 714, 32), (8, 714, 32)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'expand': dict(
        name=["expand"],
        interface=["torch.Tensor"],
        para=dict(
            size=[(-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1), (-1, 8, -1, -1)],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 1, 1, 875), (1, 1, 1, 950), (1, 1, 1, 975), (1, 1, 1, 850), (1, 1, 1, 1050), (1, 1, 1, 800), (1, 1, 1, 900), (1, 1, 1, 750), (1, 1, 1, 875), (1, 1, 1, 700), (1, 1, 1, 650), (1, 1, 1, 1000), (1, 1, 1, 1008), (1, 1, 1, 625), (1, 1, 1, 1025), (1, 1, 1, 925), (1, 1, 1, 798), (1, 1, 1, 825), (1, 1, 1, 775), (1, 1, 1, 924), (1, 1, 1, 675), (1, 1, 1, 840), (1, 1, 1, 966), (1, 1, 1, 882), (1, 1, 1, 725), (1, 1, 1, 756), (1, 1, 1, 462), (1, 1, 1, 546), (1, 1, 1, 630), (1, 1, 1, 672), (1, 1, 1, 504), (1, 1, 1, 588), (1, 1, 1, 714)],
                    "dtype": [Dtype.bool],
                    "gen_fn": Genfunc.mask,
                },
            ],
        ),
    ),

    'masked_fill': dict(
        name=["masked_fill"],
        is_inplace=[True],
        interface=["torch.Tensor"],
        para=dict(
            value=[float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf"), float("-inf")],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(16, 1, 875), (8, 1, 950), (8, 1, 975), (8, 1, 850), (8, 1, 1050), (8, 1, 800), (8, 1, 900), (8, 1, 750), (8, 1, 875), (8, 1, 700), (8, 1, 650), (8, 1, 1000), (8, 1, 1008), (8, 1, 625), (8, 1, 1025), (8, 1, 925), (8, 1, 798), (8, 1, 825), (8, 1, 775), (8, 1, 924), (8, 1, 675), (8, 1, 840), (8, 1, 966), (8, 1, 882), (8, 1, 725), (8, 1, 756), (8, 1, 462), (8, 1, 546), (8, 1, 630), (8, 1, 672), (8, 1, 504), (8, 1, 588), (8, 1, 714)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["mask"],
                    "shape": [(16, 1, 875), (8, 1, 950), (8, 1, 975), (8, 1, 850), (8, 1, 1050), (8, 1, 800), (8, 1, 900), (8, 1, 750), (8, 1, 875), (8, 1, 700), (8, 1, 650), (8, 1, 1000), (8, 1, 1008), (8, 1, 625), (8, 1, 1025), (8, 1, 925), (8, 1, 798), (8, 1, 825), (8, 1, 775), (8, 1, 924), (8, 1, 675), (8, 1, 840), (8, 1, 966), (8, 1, 882), (8, 1, 725), (8, 1, 756), (8, 1, 462), (8, 1, 546), (8, 1, 630), (8, 1, 672), (8, 1, 504), (8, 1, 588), (8, 1, 714)],
                    "dtype": [Dtype.bool],
                    "gen_fn": Genfunc.mask,
                },
            ],
        ),
    ),

    'bmm': dict(
        name=["bmm"],
        interface=["torch"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(16, 875, 32), (16, 875, 875), (16, 100, 32), (16, 100, 100), (16, 100, 32), (16, 100, 875), (8, 950, 32), (8, 950, 950), (8, 100, 32), (8, 100, 100), (8, 100, 32), (8, 100, 950), (8, 975, 32), (8, 975, 975), (8, 100, 32), (8, 100, 975), (8, 850, 32), (8, 850, 850), (8, 100, 32), (8, 100, 850), (8, 1050, 32), (8, 1050, 1050), (8, 100, 32), (8, 100, 1050), (8, 800, 32), (8, 800, 800), (8, 100, 32), (8, 100, 800), (8, 900, 32), (8, 900, 900), (8, 100, 32), (8, 100, 900), (8, 750, 32), (8, 750, 750), (8, 100, 32), (8, 100, 750), (8, 875, 32), (8, 875, 875), (8, 100, 32), (8, 100, 875), (8, 700, 32), (8, 700, 700), (8, 100, 32), (8, 100, 700), (8, 650, 32), (8, 650, 650), (8, 100, 32), (8, 100, 650), (8, 1000, 32), (8, 1000, 1000), (8, 100, 32), (8, 100, 1000), (8, 1008, 32), (8, 1008, 1008), (8, 100, 32), (8, 100, 1008), (8, 625, 32), (8, 625, 625), (8, 100, 32), (8, 100, 625), (8, 1025, 32), (8, 1025, 1025), (8, 100, 32), (8, 100, 1025), (8, 925, 32), (8, 925, 925), (8, 100, 32), (8, 100, 925), (8, 798, 32), (8, 798, 798), (8, 100, 32), (8, 100, 798), (8, 825, 32), (8, 825, 825), (8, 100, 32), (8, 100, 825), (8, 775, 32), (8, 775, 775), (8, 100, 32), (8, 100, 775), (8, 924, 32), (8, 924, 924), (8, 100, 32), (8, 100, 924), (8, 675, 32), (8, 675, 675), (8, 100, 32), (8, 100, 675), (8, 840, 32), (8, 840, 840), (8, 100, 32), (8, 100, 840), (8, 966, 32), (8, 966, 966), (8, 100, 32), (8, 100, 966), (8, 882, 32), (8, 882, 882), (8, 100, 32), (8, 100, 882), (8, 725, 32), (8, 725, 725), (8, 100, 32), (8, 100, 725), (8, 756, 32), (8, 756, 756), (8, 100, 32), (8, 100, 756), (8, 462, 32), (8, 462, 462), (8, 100, 32), (8, 100, 462), (8, 546, 32), (8, 546, 546), (8, 100, 32), (8, 100, 546), (8, 630, 32), (8, 630, 630), (8, 100, 32), (8, 100, 630), (8, 672, 32), (8, 672, 672), (8, 100, 32), (8, 100, 672), (8, 504, 32), (8, 504, 504), (8, 100, 32), (8, 100, 504), (8, 588, 32), (8, 588, 588), (8, 100, 32), (8, 100, 588), (8, 714, 32), (8, 714, 714), (8, 100, 32), (8, 100, 714)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["mat2"],
                    "shape": [(16, 32, 875), (16, 875, 32), (16, 32, 100), (16, 100, 32), (16, 32, 875), (16, 875, 32), (8, 32, 950), (8, 950, 32), (8, 32, 100), (8, 100, 32), (8, 32, 950), (8, 950, 32), (8, 32, 975), (8, 975, 32), (8, 32, 975), (8, 975, 32), (8, 32, 850), (8, 850, 32), (8, 32, 850), (8, 850, 32), (8, 32, 1050), (8, 1050, 32), (8, 32, 1050), (8, 1050, 32), (8, 32, 800), (8, 800, 32), (8, 32, 800), (8, 800, 32), (8, 32, 900), (8, 900, 32), (8, 32, 900), (8, 900, 32), (8, 32, 750), (8, 750, 32), (8, 32, 750), (8, 750, 32), (8, 32, 875), (8, 875, 32), (8, 32, 875), (8, 875, 32), (8, 32, 700), (8, 700, 32), (8, 32, 700), (8, 700, 32), (8, 32, 650), (8, 650, 32), (8, 32, 650), (8, 650, 32), (8, 32, 1000), (8, 1000, 32), (8, 32, 1000), (8, 1000, 32), (8, 32, 1008), (8, 1008, 32), (8, 32, 1008), (8, 1008, 32), (8, 32, 625), (8, 625, 32), (8, 32, 625), (8, 625, 32), (8, 32, 1025), (8, 1025, 32), (8, 32, 1025), (8, 1025, 32), (8, 32, 925), (8, 925, 32), (8, 32, 925), (8, 925, 32), (8, 32, 798), (8, 798, 32), (8, 32, 798), (8, 798, 32), (8, 32, 825), (8, 825, 32), (8, 32, 825), (8, 825, 32), (8, 32, 775), (8, 775, 32), (8, 32, 775), (8, 775, 32), (8, 32, 924), (8, 924, 32), (8, 32, 924), (8, 924, 32), (8, 32, 675), (8, 675, 32), (8, 32, 675), (8, 675, 32), (8, 32, 840), (8, 840, 32), (8, 32, 840), (8, 840, 32), (8, 32, 966), (8, 966, 32), (8, 32, 966), (8, 966, 32), (8, 32, 882), (8, 882, 32), (8, 32, 882), (8, 882, 32), (8, 32, 725), (8, 725, 32), (8, 32, 725), (8, 725, 32), (8, 32, 756), (8, 756, 32), (8, 32, 756), (8, 756, 32), (8, 32, 462), (8, 462, 32), (8, 32, 462), (8, 462, 32), (8, 32, 546), (8, 546, 32), (8, 32, 546), (8, 546, 32), (8, 32, 630), (8, 630, 32), (8, 32, 630), (8, 630, 32), (8, 32, 672), (8, 672, 32), (8, 32, 672), (8, 672, 32), (8, 32, 504), (8, 504, 32), (8, 32, 504), (8, 504, 32), (8, 32, 588), (8, 588, 32), (8, 32, 588), (8, 588, 32), (8, 32, 714), (8, 714, 32), (8, 32, 714), (8, 714, 32)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'softmax': dict(
        name=["softmax"],
        saved_args=dict(output=0),
        para=dict(
            dim=[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(16, 875, 875), (16, 100, 100), (16, 100, 875), (8, 950, 950), (8, 100, 100), (8, 100, 950), (100, 81), (8, 975, 975), (8, 100, 975), (8, 850, 850), (8, 100, 850), (8, 1050, 1050), (8, 100, 1050), (8, 800, 800), (8, 100, 800), (8, 900, 900), (8, 100, 900), (8, 750, 750), (8, 100, 750), (8, 875, 875), (8, 100, 875), (8, 700, 700), (8, 100, 700), (8, 650, 650), (8, 100, 650), (8, 1000, 1000), (8, 100, 1000), (8, 1008, 1008), (8, 100, 1008), (8, 625, 625), (8, 100, 625), (8, 1025, 1025), (8, 100, 1025), (8, 925, 925), (8, 100, 925), (8, 798, 798), (8, 100, 798), (8, 825, 825), (8, 100, 825), (8, 775, 775), (8, 100, 775), (8, 924, 924), (8, 100, 924), (8, 675, 675), (8, 100, 675), (8, 840, 840), (8, 100, 840), (8, 966, 966), (8, 100, 966), (8, 882, 882), (8, 100, 882), (8, 725, 725), (8, 100, 725), (8, 756, 756), (8, 100, 756), (8, 462, 462), (8, 100, 462), (8, 546, 546), (8, 100, 546), (8, 630, 630), (8, 100, 630), (8, 672, 672), (8, 100, 672), (8, 504, 504), (8, 100, 504), (8, 588, 588), (8, 100, 588), (8, 714, 714), (8, 100, 714)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'dropout': dict(
        name=["dropout"],
        no_output_ref=True,
        para=dict(
            p=[0.1, 0.1, 0.1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(16, 875, 875), (16, 100, 100), (16, 100, 875)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'sum': dict(
        name=["sum"],
        interface=["torch.Tensor"],
        para=dict(
            dim=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(2, 8, 875, 875), (2, 8, 100, 100), (2, 8, 100, 875), (1, 8, 950, 950), (1, 8, 100, 100), (1, 8, 100, 950), (1, 8, 975, 975), (1, 8, 100, 975), (1, 8, 850, 850), (1, 8, 100, 850), (1, 8, 1050, 1050), (1, 8, 100, 1050), (1, 8, 800, 800), (1, 8, 100, 800), (1, 8, 900, 900), (1, 8, 100, 900), (1, 8, 750, 750), (1, 8, 100, 750), (1, 8, 875, 875), (1, 8, 100, 875), (1, 8, 700, 700), (1, 8, 100, 700), (1, 8, 650, 650), (1, 8, 100, 650), (1, 8, 1000, 1000), (1, 8, 100, 1000), (1, 8, 1008, 1008), (1, 8, 100, 1008), (1, 8, 625, 625), (1, 8, 100, 625), (1, 8, 1025, 1025), (1, 8, 100, 1025), (1, 8, 925, 925), (1, 8, 100, 925), (1, 8, 798, 798), (1, 8, 100, 798), (1, 8, 825, 825), (1, 8, 100, 825), (1, 8, 775, 775), (1, 8, 100, 775), (1, 8, 924, 924), (1, 8, 100, 924), (1, 8, 675, 675), (1, 8, 100, 675), (1, 8, 840, 840), (1, 8, 100, 840), (1, 8, 966, 966), (1, 8, 100, 966), (1, 8, 882, 882), (1, 8, 100, 882), (1, 8, 725, 725), (1, 8, 100, 725), (1, 8, 756, 756), (1, 8, 100, 756), (1, 8, 462, 462), (1, 8, 100, 462), (1, 8, 546, 546), (1, 8, 100, 546), (1, 8, 630, 630), (1, 8, 100, 630), (1, 8, 672, 672), (1, 8, 100, 672), (1, 8, 504, 504), (1, 8, 100, 504), (1, 8, 588, 588), (1, 8, 100, 588), (1, 8, 714, 714), (1, 8, 100, 714)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'dropout_1': dict(
        name=["dropout"],
        no_output_ref=True,
        para=dict(
            p=[0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1, 0.0, 0.1, 0.1],
            training=[True, True, True, True, True, True, True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False],
            inplace=[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(875, 2, 256), (875, 2, 256), (875, 2, 2048), (100, 2, 256), (100, 2, 256), (100, 2, 2048), (6, 2, 100, 256), (950, 1, 256), (950, 1, 256), (950, 1, 2048), (100, 1, 256), (100, 1, 256), (100, 1, 2048), (6, 1, 100, 256), (975, 1, 256), (975, 1, 256), (975, 1, 2048), (850, 1, 256), (850, 1, 256), (850, 1, 2048), (1050, 1, 256), (1050, 1, 256), (1050, 1, 2048), (800, 1, 256), (800, 1, 256), (800, 1, 2048), (900, 1, 256), (900, 1, 256), (900, 1, 2048), (750, 1, 256), (750, 1, 256), (750, 1, 2048), (875, 1, 256), (875, 1, 256), (875, 1, 2048), (700, 1, 256), (700, 1, 256), (700, 1, 2048), (650, 1, 256), (650, 1, 256), (650, 1, 2048), (1000, 1, 256), (1000, 1, 256), (1000, 1, 2048), (1008, 1, 256), (1008, 1, 256), (1008, 1, 2048), (625, 1, 256), (625, 1, 256), (625, 1, 2048), (1025, 1, 256), (1025, 1, 256), (1025, 1, 2048), (925, 1, 256), (925, 1, 256), (925, 1, 2048), (798, 1, 256), (798, 1, 256), (798, 1, 2048), (825, 1, 256), (825, 1, 256), (825, 1, 2048), (775, 1, 256), (775, 1, 256), (775, 1, 2048), (924, 1, 256), (924, 1, 256), (924, 1, 2048), (675, 1, 256), (675, 1, 256), (675, 1, 2048), (840, 1, 256), (840, 1, 256), (840, 1, 2048), (966, 1, 256), (966, 1, 256), (966, 1, 2048), (882, 1, 256), (882, 1, 256), (882, 1, 2048), (725, 1, 256), (725, 1, 256), (725, 1, 2048), (756, 1, 256), (756, 1, 256), (756, 1, 2048), (462, 1, 256), (462, 1, 256), (462, 1, 2048), (546, 1, 256), (546, 1, 256), (546, 1, 2048), (630, 1, 256), (630, 1, 256), (630, 1, 2048), (672, 1, 256), (672, 1, 256), (672, 1, 2048), (504, 1, 256), (504, 1, 256), (504, 1, 2048), (588, 1, 256), (588, 1, 256), (588, 1, 2048), (714, 1, 256), (714, 1, 256), (714, 1, 2048)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'layer_norm': dict(
        name=["layer_norm"],
        para=dict(
            normalized_shape=[(256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,)],
            eps=[1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "requires_grad": [True],
                    "shape": [(875, 2, 256), (100, 2, 256), (950, 1, 256), (100, 1, 256), (975, 1, 256), (850, 1, 256), (1050, 1, 256), (800, 1, 256), (900, 1, 256), (750, 1, 256), (875, 1, 256), (700, 1, 256), (650, 1, 256), (1000, 1, 256), (1008, 1, 256), (625, 1, 256), (1025, 1, 256), (925, 1, 256), (798, 1, 256), (825, 1, 256), (775, 1, 256), (924, 1, 256), (675, 1, 256), (840, 1, 256), (966, 1, 256), (882, 1, 256), (725, 1, 256), (756, 1, 256), (462, 1, 256), (546, 1, 256), (630, 1, 256), (672, 1, 256), (504, 1, 256), (588, 1, 256), (714, 1, 256)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["weight"],
                    "requires_grad": [True],
                    "shape": [(256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["bias"],
                    "requires_grad": [True],
                    "shape": [(256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,), (256,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'stack_1': dict(
        name=["stack"],
        interface=["torch"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["tensors"],
                    "shape
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
            seq_name='tensors',
        ),
    ),

    'sigmoid': dict(
        name=["sigmoid"],
        interface=["torch.Tensor"],
        saved_args=dict(output=0),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "requires_grad": [True],
                    "shape": [(6, 2, 100, 4), (6, 1, 100, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'neg': dict(
        name=["neg"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100, 1), (100, 11)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'split': dict(
        name=["split"],
        interface=["torch.Tensor"],
        para=dict(
            split_size_or_sections=[(1, 1, 1, 1), (1, 1, 1, 1), (1, 1, 1, 1), (1, 1, 1, 1)],
            dim=[-1, -1, -1, -1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(1, 4), (100, 4), (11, 4), (200, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'sub_1': dict(
        name=["sub"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(1, 1), (100, 1), (100,), (1,), (100, 1, 2), (11, 1), (11,), (100, 11, 2), (100, 11), (200, 1), (200,), (200, 2), (200, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["other"],
                    "shape": [(1, 1), (100, 1), (100,), (1,), (100, 1, 2), (11, 1), (11,), (100, 11, 2), (100, 11), (200, 1), (200,), (200, 2), (200, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'cdist': dict(
        name=["cdist"],
        interface=["torch"],
        para=dict(
            p=[1, 1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["x1"],
                    "requires_grad": [True],
                    "shape": [(100, 4), (100, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["x2"],
                    "requires_grad": [True],
                    "shape": [(1, 4), (11, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'mul_2': dict(
        name=["mul"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100, 4), (100,), (1,), (100, 1), (11,), (100, 11), (200,), (200, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["other"],
                    "shape": [(1, 4), (100,), (1,), (100, 1), (11,), (100, 11), (200,), (200, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'maximum': dict(
        name=["maximum"],
        interface=["torch"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100, 1, 2), (100, 1), (100, 1, 2), (100, 11), (200, 2), (200,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["other"],
                    "shape": [(1, 1, 2), (1,), (1, 11, 2), (1,), (200, 2), (1,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'minimum': dict(
        name=["minimum"],
        interface=["torch"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100, 1, 2), (100, 1, 2), (200, 2)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["other"],
                    "shape": [(1, 1, 2), (1, 11, 2), (200, 2)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'clamp': dict(
        name=["clamp"],
        interface=["torch.Tensor"],
        para=dict(
            min=[0, 0, 0],
            max=[None, None, None],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100, 1, 2), (100, 11, 2), (200, 2)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'add_3': dict(
        name=["add"],
        interface=["torch.Tensor"],
        para=dict(
            other=[1, 1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(1,), (11,)],
                    "dtype": [Dtype.int64],
                    "gen_fn": Genfunc.randint,
                },
            ],
        ),
    ),

    'gt': dict(
        name=["gt"],
        interface=["torch.Tensor"],
        para=dict(
            other=[0],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100,)],
                    "dtype": [Dtype.int64],
                    "gen_fn": Genfunc.randint,
                },
            ],
        ),
    ),

    'nonzero': dict(
        name=["nonzero"],
        interface=["torch"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100,)],
                    "dtype": [Dtype.bool],
                    "gen_fn": Genfunc.mask,
                },
            ],
        ),
    ),

    'unique': dict(
        name=["unique"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(1,), (99,), (11,), (89,)],
                    "dtype": [Dtype.int64],
                    "gen_fn": Genfunc.randint,
                },
            ],
        ),
    ),

    'eq': dict(
        name=["eq"],
        interface=["torch.Tensor"],
        para=dict(
            other=[0],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100,)],
                    "dtype": [Dtype.int64],
                    "gen_fn": Genfunc.randint,
                },
            ],
        ),
    ),

    'sub_2': dict(
        name=["sub"],
        interface=["torch.Tensor"],
        para=dict(
            other=[1, 1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(1,), (11,)],
                    "dtype": [Dtype.int64],
                    "gen_fn": Genfunc.randint,
                },
            ],
        ),
    ),

    'cat_1': dict(
        name=["cat"],
        interface=["torch"],
        para=dict(
            dim=[0],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["tensors"],
                    "shape": [((100,), (100,))],
                    "dtype": [Dtype.int64],
                    "gen_fn": Genfunc.randint,
                },
            ],
            seq_name='tensors',
        ),
    ),

    'cat_2': dict(
        name=["cat"],
        interface=["torch"],
        para=dict(
            dim=[0, 0, -1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["tensors"],
                    "shape": [((100,), (100,)), ((100, 4), (100, 4)), ((100, 4), (100, 1))],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
            seq_name='tensors',
        ),
    ),

    'cross_entropy': dict(
        name=["cross_entropy"],
        para=dict(
            ignore_index=[-100],
            reduction=['none'],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "requires_grad": [True],
                    "shape": [(200, 81)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["target"],
                    "shape": [(200,)],
                    "dtype": [Dtype.int64],
                    "gen_fn": Genfunc.randint,
                },
            ],
        ),
    ),

    'sum_1': dict(
        name=["sum"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(200,), (200, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'clamp_1': dict(
        name=["clamp"],
        interface=["torch"],
        para=dict(
            min=[1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(1,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'gt_1': dict(
        name=["gt"],
        interface=["torch.Tensor"],
        para=dict(
            other=[0],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(200, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'any': dict(
        name=["any"],
        interface=["torch"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(200, 4)],
                    "dtype": [Dtype.bool],
                    "gen_fn": Genfunc.mask,
                },
            ],
        ),
    ),

    'mean': dict(
        name=["mean"],
        interface=["torch.Tensor"],
        para=dict(
            dim=[-1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(200, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'sub_3': dict(
        name=["sub"],
        interface=["torch.Tensor"],
        para=dict(
            other=[1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(200,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'abs': dict(
        name=["abs"],
        interface=["torch"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(200, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'mean_1': dict(
        name=["mean"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [()],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'add_4': dict(
        name=["add"],
        interface=["torch.Tensor"],
        para=dict(
            other=[0],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [()],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'norm': dict(
        name=["norm"],
        interface=["torch"],
        para=dict(
            p=[2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (768, 256), (768,), (256, 256), (256,), (2048, 256), (2048,), (256, 2048), (256, 2048, 1, 1), (81, 256), (81,), (4, 256), (4,), (100, 256), (235,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'div_4': dict(
        name=["div"],
        interface=["torch.Tensor"],
        para=dict(
            other=[0.1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [()],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'reciprocal': dict(
        name=["reciprocal"],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [()],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'clamp_2': dict(
        name=["clamp"],
        interface=["torch"],
        para=dict(
            max=[1.0],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [()],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'mul_3': dict(
        name=["mul"],
        is_inplace=[True],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (768, 256), (768,), (256, 256), (256,), (2048, 256), (2048,), (256, 2048), (256, 2048, 1, 1), (81, 256), (81,), (4, 256), (4,), (100, 256)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["other"],
                    "shape": [(), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), ()],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'adamw': dict(
        name=["adamw"],
        interface=["CustomizedTest"],
        para=dict(
            step=[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            amsgrad=[False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False],
            beta1=[0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9],
            beta2=[0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999],
            lr=[1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 1e-05, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001],
            weight_decay=[0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001],
            eps=[1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08, 1e-08],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["param", "param_grad"],
                    "shape": [(128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (768, 256), (768,), (256, 256), (256,), (2048, 256), (2048,), (256, 2048), (256, 2048, 1, 1), (81, 256), (81,), (4, 256), (4,), (100, 256)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["exp_avg", "exp_avg_sq", "max_exp_avg_sq"],
                    "shape": [(128, 256, 1, 1), (128, 128, 3, 3), (512, 128, 1, 1), (512, 256, 1, 1), (128, 512, 1, 1), (256, 512, 1, 1), (256, 256, 3, 3), (1024, 256, 1, 1), (1024, 512, 1, 1), (256, 1024, 1, 1), (512, 1024, 1, 1), (512, 512, 3, 3), (2048, 512, 1, 1), (2048, 1024, 1, 1), (512, 2048, 1, 1), (768, 256), (768,), (256, 256), (256,), (2048, 256), (2048,), (256, 2048), (256, 2048, 1, 1), (81, 256), (81,), (4, 256), (4,), (100, 256)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'max': dict(
        name=["max"],
        interface=["torch.Tensor"],
        para=dict(
            dim=[-1],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100, 80)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'topk': dict(
        name=["topk"],
        interface=["torch.Tensor"],
        para=dict(
            k=[100],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'clamp_3': dict(
        name=["clamp"],
        is_inplace=[True],
        interface=["torch.Tensor"],
        para=dict(
            min=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            max=[1199, 800, 1224, 1196, 1067, 1320, 1002, 1202, 1140, 946, 1024, 1108, 1205, 868, 808, 1280, 1185, 1333, 773, 881, 750, 1283, 1208, 1128, 1164, 1129, 1198, 764, 1193, 1201, 1166, 1064, 1299, 604, 1278, 1203, 1313, 1071, 1231, 1156, 1120, 1194, 1065, 1060, 809, 1051, 1069, 762, 1000, 1135, 1267, 1240, 943, 979, 1080, 752, 1174, 1290, 1242, 741, 1293, 1210, 970, 996, 1270, 1303, 689, 1072, 856, 1252, 1094, 1246, 839, 969, 1026, 748, 1076, 1145, 1118, 610, 798, 1075, 859, 1062, 716, 1087, 1058, 656, 1225, 801, 1250, 1081, 749, 1180, 1277, 797, 1039, 1143, 923, 909, 1089, 990, 869, 598, 1216, 1109, 1306, 1190, 1169, 892, 905, 662, 1133, 1049, 1177, 548, 1325, 955, 1036, 698, 667, 931, 1255, 985, 966, 1032, 1161, 658, 1286, 746, 1261, 1222, 883, 877, 862, 1115, 1243, 714, 978, 1188, 983, 1200, 863, 1073, 1053, 1223, 1008, 1006, 1151, 885, 633, 932, 803, 1050, 1117, 1103, 550, 1182, 938, 1014, 1124, 787, 1274, 1249, 1228, 1130, 964, 824, 1237, 1041, 771, 1172, 1148, 1029, 1016, 1090, 1158, 976, 1092, 733, 818, 1096, 1106, 702, 855, 1138, 1061, 1220, 1070, 650, 1258, 1191, 789, 679, 846, 1187, 961, 352, 1045, 900, 794, 1078, 842, 981, 916, 1101, 394, 841, 690, 617, 1163, 451, 727, 627, 899, 602, 1309, 1213, 1105, 813, 948, 766, 758, 1219, 1113, 977, 1125, 1042, 1294, 1020, 1044, 971, 777, 874, 852, 1251, 631, 691, 913, 1154, 786, 1330, 950, 1082, 1043, 1056, 1047, 848, 637, 929, 820, 1153, 935, 1227, 685, 342, 880, 754, 952, 810, 1114, 696, 918, 623, 605, 496, 1034, 654, 901, 1323, 894, 331, 1022, 664, 871, 988, 1003, 1028, 1099, 775, 1296, 731, 644, 933, 1282, 585, 879, 804, 1183, 784, 806, 377, 1316, 1206, 1234, 926, 1012, 737, 998, 660, 1010, 756, 994, 924, 853, 512, 873, 796, 823, 980, 802, 597, 1066, 1085, 987, 1015, 1212, 1005, 652, 769, 887, 886, 897, 968, 941, 404, 739, 1018, 362, 506, 446, 875, 1055, 849, 612, 1295, 725, 624, 962, 477, 1111, 704, 972, 934, 1173, 717, 821, 816, 1093, 648, 673, 555, 908, 444, 921, 992, 1302, 1004, 889, 1238, 1254, 936, 872, 606, 1127, 845, 527, 1146, 736, 781],
        ),
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2), (100, 2)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

    'div_5': dict(
        name=["div"],
        is_inplace=[True],
        interface=["torch.Tensor"],
        tensor_para=dict(
            args=[
                {
                    "ins": ["input"],
                    "shape": [(100, 4)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
                {
                    "ins": ["other"],
                    "shape": [(4,)],
                    "dtype": [Dtype.float32],
                    "gen_fn": Genfunc.randn,
                },
            ],
        ),
    ),

}
